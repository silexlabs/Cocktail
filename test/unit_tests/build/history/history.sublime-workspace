{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Aser",
				"Assert"
			],
			[
				"for",
				"forward"
			],
			[
				"fun",
				"fun	Function"
			],
			[
				"get",
				"getInstance"
			],
			[
				"mous",
				"mouseX	var"
			],
			[
				"cat",
				"category"
			],
			[
				"pub",
				"publicationName	var"
			],
			[
				"ba",
				"background-size"
			],
			[
				"back",
				"background-image"
			],
			[
				"rib",
				"ribbon-icon"
			],
			[
				"tex",
				"text-decoration"
			],
			[
				"Lin",
				"LinkBase"
			],
			[
				"compo",
				"ComponentModel"
			],
			[
				"remove",
				"removeAttribute	function"
			],
			[
				"prop",
				"property"
			],
			[
				"add",
				"addClass"
			],
			[
				"proper",
				"PropertyModel"
			],
			[
				"class",
				"className	var"
			],
			[
				"in",
				"inline-block"
			],
			[
				"maste",
				"masterNode	var"
			],
			[
				"mas",
				"masterName	var"
			],
			[
				"curre",
				"currentMouseY	var"
			],
			[
				"clien",
				"clientX"
			],
			[
				"pu",
				"public"
			],
			[
				"view",
				"viewHtmlDom	var"
			],
			[
				"Boun",
				"boundingBox	var"
			],
			[
				"bod",
				"bodySize	var"
			],
			[
				"elm",
				"elementBox	var"
			],
			[
				"html",
				"htmlDom	var"
			],
			[
				"bo",
				"borderV	var"
			],
			[
				"bord",
				"borderH	var"
			],
			[
				"boe",
				"borderV	var"
			],
			[
				"l",
				"label	Tag"
			],
			[
				"P",
				"PropertyModel"
			],
			[
				"ini",
				"initMediaComp	function"
			],
			[
				"cha",
				"changePending"
			],
			[
				"dra",
				"draggableEvent	var"
			],
			[
				"bor",
				"border-radius"
			],
			[
				"edi",
				"editorInstance"
			],
			[
				"tra",
				"trace"
			],
			[
				"se",
				"setSelectedItem	function"
			],
			[
				"Hml",
				"HtmlDom	js.Dom"
			],
			[
				"getPro",
				"getPropName	function"
			],
			[
				"e",
				"enum	Enum"
			],
			[
				"MIN",
				"MIN_HEIGHT_FOR_DISPLAY_ZONE"
			],
			[
				"di",
				"displayZone	var"
			],
			[
				"displa",
				"displayZone	var"
			],
			[
				"displ",
				"displayZone	var"
			],
			[
				"Html",
				"HtmlDom	js.Dom"
			],
			[
				"dis",
				"displayZoneTemplate	var"
			],
			[
				"con",
				"context	var"
			],
			[
				"rg",
				"rgba()"
			],
			[
				"bac",
				"background-color"
			],
			[
				"elem",
				"elementY	var"
			],
			[
				"eleme",
				"elementX	var"
			],
			[
				"pare",
				"draggedElementParent	var"
			],
			[
				"draggedElement",
				"draggedElementPosition	var"
			],
			[
				"parent",
				"parentNode"
			],
			[
				"root",
				"rootElement	var"
			],
			[
				"model",
				"modelHtmlDom	var"
			],
			[
				"newN",
				"newName	var"
			],
			[
				"Pub",
				"PublicationData"
			],
			[
				"roo",
				"rootElement"
			],
			[
				"Lae",
				"LayerModel"
			],
			[
				"ht",
				"HtmlDom	js.Dom"
			],
			[
				"init",
				"initMediaElements"
			],
			[
				"audio",
				"audioNodes"
			],
			[
				"au",
				"audioNodes"
			],
			[
				"ro",
				"rootElement	var"
			],
			[
				"pos",
				"position"
			],
			[
				"page",
				"pageY"
			],
			[
				"pa",
				"parseInt"
			],
			[
				"sele",
				"selectedItem"
			],
			[
				"Layer",
				"LayerModel"
			],
			[
				"new",
				"newNode"
			],
			[
				"node",
				"nodeName	var"
			],
			[
				"co",
				"component	package"
			],
			[
				"mode",
				"modelHtmlDom"
			],
			[
				"head",
				"headCloseIdx"
			],
			[
				"he",
				"headOpenIdx"
			],
			[
				"vie",
				"viewHtmlDom	var"
			],
			[
				"lin",
				"linkName"
			],
			[
				"Publication",
				"PublicationViewer"
			],
			[
				"CO",
				"ComponentModel	class"
			],
			[
				"Dom",
				"DomTools"
			],
			[
				"tran",
				"transitionData	var"
			],
			[
				"inner",
				"innerHTML	String"
			],
			[
				"Publi",
				"PublicationConfigData"
			],
			[
				"de",
				"debugModeAction"
			],
			[
				"String",
				"StringTools"
			],
			[
				"param",
				"paramName"
			],
			[
				"p",
				"PublicationName"
			],
			[
				"publica",
				"publicationName"
			],
			[
				"a",
				"appendChild( child : js.HtmlDom )	Void"
			],
			[
				"selected",
				"selectedIndex"
			],
			[
				"pages",
				"pagesIds"
			],
			[
				"d",
				"display"
			],
			[
				"Arr",
				"Array"
			],
			[
				"Array",
				"ArrayStore"
			],
			[
				"on",
				"onclick"
			],
			[
				"cre",
				"createElement"
			],
			[
				"L",
				"Layer"
			],
			[
				"s",
				"style"
			],
			[
				"Proper",
				"properties"
			],
			[
				"pro",
				"propArray"
			],
			[
				"getC",
				"getComponents"
			],
			[
				"Ht",
				"HtmlDom"
			],
			[
				"Str",
				"String"
			],
			[
				"ele",
				"elementIdx"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/history/History.hx",
			"settings":
			{
				"buffer_size": 2712,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/history/HistoryData.hx",
			"settings":
			{
				"buffer_size": 822,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\n * Cocktail, HTML rendering engine\n * http://haxe.org/com/libs/cocktail\n *\n * Copyright (c) Silex Labs\n * Cocktail is available under the MIT license\n * http://www.silexlabs.org/labs/cocktail-licensing/\n*/\n\npackage history;\n//import cocktail.core.history.History;\nimport js.Lib;\nimport js.Dom;\n\nimport utest.Assert;\nimport utest.Runner;\nimport utest.ui.Report;\n\n/**\n * Units tests for history API\n */\n\nclass HistoryTests \n{\n	public static function main()\n	{\n		trace(\"...tests begin...\");\n		var runner = new Runner();\n		runner.addCase(new HistoryTests());\n		Report.create(runner);\n		runner.run();\n	}\n\n	public var history:History;\n	\n	public function new() \n	{\n		// init history\n		// history = new History();\n		history = Lib.window.history;\n\n		var stateObj = { \n			title : \"page 1\", \n			url : \"page1.html\",\n		};\n		history.pushState(stateObj, \"page 1\", \"#page1.html\");\n		var stateObj = { \n			title : \"page 2\", \n			url : \"page2.html\",\n		};\n		history.pushState(stateObj, \"page 2\", \"#page2.html\");\n		var stateObj = { \n			title : \"page 3\", \n			url : \"page3.html\",\n		};\n		history.pushState(stateObj, \"page 3\", \"#page3.html\");\n	}\n	/**\n	 * test history methods\n	 */\n	public function testHistoryMethods():Void\n	{\n		trace(\"testHistory\");\n		// Check the length of the history stack\n		//Assert.equals(3, history.length);\n\n		// Check the current state\n		Assert.equals(\"page 3\", history.state.title);\n\n		_testHistoryBack();\n	}\n	public function _testHistoryBack():Void\n	{\n		trace(\"testHistoryBack\");\n		// Send the user agent forward\n		history.back(); \n\n		var async = Assert.createAsync(function(){\n			trace(\"test history async\");\n			Assert.equals(\"page 2\", history.state.title);\n			_testHistoryForward();\n		}, 1000);\n		haxe.Timer.delay(async, 500);\n\n	}\n	public function _testHistoryForward():Void\n	{\n		trace(\"testHistoryForward\");\n		// Send the user agent back\n		history.forward();\n\n		var async = Assert.createAsync(function(){\n			trace(\"test history async\");\n			Assert.equals(\"page 3\", history.state.title);\n			_testHistoryGoNeg();\n		}, 1000);\n		haxe.Timer.delay(async, 500);\n\n	}\n	public function _testHistoryGoNeg():Void\n	{\n		trace(\"testHistoryGoNeg\");\n		// Send the user agent back (negative) or forward (positive)\n		// by a given number of items\n		history.go(-2);\n\n		var async = Assert.createAsync(function(){\n			trace(\"test history async\");\n			Assert.equals(\"page 1\", history.state.title);\n			_testHistoryGoPositive();\n		}, 1000);\n		haxe.Timer.delay(async, 500);\n\n	}\n	public function _testHistoryGoPositive():Void\n	{\n		trace(\"testHistoryGoPositive\");\n		// Send the user agent back (negative) or forward (positive)\n		// by a given number of items\n		history.go(2);\n\n		var async = Assert.createAsync(function(){\n			trace(\"test history async\");\n			Assert.equals(\"page 3\", history.state.title);\n		}, 1000);\n		haxe.Timer.delay(async, 500);\n	}\n	/*\n	 * test history events\n	 */\n	public function testHistoryEvents():Void\n	{\n		Assert.isTrue(true);\n		history.on\n	}\n}",
			"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/test/unit_tests/src/history/HistoryTests.hx",
			"file_size": 2932,
			"file_write_time": 1350734748000000,
			"settings":
			{
				"buffer_size": 2945,
				"line_ending": "Unix"
			}
		},
		{
			"file": "build.hxml",
			"settings":
			{
				"buffer_size": 114,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/js/Dom.hx",
			"settings":
			{
				"buffer_size": 16634,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/HaXe/Hxml.sublime-build",
	"command_palette":
	{
		"height": 348.0,
		"selected_items":
		[
			[
				"Pack",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 139.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/timer/Timer.hx",
		"/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/test/unit_tests/bin/history/historyTest.html",
		"/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/test/unit_tests/build/history/build.hxml",
		"/Users/lexa/Dropbox/fdt-workspace/Cocktail/test/unit_tests/src/geom/MatrixTests.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Cocktail/test/unit_tests/src/history/HistoryTests",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/third-party-tools/ckeditor/config.js",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/interaction/Draggable.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/list/ThemesList.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/readme.txt",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/publication/PublicationModel.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/publication/PublicationService.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/util/FileSystemTools.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/build/build.hxml",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/stage/SelectionController.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/publications/admin/app.css",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/navigation/link/LinkBase.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/layer/LayerModel.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/stage/DropHandlerBase.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/util/DomTools.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/stage/InsertDropHandler.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/component/ComponentModel.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/property/PropertyModel.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/publications/default/app.css",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/index-builder.html",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/navigation/Page.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/page/PageModel.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/navigation/Layer.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/publications/default/index.html",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/list/LayersList.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/PropertyEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/stage/SelectionDropHandler.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/Silex.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/layout/Panel.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/publications/admin/index.html",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/stage/PublicationViewer.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/layout/LayoutBase.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/list/PageListSelector.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/publications/basic-theme/index.html",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/publications/basic-theme/app.css",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/core/Builder.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/list/PageList.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/dialog/FileBrowserDialog.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/EditorBase.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/dialog/TextEditorDialog.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/TextStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/test/src/PublicationsTestClient.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/BoxTypeEditorBase.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/BackgroundStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/old-PageToolbox.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/MenuController.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/dialog/AuthDialog.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/publication/PublicationConfig.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/PositionStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/core/Application.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/list/List.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/stage/old-MasterDropHandler.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/list/XmlList.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/libs/silex/silex.js",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/third-party-tools/kcfinder/js/browser/init.js",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/third-party-tools/ckeditor/ckeditor.html",
		"/Users/lexa/Dropbox/fdt-workspace/IMApp/src/index.html",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/navigation/link/LinkToPage.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/navigation/link/TouchLink.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/third-party-tools/ckeditor/samples/assets/outputxhtml/outputxhtml.css",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/third-party-tools/ckeditor/contents.css",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/HtmlEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/layout/CenterBox.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/BorderStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/BorderColorEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/BorderEditorBase.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/BorderRadiusEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/BorderWidthEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/BoxStyleEditor.hx",
		"/usr/lib/haxe/std/haxe/macro/Context.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/index-player.html",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/third-party-tools/kcfinder/browse.php",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/index.html",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/interpreter/Interpreter.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/stage/MasterDropHandler.hx",
		"/usr/lib/haxe/std/haxe/xml/Parser.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/publications/test 0xxx/index.html",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ModelBase.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/stage/StageDropHandler.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/stage/SelectionMarker.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/layout/Accordion.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/dialog/DialogBase.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/stage/MenuController.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/IBrixComponent.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/navigation/link/LinkClosePage.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/ui/DisplayObject.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/dialog/OpenDialog.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/index-server.html",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/test/build/tests.sublime-project",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/test/build/build.hxml",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/test/build/build-publications-tests.hxml",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/test/build/build-automatic-tests.hxml",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/BlockStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/BoxStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/ClipStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/PositionStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/BlockStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/ClipStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/publications/default 2/index.html",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/PageToolbox.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/BackgroundStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/BoxTypeEditorBase.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/EditorBase.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/MarginStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/PaddingStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/PlacementStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/PropertyEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/RawHtmlEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/TextStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/dialog/ModelDebugger.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/list/PublicationList.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/PageToolbox.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/MarginStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/PaddingStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/PlacementStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/RawHtmlEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/changelog.txt",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/test/build/tests.sublime-workspace",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/test/src/publication-dialogs/index.html",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/test/src/publication-properties-toolbox/index.html",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/test/src/publication-ribbon-toolbox/index.html",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/test/src/publication-selection/index.html",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/test/src/template/TestClient.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/build/build-js-builder.hxml"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"-*.js,-*.php,-*.js.map,-*.sublime-workspace",
			"-*.js,-*.php,-*.js.map",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Event",
			"Event->",
			"html\");",
			");//",
			"Assert.equals",
			"20000",
			"2000",
			"		var async = Assert.createAsync(function(){\n",
			"		// Check the current state\n",
			"	}\n	public function",
			"	}\n	public function _testHistoryForward():Void\n	{\n",
			"function test",
			"\");",
			"	{\n",
			"trace(\"history.length = \"+history.length);\n",
			"html\");",
			", \"",
			"\"- \"+history.state",
			"		history.",
			"history.",
			"+history",
			" history",
			"history",
			"3",
			"stateObj, \"page",
			"//			url",
			"page1.html",
			"			url",
			"?",
			"geom",
			"selectable",
			"head",
			"10000",
			"important",
			"cke_1_contents",
			"position: absolute;",
			"			position: absolute;\n			height: 100% !important;\n",
			"width",
			"AssociatedComponent",
			"bbElement",
			"theme-list",
			"layer-list",
			"::",
			"MasterToolbox",
			"configData.state",
			"configData.",
			"doDuplicate",
			"duplicate",
			"create",
			"publicationData",
			",",
			":",
			",",
			"\n				",
			"				",
			"PUBLICATION_FOLDER",
			"PublicationConstants.PUBLICATION_FOLDER + publicationName + \"/\"",
			"recursiveCopy",
			"to do this author",
			"getPublicationData",
			"create",
			"createpu",
			"create",
			"addRequiredMasters",
			"master-phantom",
			"inset",
			"insert-icon",
			"insert-",
			"icons/",
			".ribbon-list insert-icon-",
			".solid",
			"solid",
			"class=\"solid",
			"icons/temporary-icon",
			"temporary-icon",
			"/.png",
			"icons/",
			".ribbon-icon.",
			"\n",
			".ribbon-icon.",
			"\" ",
			"temp-icon",
			"url",
			".silex-toolbox .context-layer",
			".silex-toolbox fieldset legend",
			">>>>>>>",
			".silex-toolbox .properties-link .radio-button",
			".silex-toolbox .properties-link div",
			"=======",
			"url",
			"<img",
			"img",
			"break",
			"initialPageName",
			"box-shadow",
			"page-",
			"openen",
			"property-editor-delete-selected",
			"silex-toolbox fieldset",
			"silex-toolbox fieldset.Backgroundstyleeditor",
			"property-editor-edit-text, .property-editor-edit-code",
			"silex-toolbox .style-block-tab",
			"=======",
			"text",
			" !important",
			"important",
			"visi",
			"visibility",
			"href=\"#",
			"home",
			".page-opened",
			"removePage",
			"page-",
			"selected",
			"cursor",
			"		var textElement = ComponentModel.getInstance().addComponent(\"div\", layerInstance);\n		PropertyModel.getInstance().setAttribute(textElement, \"title\", \"Link to \"+name);\n		PropertyModel.getInstance().setProperty(textElement, \"innerHTML\", \"<p>\"+name+\"</p>\");\n		ComponentModel.getInstance().makeLinkToPage(textElement, className);\n",
			"LinkBase",
			"removeAttribute",
			"add",
			"onStyleChange",
			"PropertyModel.getInstance()",
			"style",
			"PropertyModel",
			"textElement",
			"new ",
			"NAV_LAYER_NAME",
			"nav",
			"addComponent"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"<DIV",
			"</DIV",
			"brixInstanceId",
			"BrixId",
			"Brix components",
			"brix",
			"publicationName",
			"components"
		],
		"reverse": true,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/history/History.hx",
					"settings":
					{
						"buffer_size": 2712,
						"regions":
						{
						},
						"selection":
						[
							[
								1902,
								1902
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/HaXe/HaXe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 765.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/history/HistoryData.hx",
					"settings":
					{
						"buffer_size": 822,
						"regions":
						{
						},
						"selection":
						[
							[
								747,
								747
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/HaXe/HaXe.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/test/unit_tests/src/history/HistoryTests.hx",
					"settings":
					{
						"buffer_size": 2945,
						"regions":
						{
						},
						"selection":
						[
							[
								2940,
								2940
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/HaXe/HaXe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1805.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "build.hxml",
					"settings":
					{
						"buffer_size": 114,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HaXe/Hxml.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/js/Dom.hx",
					"settings":
					{
						"buffer_size": 16634,
						"regions":
						{
						},
						"selection":
						[
							[
								7852,
								7852
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/HaXe/HaXe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4916.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 213.0
	},
	"output.haxe":
	{
		"height": 112.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 306.0,
	"status_bar_visible": true
}
