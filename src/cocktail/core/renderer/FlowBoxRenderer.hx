/*
	This file is part of Cocktail http://www.silexlabs.org/groups/labs/cocktail/
	This project is Â© 2010-2011 Silex Labs and is released under the GPL License:
	This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License (GPL) as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. 
	This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
	To read the license please visit http://www.gnu.org/copyleft/gpl.html
*/
package cocktail.core.renderer;

import cocktail.core.NativeElement;
import cocktail.core.CoreStyle;
import haxe.Log;

/**
 * Base class for ElementRenderer which are box
 * which can contain other ElementRenderer, such
 * as ElementRenderers generated by a ContainerHTMLElement
 * 
 * Those elements can have children ElementRenderer, thus
 * forming the rendering tree
 * 
 * @author Yannick DOMINGUEZ
 */
class FlowBoxRenderer extends BoxRenderer
{
	/**
	 * class constructor
	 */
	public function new(style:CoreStyle) 
	{
		super(style);
	}
	
	/////////////////////////////////
	// PUBLIC METHODS
	////////////////////////////////
	
	override public function dispose():Void
	{
		super.dispose();
		
		for (i in 0..._childNodes.length)
		{
			var child:ElementRenderer = cast(_childNodes[i]);
			child.dispose();
		}
		_childNodes = null;
	}
	
	/////////////////////////////////
	// OVERRIDEN PUBLIC HELPER METHODS
	////////////////////////////////
	
	override public function establishesNewFormattingContext():Bool
	{
		return coreStyle.establishesNewFormattingContext();
	}
	
	override public function isEmbedded():Bool
	{
		return false;
	}
	
	override public function canHaveChildren():Bool
	{
		return true;
	}

	
	
}