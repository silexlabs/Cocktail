
var $hxClasses=$hxClasses||{},$estr=function(){return js.Boot.__string_rec(this,'');};function $extend(from,fields){function inherit(){};inherit.prototype=from;var proto=new inherit();for(var name in fields)proto[name]=fields[name];return proto;}
var Hash=$hxClasses["Hash"]=function(){this.h={};};Hash.__name__=true;Hash.prototype={keys:function(){var a=[];for(var key in this.h){if(this.h.hasOwnProperty(key))a.push(key.substr(1));}
return HxOverrides.iter(a);},exists:function(key){return this.h.hasOwnProperty("$"+key);},get:function(key){return this.h["$"+key];},set:function(key,value){this.h["$"+key]=value;},__class__:Hash}
var HxOverrides=$hxClasses["HxOverrides"]=function(){}
HxOverrides.__name__=true;HxOverrides.strDate=function(s){switch(s.length){case 8:var k=s.split(":");var d=new Date();d.setTime(0);d.setUTCHours(k[0]);d.setUTCMinutes(k[1]);d.setUTCSeconds(k[2]);return d;case 10:var k=s.split("-");return new Date(k[0],k[1]-1,k[2],0,0,0);case 19:var k=s.split(" ");var y=k[0].split("-");var t=k[1].split(":");return new Date(y[0],y[1]-1,y[2],t[0],t[1],t[2]);default:throw"Invalid date format : "+s;}}
HxOverrides.cca=function(s,index){var x=s.charCodeAt(index);if(x!=x)return undefined;return x;}
HxOverrides.substr=function(s,pos,len){if(pos!=null&&pos!=0&&len!=null&&len<0)return"";if(len==null)len=s.length;if(pos<0){pos=s.length+pos;if(pos<0)pos=0;}else if(len<0)len=s.length+len-pos;return s.substr(pos,len);}
HxOverrides.remove=function(a,obj){var i=0;var l=a.length;while(i<l){if(a[i]==obj){a.splice(i,1);return true;}
i++;}
return false;}
HxOverrides.iter=function(a){return{cur:0,arr:a,hasNext:function(){return this.cur<this.arr.length;},next:function(){return this.arr[this.cur++];}};}
var IntHash=$hxClasses["IntHash"]=function(){this.h={};};IntHash.__name__=true;IntHash.prototype={set:function(key,value){this.h[key]=value;},__class__:IntHash}
var List=$hxClasses["List"]=function(){this.length=0;};List.__name__=true;List.prototype={iterator:function(){return{h:this.h,hasNext:function(){return this.h!=null;},next:function(){if(this.h==null)return null;var x=this.h[0];this.h=this.h[1];return x;}};},add:function(item){var x=[item];if(this.h==null)this.h=x;else this.q[1]=x;this.q=x;this.length++;},__class__:List}
var Reflect=$hxClasses["Reflect"]=function(){}
Reflect.__name__=true;Reflect.field=function(o,field){var v=null;try{v=o[field];}catch(e){}
return v;}
Reflect.fields=function(o){var a=[];if(o!=null){var hasOwnProperty=Object.prototype.hasOwnProperty;for(var f in o){if(hasOwnProperty.call(o,f))a.push(f);}}
return a;}
Reflect.isFunction=function(f){return typeof(f)=="function"&&!(f.__name__||f.__ename__);}
var Std=$hxClasses["Std"]=function(){}
Std.__name__=true;Std.string=function(s){return js.Boot.__string_rec(s,"");}
Std.parseInt=function(x){var v=parseInt(x,10);if(v==0&&(HxOverrides.cca(x,1)==120||HxOverrides.cca(x,1)==88))v=parseInt(x);if(isNaN(v))return null;return v;}
Std.parseFloat=function(x){return parseFloat(x);}
Std.random=function(x){return Math.floor(Math.random()*x);}
var StringTools=$hxClasses["StringTools"]=function(){}
StringTools.__name__=true;StringTools.urlEncode=function(s){return encodeURIComponent(s);}
StringTools.urlDecode=function(s){return decodeURIComponent(s.split("+").join(" "));}
StringTools.htmlUnescape=function(s){return s.split("&gt;").join(">").split("&lt;").join("<").split("&quot;").join("\"").split("&#039;").join("'").split("&amp;").join("&");}
StringTools.isSpace=function(s,pos){var c=HxOverrides.cca(s,pos);return c>=9&&c<=13||c==32;}
StringTools.rtrim=function(s){var l=s.length;var r=0;while(r<l&&StringTools.isSpace(s,l-r-1))r++;if(r>0)return HxOverrides.substr(s,0,l-r);else return s;}
var Type=$hxClasses["Type"]=function(){}
Type.__name__=true;Type.resolveClass=function(name){var cl=$hxClasses[name];if(cl==null||!cl.__name__)return null;return cl;}
Type.resolveEnum=function(name){var e=$hxClasses[name];if(e==null||!e.__ename__)return null;return e;}
Type.createEmptyInstance=function(cl){function empty(){};empty.prototype=cl.prototype;return new empty();}
Type.createEnum=function(e,constr,params){var f=Reflect.field(e,constr);if(f==null)throw"No such constructor "+constr;if(Reflect.isFunction(f)){if(params==null)throw"Constructor "+constr+" need parameters";return f.apply(e,params);}
if(params!=null&&params.length!=0)throw"Constructor "+constr+" does not need parameters";return f;}
Type.getEnumConstructs=function(e){var a=e.__constructs__;return a.slice();}
var Xml=$hxClasses["Xml"]=function(){};Xml.__name__=true;Xml.parse=function(str){return haxe.xml.Parser.parse(str);}
Xml.createElement=function(name){var r=new Xml();r.nodeType=Xml.Element;r._children=new Array();r._attributes=new Hash();r.setNodeName(name);return r;}
Xml.createPCData=function(data){var r=new Xml();r.nodeType=Xml.PCData;r.setNodeValue(data);return r;}
Xml.createCData=function(data){var r=new Xml();r.nodeType=Xml.CData;r.setNodeValue(data);return r;}
Xml.createComment=function(data){var r=new Xml();r.nodeType=Xml.Comment;r.setNodeValue(data);return r;}
Xml.createDocType=function(data){var r=new Xml();r.nodeType=Xml.DocType;r.setNodeValue(data);return r;}
Xml.createProlog=function(data){var r=new Xml();r.nodeType=Xml.Prolog;r.setNodeValue(data);return r;}
Xml.createDocument=function(){var r=new Xml();r.nodeType=Xml.Document;r._children=new Array();return r;}
Xml.prototype={addChild:function(x){if(this._children==null)throw"bad nodetype";if(x._parent!=null)HxOverrides.remove(x._parent._children,x);x._parent=this;this._children.push(x);},firstElement:function(){if(this._children==null)throw"bad nodetype";var cur=0;var l=this._children.length;while(cur<l){var n=this._children[cur];if(n.nodeType==Xml.Element)return n;cur++;}
return null;},firstChild:function(){if(this._children==null)throw"bad nodetype";return this._children[0];},elements:function(){if(this._children==null)throw"bad nodetype";return{cur:0,x:this._children,hasNext:function(){var k=this.cur;var l=this.x.length;while(k<l){if(this.x[k].nodeType==Xml.Element)break;k+=1;}
this.cur=k;return k<l;},next:function(){var k=this.cur;var l=this.x.length;while(k<l){var n=this.x[k];k+=1;if(n.nodeType==Xml.Element){this.cur=k;return n;}}
return null;}};},exists:function(att){if(this.nodeType!=Xml.Element)throw"bad nodeType";return this._attributes.exists(att);},set:function(att,value){if(this.nodeType!=Xml.Element)throw"bad nodeType";this._attributes.set(att,value);},getParent:function(){return this._parent;},setNodeValue:function(v){if(this.nodeType==Xml.Element||this.nodeType==Xml.Document)throw"bad nodeType";return this._nodeValue=v;},getNodeValue:function(){if(this.nodeType==Xml.Element||this.nodeType==Xml.Document)throw"bad nodeType";return this._nodeValue;},setNodeName:function(n){if(this.nodeType!=Xml.Element)throw"bad nodeType";return this._nodeName=n;},getNodeName:function(){if(this.nodeType!=Xml.Element)throw"bad nodeType";return this._nodeName;},__class__:Xml}
var feffects=feffects||{}
feffects.TweenObject=$hxClasses["feffects.TweenObject"]=function(){}
feffects.TweenObject.__name__=true;feffects.TweenObject.prototype={get_isPlaying:function(){var $it0=this.tweens.iterator();while($it0.hasNext()){var tween=$it0.next();if(tween.isPlaying)return true;}
return false;},__class__:feffects.TweenObject}
var haxe=haxe||{}
haxe.FastList=$hxClasses["haxe.FastList"]=function(){};haxe.FastList.__name__=true;haxe.FastList.prototype={iterator:function(){var l=this.head;return{hasNext:function(){return l!=null;},next:function(){var k=l;l=k.next;return k.elt;}};},remove:function(v){var prev=null;var l=this.head;while(l!=null){if(l.elt==v){if(prev==null)this.head=l.next;else prev.next=l.next;break;}
prev=l;l=l.next;}
return l!=null;},add:function(item){this.head=new haxe.FastCell(item,this.head);},__class__:haxe.FastList}
feffects.Tween=$hxClasses["feffects.Tween"]=function(init,end,dur,easing,autoStart,onUpdate,onUpdateParams,onFinish,onFinishParams){if(autoStart==null)autoStart=false;this._initVal=init;this._endVal=end;this.duration=dur;this.onUpdate(onUpdate,onUpdateParams);this.onFinish(onFinish,onFinishParams);this._offsetTime=0;this.position=0;this.isPlaying=false;this.isPaused=false;this.isReversed=false;if(easing!=null)this._easingF=easing;else this._easingF=feffects.Tween.easingEquation;if(autoStart)this.start();};feffects.Tween.__name__=true;feffects.Tween.AddTween=function(tween){if(!feffects.Tween._isTweening){feffects.Tween._timer=new haxe.Timer(feffects.Tween.INTERVAL);feffects.Tween._timer.run=feffects.Tween.cb_tick;feffects.Tween._isTweening=true;feffects.Tween.cb_tick();}
feffects.Tween._aTweens.add(tween);}
feffects.Tween.RemoveActiveTween=function(tween){feffects.Tween._aTweens.remove(tween);feffects.Tween.checkActiveTweens();}
feffects.Tween.RemovePausedTween=function(tween){feffects.Tween._aPaused.remove(tween);feffects.Tween.checkActiveTweens();}
feffects.Tween.checkActiveTweens=function(){if(feffects.Tween._aTweens.head==null){if(feffects.Tween._timer!=null){feffects.Tween._timer.stop();feffects.Tween._timer=null;}
feffects.Tween._isTweening=false;}}
feffects.Tween.setTweenPaused=function(tween){if(!tween.isPlaying)return;feffects.Tween._aPaused.add(tween);feffects.Tween._aTweens.remove(tween);feffects.Tween.checkActiveTweens();}
feffects.Tween.cb_tick=function(){var $it0=feffects.Tween._aTweens.iterator();while($it0.hasNext()){var i=$it0.next();i.doInterval();}}
feffects.Tween.easingEquation=function(t,b,c,d){return c/2*(Math.sin(Math.PI*(t/d-0.5))+1)+b;}
feffects.Tween.prototype={doInterval:function(){var stamp=new Date().getTime();var curTime=0;if(this.isReversed)curTime=this._reverseTime*2-stamp-this._startTime+this._offsetTime;else curTime=stamp-this._startTime+this._offsetTime;var curVal=this._easingF(curTime,this._initVal,this._endVal-this._initVal,this.duration);if(curTime>=this.duration||curTime<0)this.finish();else if(this._onUpdate!=null){this._onUpdateParams[0]=curVal;this._onUpdate.apply(null,this._onUpdateParams);}
this.position=curTime;},onFinish:function(f,params){this._onFinish=f;this._onFinishParams=params==null?[]:params;return this;},onUpdate:function(f,params){this._onUpdate=f;this._onUpdateParams=[0];if(params!=null)this._onUpdateParams=this._onUpdateParams.concat(params);return this;},finish:function(){feffects.Tween.RemoveActiveTween(this);this.isPlaying=false;this._onUpdateParams[0]=this.isReversed?this._initVal:this._endVal;if(this._onUpdate!=null)this._onUpdate.apply(null,this._onUpdateParams);if(this._onFinish!=null)this._onFinish.apply(null,this._onFinishParams);},stop:function(doFinish){if(this.isPaused)feffects.Tween.RemovePausedTween(this);else if(this.isPlaying)feffects.Tween.RemoveActiveTween(this);if(doFinish)this.finish();this.isPaused=false;this.isPlaying=false;},seek:function(ms){this._offsetTime=ms<this.duration?ms:this.duration;return this;},pause:function(){if(!this.isPlaying)return;this._pauseTime=new Date().getTime();feffects.Tween.setTweenPaused(this);this.isPlaying=false;this.isPaused=true;},start:function(position){if(position==null)position=0;this._startTime=new Date().getTime();this._reverseTime=new Date().getTime();this.seek(position);if(this.isPaused)feffects.Tween.RemovePausedTween(this);feffects.Tween.AddTween(this);this.isPlaying=true;if(this.duration==0||position>=this.duration)this.finish();},__class__:feffects.Tween}
haxe.Public=$hxClasses["haxe.Public"]=function(){}
haxe.Public.__name__=true;if(!feffects.easing)feffects.easing={}
feffects.easing.Quad=$hxClasses["feffects.easing.Quad"]=function(){}
feffects.easing.Quad.__name__=true;feffects.easing.Quad.__interfaces__=[haxe.Public];feffects.easing.Quad.easeOut=function(t,b,c,d){return-c*(t/=d)*(t-2)+b;}
haxe.FastCell=$hxClasses["haxe.FastCell"]=function(elt,next){this.elt=elt;this.next=next;};haxe.FastCell.__name__=true;haxe.FastCell.prototype={__class__:haxe.FastCell}
haxe.Http=$hxClasses["haxe.Http"]=function(url){this.url=url;this.headers=new Hash();this.params=new Hash();this.async=true;};haxe.Http.__name__=true;haxe.Http.prototype={onStatus:function(status){},onError:function(msg){},onData:function(data){},request:function(post){var me=this;var r=new js.XMLHttpRequest();var onreadystatechange=function(){if(r.readyState!=4)return;var s=(function($this){var $r;try{$r=r.status;}catch(e){$r=null;}
return $r;}(this));if(s==undefined)s=null;if(s!=null)me.onStatus(s);if(s!=null&&s>=200&&s<400)me.onData(r.responseText);else switch(s){case null:case undefined:me.onError("Failed to connect or resolve host");break;case 12029:me.onError("Failed to connect to host");break;case 12007:me.onError("Unknown host");break;default:me.onError("Http Error #"+r.status);}};if(this.async)r.onreadystatechange=onreadystatechange;var uri=this.postData;if(uri!=null)post=true;else{var $it0=this.params.keys();while($it0.hasNext()){var p=$it0.next();if(uri==null)uri="";else uri+="&";uri+=StringTools.urlEncode(p)+"="+StringTools.urlEncode(this.params.get(p));}}
try{if(post)r.open("POST",this.url,this.async);else if(uri!=null){var question=this.url.split("?").length<=1;r.open("GET",this.url+(question?"?":"&")+uri,this.async);uri=null;}else r.open("GET",this.url,this.async);}catch(e){this.onError(e.toString());return;}
if(this.headers.get("Content-Type")==null&&post&&this.postData==null)r.setRequestHeader("Content-Type","application/x-www-form-urlencoded");var $it1=this.headers.keys();while($it1.hasNext()){var h=$it1.next();r.setRequestHeader(h,this.headers.get(h));}
r.send(uri);if(!this.async)onreadystatechange();},__class__:haxe.Http}
haxe.Resource=$hxClasses["haxe.Resource"]=function(){}
haxe.Resource.__name__=true;haxe.Resource.getString=function(name){var _g=0,_g1=haxe.Resource.content;while(_g<_g1.length){var x=_g1[_g];++_g;if(x.name==name){if(x.str!=null)return x.str;var b=haxe.Unserializer.run(x.data);return b.toString();}}
return null;}
haxe.Timer=$hxClasses["haxe.Timer"]=function(time_ms){var me=this;this.id=window.setInterval(function(){me.run();},time_ms);};haxe.Timer.__name__=true;haxe.Timer.delay=function(f,time_ms){var t=new haxe.Timer(time_ms);t.run=function(){t.stop();f();};return t;}
haxe.Timer.stamp=function(){return new Date().getTime()/1000;}
haxe.Timer.prototype={run:function(){},stop:function(){if(this.id==null)return;window.clearInterval(this.id);this.id=null;},__class__:haxe.Timer}
haxe.Unserializer=$hxClasses["haxe.Unserializer"]=function(buf){this.buf=buf;this.length=buf.length;this.pos=0;this.scache=new Array();this.cache=new Array();var r=haxe.Unserializer.DEFAULT_RESOLVER;if(r==null){r=Type;haxe.Unserializer.DEFAULT_RESOLVER=r;}
this.setResolver(r);};haxe.Unserializer.__name__=true;haxe.Unserializer.initCodes=function(){var codes=new Array();var _g1=0,_g=haxe.Unserializer.BASE64.length;while(_g1<_g){var i=_g1++;codes[haxe.Unserializer.BASE64.charCodeAt(i)]=i;}
return codes;}
haxe.Unserializer.run=function(v){return new haxe.Unserializer(v).unserialize();}
haxe.Unserializer.prototype={unserialize:function(){switch(this.buf.charCodeAt(this.pos++)){case 110:return null;case 116:return true;case 102:return false;case 122:return 0;case 105:return this.readDigits();case 100:var p1=this.pos;while(true){var c=this.buf.charCodeAt(this.pos);if(c>=43&&c<58||c==101||c==69)this.pos++;else break;}
return Std.parseFloat(HxOverrides.substr(this.buf,p1,this.pos-p1));case 121:var len=this.readDigits();if(this.buf.charCodeAt(this.pos++)!=58||this.length-this.pos<len)throw"Invalid string length";var s=HxOverrides.substr(this.buf,this.pos,len);this.pos+=len;s=StringTools.urlDecode(s);this.scache.push(s);return s;case 107:return Math.NaN;case 109:return Math.NEGATIVE_INFINITY;case 112:return Math.POSITIVE_INFINITY;case 97:var buf=this.buf;var a=new Array();this.cache.push(a);while(true){var c=this.buf.charCodeAt(this.pos);if(c==104){this.pos++;break;}
if(c==117){this.pos++;var n=this.readDigits();a[a.length+n-1]=null;}else a.push(this.unserialize());}
return a;case 111:var o={};this.cache.push(o);this.unserializeObject(o);return o;case 114:var n=this.readDigits();if(n<0||n>=this.cache.length)throw"Invalid reference";return this.cache[n];case 82:var n=this.readDigits();if(n<0||n>=this.scache.length)throw"Invalid string reference";return this.scache[n];case 120:throw this.unserialize();break;case 99:var name=this.unserialize();var cl=this.resolver.resolveClass(name);if(cl==null)throw"Class not found "+name;var o=Type.createEmptyInstance(cl);this.cache.push(o);this.unserializeObject(o);return o;case 119:var name=this.unserialize();var edecl=this.resolver.resolveEnum(name);if(edecl==null)throw"Enum not found "+name;var e=this.unserializeEnum(edecl,this.unserialize());this.cache.push(e);return e;case 106:var name=this.unserialize();var edecl=this.resolver.resolveEnum(name);if(edecl==null)throw"Enum not found "+name;this.pos++;var index=this.readDigits();var tag=Type.getEnumConstructs(edecl)[index];if(tag==null)throw"Unknown enum index "+name+"@"+index;var e=this.unserializeEnum(edecl,tag);this.cache.push(e);return e;case 108:var l=new List();this.cache.push(l);var buf=this.buf;while(this.buf.charCodeAt(this.pos)!=104)l.add(this.unserialize());this.pos++;return l;case 98:var h=new Hash();this.cache.push(h);var buf=this.buf;while(this.buf.charCodeAt(this.pos)!=104){var s=this.unserialize();h.set(s,this.unserialize());}
this.pos++;return h;case 113:var h=new IntHash();this.cache.push(h);var buf=this.buf;var c=this.buf.charCodeAt(this.pos++);while(c==58){var i=this.readDigits();h.set(i,this.unserialize());c=this.buf.charCodeAt(this.pos++);}
if(c!=104)throw"Invalid IntHash format";return h;case 118:var d=HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));this.cache.push(d);this.pos+=19;return d;case 115:var len=this.readDigits();var buf=this.buf;if(this.buf.charCodeAt(this.pos++)!=58||this.length-this.pos<len)throw"Invalid bytes length";var codes=haxe.Unserializer.CODES;if(codes==null){codes=haxe.Unserializer.initCodes();haxe.Unserializer.CODES=codes;}
var i=this.pos;var rest=len&3;var size=(len>>2)*3+(rest>=2?rest-1:0);var max=i+(len-rest);var bytes=haxe.io.Bytes.alloc(size);var bpos=0;while(i<max){var c1=codes[buf.charCodeAt(i++)];var c2=codes[buf.charCodeAt(i++)];bytes.b[bpos++]=(c1<<2|c2>>4)&255;var c3=codes[buf.charCodeAt(i++)];bytes.b[bpos++]=(c2<<4|c3>>2)&255;var c4=codes[buf.charCodeAt(i++)];bytes.b[bpos++]=(c3<<6|c4)&255;}
if(rest>=2){var c1=codes[buf.charCodeAt(i++)];var c2=codes[buf.charCodeAt(i++)];bytes.b[bpos++]=(c1<<2|c2>>4)&255;if(rest==3){var c3=codes[buf.charCodeAt(i++)];bytes.b[bpos++]=(c2<<4|c3>>2)&255;}}
this.pos+=len;this.cache.push(bytes);return bytes;case 67:var name=this.unserialize();var cl=this.resolver.resolveClass(name);if(cl==null)throw"Class not found "+name;var o=Type.createEmptyInstance(cl);this.cache.push(o);o.hxUnserialize(this);if(this.buf.charCodeAt(this.pos++)!=103)throw"Invalid custom data";return o;default:}
this.pos--;throw"Invalid char "+this.buf.charAt(this.pos)+" at position "+this.pos;},unserializeEnum:function(edecl,tag){if(this.buf.charCodeAt(this.pos++)!=58)throw"Invalid enum format";var nargs=this.readDigits();if(nargs==0)return Type.createEnum(edecl,tag);var args=new Array();while(nargs-->0)args.push(this.unserialize());return Type.createEnum(edecl,tag,args);},unserializeObject:function(o){while(true){if(this.pos>=this.length)throw"Invalid object";if(this.buf.charCodeAt(this.pos)==103)break;var k=this.unserialize();if(!js.Boot.__instanceof(k,String))throw"Invalid object key";var v=this.unserialize();o[k]=v;}
this.pos++;},readDigits:function(){var k=0;var s=false;var fpos=this.pos;while(true){var c=this.buf.charCodeAt(this.pos);if(c!=c)break;if(c==45){if(this.pos!=fpos)break;s=true;this.pos++;continue;}
if(c<48||c>57)break;k=k*10+(c-48);this.pos++;}
if(s)k*=-1;return k;},setResolver:function(r){if(r==null)this.resolver={resolveClass:function(_){return null;},resolveEnum:function(_){return null;}};else this.resolver=r;},__class__:haxe.Unserializer}
if(!haxe.io)haxe.io={}
haxe.io.Bytes=$hxClasses["haxe.io.Bytes"]=function(length,b){this.length=length;this.b=b;};haxe.io.Bytes.__name__=true;haxe.io.Bytes.alloc=function(length){var a=new Array();var _g=0;while(_g<length){var i=_g++;a.push(0);}
return new haxe.io.Bytes(length,a);}
haxe.io.Bytes.prototype={toString:function(){return this.readString(0,this.length);},readString:function(pos,len){if(pos<0||len<0||pos+len>this.length)throw haxe.io.Error.OutsideBounds;var s="";var b=this.b;var fcc=String.fromCharCode;var i=pos;var max=pos+len;while(i<max){var c=b[i++];if(c<128){if(c==0)break;s+=fcc(c);}else if(c<224)s+=fcc((c&63)<<6|b[i++]&127);else if(c<240){var c2=b[i++];s+=fcc((c&31)<<12|(c2&127)<<6|b[i++]&127);}else{var c2=b[i++];var c3=b[i++];s+=fcc((c&15)<<18|(c2&127)<<12|c3<<6&127|b[i++]&127);}}
return s;},__class__:haxe.io.Bytes}
haxe.io.Error=$hxClasses["haxe.io.Error"]={__ename__:true,__constructs__:["Blocked","Overflow","OutsideBounds","Custom"]}
haxe.io.Error.Blocked=["Blocked",0];haxe.io.Error.Blocked.toString=$estr;haxe.io.Error.Blocked.__enum__=haxe.io.Error;haxe.io.Error.Overflow=["Overflow",1];haxe.io.Error.Overflow.toString=$estr;haxe.io.Error.Overflow.__enum__=haxe.io.Error;haxe.io.Error.OutsideBounds=["OutsideBounds",2];haxe.io.Error.OutsideBounds.toString=$estr;haxe.io.Error.OutsideBounds.__enum__=haxe.io.Error;haxe.io.Error.Custom=function(e){var $x=["Custom",3,e];$x.__enum__=haxe.io.Error;$x.toString=$estr;return $x;}
if(!haxe.xml)haxe.xml={}
haxe.xml.Parser=$hxClasses["haxe.xml.Parser"]=function(){}
haxe.xml.Parser.__name__=true;haxe.xml.Parser.parse=function(str){var doc=Xml.createDocument();haxe.xml.Parser.doParse(str,0,doc);return doc;}
haxe.xml.Parser.doParse=function(str,p,parent){if(p==null)p=0;var xml=null;var state=1;var next=1;var aname=null;var start=0;var nsubs=0;var nbrackets=0;var c=str.charCodeAt(p);while(!(c!=c)){switch(state){case 0:switch(c){case 10:case 13:case 9:case 32:break;default:state=next;continue;}
break;case 1:switch(c){case 60:state=0;next=2;break;default:start=p;state=13;continue;}
break;case 13:if(c==60){var child=Xml.createPCData(HxOverrides.substr(str,start,p-start));parent.addChild(child);nsubs++;state=0;next=2;}
break;case 17:if(c==93&&str.charCodeAt(p+1)==93&&str.charCodeAt(p+2)==62){var child=Xml.createCData(HxOverrides.substr(str,start,p-start));parent.addChild(child);nsubs++;p+=2;state=1;}
break;case 2:switch(c){case 33:if(str.charCodeAt(p+1)==91){p+=2;if(HxOverrides.substr(str,p,6).toUpperCase()!="CDATA[")throw"Expected <![CDATA[";p+=5;state=17;start=p+1;}else if(str.charCodeAt(p+1)==68||str.charCodeAt(p+1)==100){if(HxOverrides.substr(str,p+2,6).toUpperCase()!="OCTYPE")throw"Expected <!DOCTYPE";p+=8;state=16;start=p+1;}else if(str.charCodeAt(p+1)!=45||str.charCodeAt(p+2)!=45)throw"Expected <!--";else{p+=2;state=15;start=p+1;}
break;case 63:state=14;start=p;break;case 47:if(parent==null)throw"Expected node name";start=p+1;state=0;next=10;break;default:state=3;start=p;continue;}
break;case 3:if(!(c>=97&&c<=122||c>=65&&c<=90||c>=48&&c<=57||c==58||c==46||c==95||c==45)){if(p==start)throw"Expected node name";xml=Xml.createElement(HxOverrides.substr(str,start,p-start));parent.addChild(xml);state=0;next=4;continue;}
break;case 4:switch(c){case 47:state=11;nsubs++;break;case 62:state=9;nsubs++;break;default:state=5;start=p;continue;}
break;case 5:if(!(c>=97&&c<=122||c>=65&&c<=90||c>=48&&c<=57||c==58||c==46||c==95||c==45)){var tmp;if(start==p)throw"Expected attribute name";tmp=HxOverrides.substr(str,start,p-start);aname=tmp;if(xml.exists(aname))throw"Duplicate attribute";state=0;next=6;continue;}
break;case 6:switch(c){case 61:state=0;next=7;break;default:throw"Expected =";}
break;case 7:switch(c){case 34:case 39:state=8;start=p;break;default:throw"Expected \"";}
break;case 8:if(c==str.charCodeAt(start)){var val=HxOverrides.substr(str,start+1,p-start-1);xml.set(aname,val);state=0;next=4;}
break;case 9:p=haxe.xml.Parser.doParse(str,p,xml);start=p;state=1;break;case 11:switch(c){case 62:state=1;break;default:throw"Expected >";}
break;case 12:switch(c){case 62:if(nsubs==0)parent.addChild(Xml.createPCData(""));return p;default:throw"Expected >";}
break;case 10:if(!(c>=97&&c<=122||c>=65&&c<=90||c>=48&&c<=57||c==58||c==46||c==95||c==45)){if(start==p)throw"Expected node name";var v=HxOverrides.substr(str,start,p-start);if(v!=parent.getNodeName())throw"Expected </"+parent.getNodeName()+">";state=0;next=12;continue;}
break;case 15:if(c==45&&str.charCodeAt(p+1)==45&&str.charCodeAt(p+2)==62){parent.addChild(Xml.createComment(HxOverrides.substr(str,start,p-start)));p+=2;state=1;}
break;case 16:if(c==91)nbrackets++;else if(c==93)nbrackets--;else if(c==62&&nbrackets==0){parent.addChild(Xml.createDocType(HxOverrides.substr(str,start,p-start)));state=1;}
break;case 14:if(c==63&&str.charCodeAt(p+1)==62){p++;var str1=HxOverrides.substr(str,start+1,p-start-2);parent.addChild(Xml.createProlog(str1));state=1;}
break;}
c=str.charCodeAt(++p);}
if(state==1){start=p;state=13;}
if(state==13){if(p!=start||nsubs==0)parent.addChild(Xml.createPCData(HxOverrides.substr(str,start,p-start)));return p;}
throw"Unexpected end";}
var js=js||{}
js.Boot=$hxClasses["js.Boot"]=function(){}
js.Boot.__name__=true;js.Boot.__string_rec=function(o,s){if(o==null)return"null";if(s.length>=5)return"<...>";var t=typeof(o);if(t=="function"&&(o.__name__||o.__ename__))t="object";switch(t){case"object":if(o instanceof Array){if(o.__enum__){if(o.length==2)return o[0];var str=o[0]+"(";s+="\t";var _g1=2,_g=o.length;while(_g1<_g){var i=_g1++;if(i!=2)str+=","+js.Boot.__string_rec(o[i],s);else str+=js.Boot.__string_rec(o[i],s);}
return str+")";}
var l=o.length;var i;var str="[";s+="\t";var _g=0;while(_g<l){var i1=_g++;str+=(i1>0?",":"")+js.Boot.__string_rec(o[i1],s);}
str+="]";return str;}
var tostr;try{tostr=o.toString;}catch(e){return"???";}
if(tostr!=null&&tostr!=Object.toString){var s2=o.toString();if(s2!="[object Object]")return s2;}
var k=null;var str="{\n";s+="\t";var hasp=o.hasOwnProperty!=null;for(var k in o){;if(hasp&&!o.hasOwnProperty(k)){continue;}
if(k=="prototype"||k=="__class__"||k=="__super__"||k=="__interfaces__"||k=="__properties__"){continue;}
if(str.length!=2)str+=", \n";str+=s+k+" : "+js.Boot.__string_rec(o[k],s);}
s=s.substring(1);str+="\n"+s+"}";return str;case"function":return"<function>";case"string":return o;default:return String(o);}}
js.Boot.__interfLoop=function(cc,cl){if(cc==null)return false;if(cc==cl)return true;var intf=cc.__interfaces__;if(intf!=null){var _g1=0,_g=intf.length;while(_g1<_g){var i=_g1++;var i1=intf[i];if(i1==cl||js.Boot.__interfLoop(i1,cl))return true;}}
return js.Boot.__interfLoop(cc.__super__,cl);}
js.Boot.__instanceof=function(o,cl){try{if(o instanceof cl){if(cl==Array)return o.__enum__==null;return true;}
if(js.Boot.__interfLoop(o.__class__,cl))return true;}catch(e){if(cl==null)return false;}
switch(cl){case Int:return Math.ceil(o%2147483648.0)===o;case Float:return typeof(o)=="number";case Bool:return o===true||o===false;case String:return typeof(o)=="string";case Dynamic:return true;default:if(o==null)return false;if(cl==Class&&o.__name__!=null)return true;else null;if(cl==Enum&&o.__ename__!=null)return true;else null;return o.__enum__==cl;}}
js.Lib=$hxClasses["js.Lib"]=function(){}
js.Lib.__name__=true;var org=org||{}
if(!org.intermedia)org.intermedia={}
org.intermedia.Application=$hxClasses["org.intermedia.Application"]=function(){var applicationModel=new org.intermedia.model.ApplicationModel();var applicationController=new org.intermedia.controller.ApplicationController(applicationModel);var view=new org.intermedia.view.ViewManager(applicationModel,applicationController);};org.intermedia.Application.__name__=true;org.intermedia.Application.main=function(){new org.intermedia.Application();}
org.intermedia.Application.prototype={__class__:org.intermedia.Application}
org.intermedia.Debug=$hxClasses["org.intermedia.Debug"]=function(){this._timer=haxe.Timer.stamp();};org.intermedia.Debug.__name__=true;org.intermedia.Debug.prototype={traceDuration:function(msg){},__class__:org.intermedia.Debug}
org.intermedia.Settings=$hxClasses["org.intermedia.Settings"]=function(){this.online=true;};org.intermedia.Settings.__name__=true;org.intermedia.Settings.getInstance=function(){if(org.intermedia.Settings._settings==null)org.intermedia.Settings._settings=new org.intermedia.Settings();return org.intermedia.Settings._settings;}
org.intermedia.Settings.prototype={__class__:org.intermedia.Settings}
if(!org.intermedia.controller)org.intermedia.controller={}
org.intermedia.controller.ApplicationController=$hxClasses["org.intermedia.controller.ApplicationController"]=function(applicationModel){this._applicationModel=applicationModel;};org.intermedia.controller.ApplicationController.__name__=true;org.intermedia.controller.ApplicationController.prototype={loadCellData:function(feed){this._applicationModel.loadCellData(feed);},__class__:org.intermedia.controller.ApplicationController}
if(!org.intermedia.model)org.intermedia.model={}
org.intermedia.model.ApplicationModel=$hxClasses["org.intermedia.model.ApplicationModel"]=function(){this._loadedCellsData=new Array();this._loadedDetailData=new Array();this.initDataLoader();};org.intermedia.model.ApplicationModel.__name__=true;org.intermedia.model.ApplicationModel.prototype={onCellsDataLoadComplete:function(listData){this._loadedCellsData=new Array();var _g=0,_g1=listData.cells;while(_g<_g1.length){var cellData=_g1[_g];++_g;this._loadedCellsData.push(cellData);}
if(this.onModelCellDataLoaded!=null)this.onModelCellDataLoaded(listData);},loadCellData:function(id){var feed={id:0,ressource:"",thumb:"",title:"",url:"",generatedBy:""};if(id=={id:0,ressource:"feed1",title:"iPhon.fr",thumb:"assets/iphon_fr-logo.jpg",url:"http://www.iphon.fr/feed/rss2",generatedBy:"wordpress"}.url)feed={id:0,ressource:"feed1",title:"iPhon.fr",thumb:"assets/iphon_fr-logo.jpg",url:"http://www.iphon.fr/feed/rss2",generatedBy:"wordpress"};else if(id=={id:1,ressource:"feed2",title:"FrAndroid",thumb:"assets/frandroid-logo.png",url:"http://www.frandroid.com/feed",generatedBy:"wordpress"}.url)feed={id:1,ressource:"feed2",title:"FrAndroid",thumb:"assets/frandroid-logo.png",url:"http://www.frandroid.com/feed",generatedBy:"wordpress"};else if(id=={id:2,ressource:"feed3",title:"frenchiPhone",thumb:"assets/frenchiphone-logo.png",url:"http://www.frenchiphone.com/feed/",generatedBy:"wordpress"}.url)feed={id:2,ressource:"feed3",title:"frenchiPhone",thumb:"assets/frenchiphone-logo.png",url:"http://www.frenchiphone.com/feed/",generatedBy:"wordpress"};if(this._loadedCellsData.length==0){if(this.onModelStartsLoading!=null)this.onModelStartsLoading();}
this._dataLoader.loadCellData(feed,15,$bind(this,this.onCellsDataLoadComplete),this.onModelDataLoadError);},initDataLoader:function(){this._dataLoader=new org.intermedia.model.DataLoader(org.intermedia.Settings.getInstance().online);},__class__:org.intermedia.model.ApplicationModel}
org.intermedia.model.DataLoader=$hxClasses["org.intermedia.model.DataLoader"]=function(online){if(online==null)online=true;this._feedsCount=0;this._pageIndex=1;this._pageIndexHash=new Hash();this._online=online;if(this._online)haxe.Timer.delay($bind(this,this.checkOnlineFeeds),org.intermedia.Settings.ONLINE_FEED_DELAY);};org.intermedia.model.DataLoader.__name__=true;org.intermedia.model.DataLoader.prototype={loadingError:function(feed,error){this._online=false;this.loadCellData(feed,0,this.onCellDataLoaded,null);},onCellsXmlLoaded:function(feed,xml){this._feedsCount++;this.onCellDataLoaded({id:feed.url,cells:org.intermedia.model.ThumbTextListRssStandard.rss2Cells(xml,feed)});},checkOnlineFeeds:function(){console.log("checkOnlineFeeds: "+this._feedsCount);if(this._feedsCount<3){if(this.onLoadingError!=null)this.onLoadingError(null,org.intermedia.Settings.DATALOADER_TIMEOUT_MESSAGE);}},loadCellData:function(feed,itemsPerPage,successCallback,errorCallback){this.onCellDataLoaded=successCallback;this.onLoadingError=errorCallback;var fullUrl="";var debug=new org.intermedia.Debug();debug.traceDuration("DataLoader step0");if(this._online){var pageIndex=1;if(this._pageIndexHash.exists(feed.url))pageIndex=this._pageIndexHash.get(feed.url)+1;this._pageIndexHash.set(feed.url,pageIndex);if(feed.generatedBy=="wordpress")fullUrl=feed.url+"?posts_per_page="+itemsPerPage+"&paged="+pageIndex;else fullUrl=feed.url;var xmlLoader=new org.intermedia.model.XmlLoader(fullUrl,this._online,$bind(this,this.onCellsXmlLoaded),$bind(this,this.loadingError),feed);debug.traceDuration("DataLoader feed "+feed.url);}else{this.onCellsXmlLoaded(feed,Xml.parse(haxe.Resource.getString(feed.ressource)));debug.traceDuration("DataLoader feed "+Std.string(feed));}},__class__:org.intermedia.model.DataLoader}
org.intermedia.model.Feeds=$hxClasses["org.intermedia.model.Feeds"]=function(){}
org.intermedia.model.Feeds.__name__=true;org.intermedia.model.ThumbTextListRssStandard=$hxClasses["org.intermedia.model.ThumbTextListRssStandard"]=function(){}
org.intermedia.model.ThumbTextListRssStandard.__name__=true;org.intermedia.model.ThumbTextListRssStandard.rss2Cells=function(rss,feed){var cells=new Array();var channelNode=rss.firstElement().firstElement();if(channelNode==null)return cells;var $it0=channelNode.elements();while($it0.hasNext()){var channelChild=$it0.next();if(channelChild.getNodeName()=="item"){var cell={id:0,title:"",author:"",thumbUrl:"",category:"",description:"",content:""};var $it1=channelChild.elements();while($it1.hasNext()){var itemParam=$it1.next();if(itemParam.getNodeName()=="title"){var title=org.intermedia.model.ThumbTextListRssStandard.cleanText(itemParam.firstChild().getNodeValue());var index=title.indexOf("Name");if(index!=-1)title=HxOverrides.substr(title,0,index);title=StringTools.rtrim(title);cell.title=title;}
if(itemParam.getNodeName()=="dc:creator")cell.author=itemParam.firstChild().getNodeValue();if(itemParam.getNodeName()=="description"){cell.description=org.intermedia.model.ThumbTextListRssStandard.cleanText(itemParam.firstChild().getNodeValue());if(cell.thumbUrl=="")cell.thumbUrl=org.intermedia.model.ThumbTextListRssStandard.getThumb(cell.description);}
if(itemParam.getNodeName()=="content:encoded"){cell.content=org.intermedia.model.ThumbTextListRssStandard.cleanText(itemParam.firstChild().getNodeValue());if(cell.thumbUrl=="")cell.thumbUrl=org.intermedia.model.ThumbTextListRssStandard.getThumb(cell.content);}}
if(cell.thumbUrl=="")cell.thumbUrl=feed.thumb;if(cell.title!=""&&cell.thumbUrl!=""&&(cell.description!=""||cell.content!=""))cells.push(cell);}}
return cells;}
org.intermedia.model.ThumbTextListRssStandard.cleanText=function(text){return StringTools.htmlUnescape(org.intermedia.model.ThumbTextListRssStandard.cleanCharCodes(text));}
org.intermedia.model.ThumbTextListRssStandard.cleanCharCodes=function(text){var charCodeStart="&#";var charCodeEnd=";";var charCodeStartPosition=0;var charCodeEndPosition=0;var charCode=0;var charCodeString="";var $char="";var textEnd="";charCodeStartPosition=text.indexOf(charCodeStart);while(charCodeStartPosition!=-1){charCodeString=HxOverrides.substr(text,charCodeStartPosition+charCodeStart.length,null);charCodeEndPosition=charCodeString.indexOf(charCodeEnd);textEnd=HxOverrides.substr(charCodeString,charCodeEndPosition+1,null);charCodeString=HxOverrides.substr(charCodeString,0,charCodeEndPosition);charCode=Std.parseInt(charCodeString);$char=String.fromCharCode(charCode);text=HxOverrides.substr(text,0,charCodeStartPosition)+$char+textEnd;charCodeStartPosition=text.indexOf(charCodeStart);}
return text;return text;}
org.intermedia.model.ThumbTextListRssStandard.getThumb=function(htmlString){var imgNodeStartIndex=htmlString.indexOf("<img ");var imgNode="";var imgUrl="";var imgUrlStartIndex=0;if(imgNodeStartIndex!=-1){htmlString=HxOverrides.substr(htmlString,imgNodeStartIndex,null);var imgNodeEndIndex=htmlString.indexOf(">")+1;imgNode=HxOverrides.substr(htmlString,0,imgNodeEndIndex);var srcKeyWord="src=";imgUrlStartIndex=imgNode.indexOf(srcKeyWord);if(imgUrlStartIndex!=-1){var imgUrlDelimitor=HxOverrides.substr(imgNode,imgUrlStartIndex+srcKeyWord.length,1);imgUrl=HxOverrides.substr(imgNode,imgUrlStartIndex+srcKeyWord.length+1,null);var imgUrlEndIndex=imgUrl.indexOf(imgUrlDelimitor);imgUrl=HxOverrides.substr(imgUrl,0,imgUrlEndIndex);return imgUrl;}}else{imgUrlStartIndex=htmlString.indexOf("<p>http://");if(imgUrlStartIndex!=-1){var srcKeyWord="<p>";imgUrl=HxOverrides.substr(htmlString,imgUrlStartIndex+srcKeyWord.length,null);var imgUrlEndIndex=imgUrl.indexOf("</p>");imgUrl=HxOverrides.substr(imgUrl,0,imgUrlEndIndex);return imgUrl;}}
return"";}
org.intermedia.model.XmlLoader=$hxClasses["org.intermedia.model.XmlLoader"]=function(xmlUrl,online,successCallback,errorCallback,feed){this._online=online;this.onLoadSuccess=successCallback;this.onLoadError=errorCallback;this.loadXmlFeed(feed,xmlUrl);};org.intermedia.model.XmlLoader.__name__=true;org.intermedia.model.XmlLoader.prototype={onFeedLoaded:function(feed,xmlString){var xml=Xml.parse(xmlString);if(this.onLoadSuccess!=null)this.onLoadSuccess(feed,xml);},onFeedLoadError:function(feed,error){if(this.onLoadError!=null)this.onLoadError(feed,error);},loadXmlFeed:function(feed,xmlUrl){var _g=this;var fullUrl="";fullUrl="http://demos.silexlabs.org/cocktail/simple-webapp/XmlProxy.php?url="+StringTools.urlEncode(xmlUrl);try{var httpRequest=new haxe.Http(fullUrl);httpRequest.onData=function(xml){_g.onFeedLoaded(feed,xml);};httpRequest.onError=function(error){_g.onFeedLoadError(feed,error);};httpRequest.request(false);}catch(error){this.onFeedLoadError(feed,error);}},__class__:org.intermedia.model.XmlLoader}
if(!org.intermedia.view)org.intermedia.view={}
org.intermedia.view.ViewBase=$hxClasses["org.intermedia.view.ViewBase"]=function(){this.node=js.Lib.document.createElement("div");this.setDisplayLoading(false);this.buildView();};org.intermedia.view.ViewBase.__name__=true;org.intermedia.view.ViewBase.prototype={updateView:function(){},buildView:function(){},setDisplayLoading:function(v){if(v){if(this._loadingView==null)this._loadingView=new org.intermedia.view.LoadingView();if(this._loadingView.node.parentNode==null)this.node.appendChild(this._loadingView.node);}else if(this._loadingView!=null){if(this._loadingView.node.parentNode!=null)this.node.removeChild(this._loadingView.node);}
return v;},setData:function(v){this._data=v;this.updateView();return this._data;},getData:function(){return this._data;},__class__:org.intermedia.view.ViewBase}
org.intermedia.view.CellBase=$hxClasses["org.intermedia.view.CellBase"]=function(cellPerLine,style){if(cellPerLine==null)cellPerLine=1;org.intermedia.view.ViewBase.call(this);this._style=this._style;this._cellPerLine=cellPerLine;if(style!=null)this._style=style;else this.initStyle();this._style.cell(this.node,cellPerLine);};org.intermedia.view.CellBase.__name__=true;org.intermedia.view.CellBase.__super__=org.intermedia.view.ViewBase;org.intermedia.view.CellBase.prototype=$extend(org.intermedia.view.ViewBase.prototype,{refreshStyles:function(){this._style.cell(this.node,this._cellPerLine);},initStyle:function(){this._style={cell:org.intermedia.view.CellStyle.setCellStyle,thumbnailMask:null,thumbnail:null,textBlock:null,title:null,author:null};},__class__:org.intermedia.view.CellBase});org.intermedia.view.CellStyle=$hxClasses["org.intermedia.view.CellStyle"]=function(){}
org.intermedia.view.CellStyle.__name__=true;org.intermedia.view.CellStyle.setCellStyle=function(node,cellPerLine){if(cellPerLine==null)cellPerLine=1;node.style.display="inline-block";node.style.position="static";node.style.marginLeft="0px";node.style.marginRight="0px";node.style.marginTop="0px";node.style.marginBottom="0px";node.style.paddingLeft="0px";node.style.paddingRight="0px";node.style.paddingTop="0px";node.style.paddingBottom="0px";var cellWidthPercent=org.intermedia.view.CellStyle.computeWidthPercentage(cellPerLine);node.style.width=Std.string(cellWidthPercent)+"%";node.style.verticalAlign="top";node.style.backgroundColor="#FEFEFE";node.style.cursor="pointer";}
org.intermedia.view.CellStyle.computeWidthPercentage=function(cellPerLine,borderWidth){if(borderWidth==null)borderWidth=0;var cellWidthPercent=100;if(cellPerLine!=0)cellWidthPercent=100/cellPerLine-borderWidth*100/js.Lib.window.innerWidth-borderWidth*100/(js.Lib.window.innerWidth*cellPerLine);return cellWidthPercent;}
org.intermedia.view.CellStyle.addBorder=function(node,borderWidth){node.style.marginBottom=Std.string(borderWidth)+"px";node.style.marginLeft=Std.string(borderWidth)+"px";}
org.intermedia.view.CellStyle.removeBorder=function(node){node.style.marginBottom="0px";node.style.marginTop="0px";node.style.marginLeft="0px";node.style.marginRight="0px";}
org.intermedia.view.CellThumb=$hxClasses["org.intermedia.view.CellThumb"]=function(cellPerLine,style){if(cellPerLine==null)cellPerLine=1;org.intermedia.view.CellBase.call(this,cellPerLine,style);};org.intermedia.view.CellThumb.__name__=true;org.intermedia.view.CellThumb.__super__=org.intermedia.view.CellBase;org.intermedia.view.CellThumb.prototype=$extend(org.intermedia.view.CellBase.prototype,{refreshStyles:function(){org.intermedia.view.CellBase.prototype.refreshStyles.call(this);this._croppedImage.refreshStyles();},updateView:function(){if(this._data.thumbUrl!=""&&this._data.thumbUrl!=null){this._croppedImage=new org.intermedia.view.CroppedImage(this._style);this._croppedImage.setData(this._data);this.node.appendChild(this._croppedImage.node);}},initStyle:function(){this._style={cell:org.intermedia.view.CellThumbStyle.setCellStyle,thumbnailMask:org.intermedia.view.CellThumbStyle.setThumbnailMaskStyle,thumbnail:null,textBlock:null,title:null,author:null};},__class__:org.intermedia.view.CellThumb});org.intermedia.view.CellThumbStyle=$hxClasses["org.intermedia.view.CellThumbStyle"]=function(){}
org.intermedia.view.CellThumbStyle.__name__=true;org.intermedia.view.CellThumbStyle.setCellStyle=function(node,cellPerLine){if(cellPerLine==null)cellPerLine=1;org.intermedia.view.CellStyle.setCellStyle(node,cellPerLine);var cellWidthPercent=org.intermedia.view.CellStyle.computeWidthPercentage(cellPerLine,4);node.style.width=Std.string(cellWidthPercent)+"%";node.style.height=Std.string(90)+"px";node.style.maxHeight=Std.string(160)+"px";node.style.overflowX="hidden";node.style.overflowY="hidden";org.intermedia.view.CellStyle.addBorder(node,1);}
org.intermedia.view.CellThumbStyle.setThumbnailMaskStyle=function(node){node.style.width=Std.string(100)+"%";node.style.height=Std.string(100)+"%";node.style.overflowX="hidden";node.style.overflowY="hidden";node.style.display="inline-block";}
org.intermedia.view.CellThumbText1=$hxClasses["org.intermedia.view.CellThumbText1"]=function(cellPerLine,style){if(cellPerLine==null)cellPerLine=1;this._titleLength=0;org.intermedia.view.CellBase.call(this,cellPerLine,style);if(this._cellPerLine==1)this._titleLength=120;else this._titleLength=50;};org.intermedia.view.CellThumbText1.__name__=true;org.intermedia.view.CellThumbText1.__super__=org.intermedia.view.CellBase;org.intermedia.view.CellThumbText1.prototype=$extend(org.intermedia.view.CellBase.prototype,{refreshStyles:function(){org.intermedia.view.CellBase.prototype.refreshStyles.call(this);this._croppedImage.refreshStyles();},updateView:function(){org.intermedia.view.CellBase.prototype.updateView.call(this);if(this._data.thumbUrl!=""&&this._data.thumbUrl!=null){this._croppedImage=new org.intermedia.view.CroppedImage(this._style);this._croppedImage.setData(this._data);this.node.appendChild(this._croppedImage.node);}
var cellTextBlockContainer=js.Lib.document.createElement("div");this._style.textBlock(cellTextBlockContainer);this.node.appendChild(cellTextBlockContainer);if(this._data.title!=""&&this._data.title!=null){var text=this._data.title;if(text.length>this._titleLength){text=HxOverrides.substr(text,0,this._titleLength);text=HxOverrides.substr(text,0,text.lastIndexOf(" "))+"...";}
var textElement=js.Lib.document.createTextNode(text);var cellTitleContainer=js.Lib.document.createElement("div");cellTitleContainer.appendChild(textElement);this._style.title(cellTitleContainer);cellTextBlockContainer.appendChild(cellTitleContainer);}},initStyle:function(){this._style={cell:org.intermedia.view.CellThumbText1Style.setCellStyle,thumbnailMask:org.intermedia.view.CellThumbText1Style.setThumbnailMaskStyle,thumbnail:null,textBlock:org.intermedia.view.CellThumbText1Style.setTextBlockStyle,title:org.intermedia.view.CellThumbText1Style.setTitleStyle,author:null};},__class__:org.intermedia.view.CellThumbText1});org.intermedia.view.CellThumbText1BisStyle=$hxClasses["org.intermedia.view.CellThumbText1BisStyle"]=function(){}
org.intermedia.view.CellThumbText1BisStyle.__name__=true;org.intermedia.view.CellThumbText1BisStyle.setCellStyle=function(node,cellPerLine){if(cellPerLine==null)cellPerLine=1;org.intermedia.view.CellStyle.setCellStyle(node,cellPerLine);var cellWidthPercent=org.intermedia.view.CellStyle.computeWidthPercentage(cellPerLine,4);node.style.width=Std.string(cellWidthPercent)+"%";node.style.height=Std.string(90)+"px";node.style.maxHeight=Std.string(160)+"px";node.style.overflowX="hidden";node.style.overflowY="hidden";org.intermedia.view.CellStyle.addBorder(node,4);}
org.intermedia.view.CellThumbText1Style=$hxClasses["org.intermedia.view.CellThumbText1Style"]=function(){}
org.intermedia.view.CellThumbText1Style.__name__=true;org.intermedia.view.CellThumbText1Style.setCellStyle=function(node,cellPerLine){if(cellPerLine==null)cellPerLine=1;org.intermedia.view.CellStyle.setCellStyle(node,cellPerLine);node.style.verticalAlign="middle";var cellWidthPercent=org.intermedia.view.CellStyle.computeWidthPercentage(cellPerLine,1);node.style.width=Std.string(cellWidthPercent)+"%";node.style.height=Std.string(90)+"px";node.style.maxHeight=Std.string(160)+"px";node.style.overflowX="hidden";node.style.overflowY="hidden";org.intermedia.view.CellStyle.addBorder(node,1);}
org.intermedia.view.CellThumbText1Style.setThumbnailMaskStyle=function(node){node.style.marginTop=Std.string(6)+"px";node.style.marginLeft="2%";node.style.width=Std.string(34)+"%";node.style.height=Std.string(85)+"%";node.style.overflowX="hidden";node.style.overflowY="hidden";node.style.display="inline-block";}
org.intermedia.view.CellThumbText1Style.setTextBlockStyle=function(node){node.style.display="inline-block";node.style.marginTop=Std.string(6)+"px";node.style.marginLeft="2%";node.style.verticalAlign="top";node.style.width=Std.string(60)+"%";}
org.intermedia.view.CellThumbText1Style.setTextStyle=function(node){node.style.display="block";node.style.color="#444444";node.style.fontFamily="Arial, sans-serif";}
org.intermedia.view.CellThumbText1Style.setTitleStyle=function(node){org.intermedia.view.CellThumbText1Style.setTextStyle(node);node.style.fontSize="14px";}
org.intermedia.view.Constants=$hxClasses["org.intermedia.view.Constants"]=function(){}
org.intermedia.view.Constants.__name__=true;org.intermedia.view.CroppedImage=$hxClasses["org.intermedia.view.CroppedImage"]=function(style){this._opacityDelayInit=800;org.intermedia.view.ViewBase.call(this);this._style=style;this.node=js.Lib.document.createElement("div");};org.intermedia.view.CroppedImage.__name__=true;org.intermedia.view.CroppedImage.__super__=org.intermedia.view.ViewBase;org.intermedia.view.CroppedImage.prototype=$extend(org.intermedia.view.ViewBase.prototype,{refreshStyles:function(){var maskSize={width:this.node.clientWidth,height:this.node.clientHeight};org.intermedia.view.ImageUtils.cropImage(this._image,maskSize);},tweenEnd:function(e){},tweenOpacity:function(e){this._image.style.opacity=e;},fadeIn:function(){var tween=new feffects.Tween(0,1,400);tween.onUpdate($bind(this,this.tweenOpacity));tween.onFinish($bind(this,this.tweenEnd));tween.start();},onImageLoadSuccessCallback:function(event){this.refreshStyles();this._image.style.opacity=0;this.node.appendChild(this._image);haxe.Timer.delay($bind(this,this.fadeIn),Std.random(this._opacityDelayInit));if(this.onImageLoadSuccess!=null)this.onImageLoadSuccess();this._opacityDelayInit=this._opacityDelayInit*3;},loadThumb:function(imageUrl){this._image=js.Lib.document.createElement("img");this._image.onload=$bind(this,this.onImageLoadSuccessCallback);this._image.src=imageUrl;},updateView:function(){this._style.thumbnailMask(this.node);this.loadThumb(this._data.thumbUrl);},__class__:org.intermedia.view.CroppedImage});org.intermedia.view.DetailStyle=$hxClasses["org.intermedia.view.DetailStyle"]=function(){}
org.intermedia.view.DetailStyle.__name__=true;org.intermedia.view.DetailStyle.setDetailStyle=function(node){node.style.display="inline-block";node.style.position="static";node.style.marginLeft="0px";node.style.marginRight="0px";node.style.marginTop=Std.string(43)+"px";node.style.marginBottom="0px";node.style.paddingLeft=Std.string(5)+"%";node.style.paddingRight=Std.string(5)+"%";node.style.paddingTop=Std.string(10)+"px";node.style.paddingBottom=Std.string(10)+"px";node.style.width=Std.string(90)+"%";node.style.height="auto";node.style.top=Std.string(43)+"px";node.style.bottom="0px";node.style.overflowX="hidden";node.style.overflowY="hidden";node.style.backgroundColor="#FEFEFE";node.style.textAlign="justify";}
org.intermedia.view.DetailStyle.setText=function(node){node.style.display="block";node.style.color="#202020";node.style.fontFamily="Arial, sans-serif";}
org.intermedia.view.DetailStyle.setTitle=function(node){org.intermedia.view.DetailStyle.setText(node);node.style.fontSize="18px";node.style.fontWeight="bold";}
org.intermedia.view.DetailStyle.setAuthor=function(node){org.intermedia.view.DetailStyle.setText(node);node.style.fontSize="12px";node.style.fontWeight="normal";}
org.intermedia.view.DetailStyle.setDescription=function(node){org.intermedia.view.DetailStyle.setText(node);node.style.marginTop=Std.string(10)+"px";node.style.marginBottom=Std.string(10)+"px";node.style.fontSize="14px";}
org.intermedia.view.DetailView=$hxClasses["org.intermedia.view.DetailView"]=function(){this._titleElement=js.Lib.document.createTextNode("");this._authorElement=js.Lib.document.createTextNode("");this._descriptionElement=js.Lib.document.createTextNode("");this._contentElement=js.Lib.document.createTextNode("");org.intermedia.view.ViewBase.call(this);};org.intermedia.view.DetailView.__name__=true;org.intermedia.view.DetailView.__super__=org.intermedia.view.ViewBase;org.intermedia.view.DetailView.prototype=$extend(org.intermedia.view.ViewBase.prototype,{resizeNode:function(nodeToResize){var originalWidth=Std.parseInt(nodeToResize.getAttribute("width"));var originalHeight=Std.parseInt(nodeToResize.getAttribute("height"));if(Std.parseInt(nodeToResize.getAttribute("width"))>js.Lib.window.innerWidth){var newWidth=90*js.Lib.window.innerWidth/100|0;nodeToResize.style.width=Std.string(90)+"%";var newHeight=originalHeight*newWidth/originalWidth|0;nodeToResize.style.height=Std.string(newHeight)+"px";}else{nodeToResize.style.width=Std.parseInt(nodeToResize.getAttribute("width"))+"px";nodeToResize.style.height=Std.parseInt(nodeToResize.getAttribute("height"))+"px";}},resizeNodeChildrenTag:function(nodeToResize,tagName){var tagNodes=nodeToResize.getElementsByTagName(tagName);var _g1=0,_g=tagNodes.length;while(_g1<_g){var i=_g1++;this.resizeNode(tagNodes[i]);}},refreshStyles:function(){org.intermedia.view.DetailStyle.setDetailStyle(this.node);this.resizeNodeChildrenTag(this._contentContainer,"iframe");this.resizeNodeChildrenTag(this._contentContainer,"img");},updateView:function(){this._titleContainer.removeChild(this._titleElement);this._titleElement=js.Lib.document.createTextNode(this._data.title);this._titleContainer.appendChild(this._titleElement);this._authorContainer.removeChild(this._authorElement);this._authorElement=js.Lib.document.createTextNode(this._data.author);this._authorContainer.appendChild(this._authorElement);if(this._data.content=="")this._data.content=this._data.description;this.node.removeChild(this._contentContainer);this._contentContainer.innerHTML=this._data.content;this.resizeNodeChildrenTag(this._contentContainer,"iframe");this.resizeNodeChildrenTag(this._contentContainer,"img");this.node.appendChild(this._contentContainer);},buildView:function(){org.intermedia.view.DetailStyle.setDetailStyle(this.node);this._titleContainer=js.Lib.document.createElement("div");org.intermedia.view.DetailStyle.setTitle(this._titleContainer);this._titleContainer.appendChild(this._titleElement);this.node.appendChild(this._titleContainer);this._authorContainer=js.Lib.document.createElement("div");org.intermedia.view.DetailStyle.setAuthor(this._authorContainer);this._authorContainer.appendChild(this._authorElement);this.node.appendChild(this._authorContainer);this._contentContainer=js.Lib.document.createElement("div");org.intermedia.view.DetailStyle.setDescription(this._contentContainer);this.node.appendChild(this._contentContainer);},__class__:org.intermedia.view.DetailView});org.intermedia.view.HeaderStyle=$hxClasses["org.intermedia.view.HeaderStyle"]=function(){}
org.intermedia.view.HeaderStyle.__name__=true;org.intermedia.view.HeaderStyle.setHeaderStyle=function(node){node.style.position="fixed";node.style.display="block";node.style.top="0px";node.style.bottom="auto";node.style.left="0px";node.style.top="0px";node.style.minWidth="100%";node.style.width="100%";node.style.height=Std.string(43)+"px";node.style.backgroundImage="url("+"assets/tile_french-tech.png"+")";}
org.intermedia.view.HeaderStyle.setHeaderTextStyle=function(node){node.style.position="absolute";node.style.color="#EEEEEE";node.style.fontSize="20px";node.style.fontWeight="bold";node.style.fontStyle="normal";node.style.fontFamily="Arial, sans-serif";node.style.textAlign="center";node.style.paddingTop="10px";node.style.minWidth="100%";node.style.top="0px";node.style.width="100%";node.style.height="100%";node.style.verticalAlign="middle";}
org.intermedia.view.HeaderStyle.setBackButtonStyle=function(node){node.style.position="absolute";node.style.paddingTop="6px";node.style.paddingLeft="10px";node.style.top="0px";}
org.intermedia.view.HeaderStyle.setBackButtonTextStyle=function(node){node.style.position="absolute";node.style.color="#EEEEEE";node.style.fontSize="14px";node.style.lineHeight="normal";node.style.fontWeight="bold";node.style.fontStyle="normal";node.style.fontFamily="Arial, sans-serif";node.style.textAlign="center";node.style.paddingTop="12px";node.style.paddingLeft="30px";node.style.top="0px";node.style.left="0px";node.style.cursor="pointer";}
org.intermedia.view.HeaderStyle.setBackButtonImageStyle=function(node){node.style.display="inline";node.style.position="relative";node.style.top="0px";node.style.left="0px";node.style.cursor="pointer";}
org.intermedia.view.HeaderView=$hxClasses["org.intermedia.view.HeaderView"]=function(){org.intermedia.view.ViewBase.call(this);this._data="";this._backButtonContainer=this.buildBackButtonView();};org.intermedia.view.HeaderView.__name__=true;org.intermedia.view.HeaderView.__super__=org.intermedia.view.ViewBase;org.intermedia.view.HeaderView.prototype=$extend(org.intermedia.view.ViewBase.prototype,{onBackButtonClickCallback:function(){if(this.onBackButtonClick!=null)this.onBackButtonClick();},buildBackButtonView:function(){var _g=this;var backButtonContainer=js.Lib.document.createElement("div");org.intermedia.view.HeaderStyle.setBackButtonStyle(backButtonContainer);var backButtonArrowLeft=js.Lib.document.createElement("img");org.intermedia.view.HeaderStyle.setBackButtonImageStyle(backButtonArrowLeft);backButtonArrowLeft.src="assets/blackButtonLeft.png";backButtonContainer.appendChild(backButtonArrowLeft);var backButtonArrowRight=js.Lib.document.createElement("img");org.intermedia.view.HeaderStyle.setBackButtonImageStyle(backButtonArrowRight);backButtonArrowRight.src="assets/blackButtonRight.png";backButtonContainer.appendChild(backButtonArrowRight);var backButtonTextContainer=js.Lib.document.createElement("div");org.intermedia.view.HeaderStyle.setBackButtonTextStyle(backButtonTextContainer);var backButtonText=js.Lib.document.createTextNode("Back");backButtonTextContainer.appendChild(backButtonText);backButtonContainer.appendChild(backButtonTextContainer);backButtonContainer.onmouseup=function(event){_g.onBackButtonClickCallback();};return backButtonContainer;},updateView:function(){this._titleContainer.removeChild(this._titleTextElement);this._titleTextElement=js.Lib.document.createTextNode(this._data);this._titleContainer.appendChild(this._titleTextElement);},buildView:function(){org.intermedia.view.HeaderStyle.setHeaderStyle(this.node);this._titleTextElement=js.Lib.document.createTextNode(this._data);this._titleContainer=js.Lib.document.createElement("div");this._titleContainer.appendChild(this._titleTextElement);org.intermedia.view.HeaderStyle.setHeaderTextStyle(this._titleContainer);this.node.appendChild(this._titleContainer);},setDisplayBackButton:function(v){this._displayBackButton=v;if(this._displayBackButton)this.node.appendChild(this._backButtonContainer);else if(this._backButtonContainer.parentNode!=null)this.node.removeChild(this._backButtonContainer);return this._displayBackButton;},getDisplayBackButton:function(){return this._displayBackButton;},__class__:org.intermedia.view.HeaderView});org.intermedia.view.HomePage=$hxClasses["org.intermedia.view.HomePage"]=function(initData){this._data=initData;this.cells=new Array();org.intermedia.view.ViewBase.call(this);};org.intermedia.view.HomePage.__name__=true;org.intermedia.view.HomePage.__super__=org.intermedia.view.ViewBase;org.intermedia.view.HomePage.prototype=$extend(org.intermedia.view.ViewBase.prototype,{onListItemSelectedCallback:function(cellData){if(this.onListItemSelected!=null)this.onListItemSelected(cellData);},buildView:function(){var _g2=this;var cellStyle={cell:org.intermedia.view.CellThumbText1BisStyle.setCellStyle,thumbnailMask:org.intermedia.view.CellThumbStyle.setThumbnailMaskStyle,thumbnail:null,textBlock:null,title:null,author:null};var cell0=new org.intermedia.view.CellThumb(1,cellStyle);this.cells.push(cell0);var cell1=new org.intermedia.view.CellThumb(2,cellStyle);this.cells.push(cell1);var cell2=new org.intermedia.view.CellThumb(2,cellStyle);this.cells.push(cell2);var cell3=new org.intermedia.view.CellThumb(2,cellStyle);this.cells.push(cell3);var cell4=new org.intermedia.view.CellThumb(2,cellStyle);this.cells.push(cell4);var _g1=0,_g=this.cells.length;while(_g1<_g){var i=[_g1++];this.cells[i[0]].setData(this._data[i[0]]);this.cells[i[0]].node.onmouseup=(function(i){return function(mouseEventData){_g2.onListItemSelectedCallback(_g2.cells[i[0]].getData());};})(i);this.node.appendChild(this.cells[i[0]].node);}},__class__:org.intermedia.view.HomePage});org.intermedia.view.ImageUtils=$hxClasses["org.intermedia.view.ImageUtils"]=function(){}
org.intermedia.view.ImageUtils.__name__=true;org.intermedia.view.ImageUtils.cropImage=function(image,maskSize){var maskRatio=maskSize.width/maskSize.height;var imageRatio=0;if(image.naturalHeight!=0)imageRatio=image.naturalWidth/image.naturalHeight;var resizedImageSize={width:0,height:0};if(imageRatio>maskRatio){resizedImageSize.height=maskSize.height;resizedImageSize.width=resizedImageSize.height*imageRatio|0;image.style.width=Std.string(resizedImageSize.width)+"px";image.style.height=Std.string(resizedImageSize.height)+"px";image.style.marginTop="0px";image.style.marginLeft=Std.string(-Math.abs(maskSize.width-resizedImageSize.width)/2)+"px";}else{resizedImageSize.width=maskSize.width;resizedImageSize.height=resizedImageSize.width/imageRatio|0;image.style.width=Std.string(resizedImageSize.width)+"px";image.style.height=Std.string(resizedImageSize.height)+"px";image.style.marginTop=Std.string(-Math.abs(maskSize.height-resizedImageSize.height)/2)+"px";image.style.marginLeft="0px";}
return image;}
org.intermedia.view.ListViewBase=$hxClasses["org.intermedia.view.ListViewBase"]=function(){org.intermedia.view.ViewBase.call(this);this.initStyle();this._style.list(this.node);this._dataRequested=false;this.displayListBottomLoader=true;this._cells=new Array();this.buildBottomLoader();this.node.onscroll=$bind(this,this.onScrollCallback);};org.intermedia.view.ListViewBase.__name__=true;org.intermedia.view.ListViewBase.__super__=org.intermedia.view.ViewBase;org.intermedia.view.ListViewBase.prototype=$extend(org.intermedia.view.ViewBase.prototype,{applyScrollTopPosition:function(){this.node.scrollTop=this._scrollTopPosition;},storeScrollTopPosition:function(){this._scrollTopPosition=this.node.scrollTop;},refreshStyles:function(){this._style.list(this.node);var _g=0,_g1=this._cells;while(_g<_g1.length){var cell=_g1[_g];++_g;cell.refreshStyles();}},onDataRequestCallback:function(id){if(this.onDataRequest!=null)this.onDataRequest(id);},onScrollCallback:function(event){if(!this._dataRequested&&this.node.scrollTop>=this.node.scrollHeight-(js.Lib.window.innerHeight-78)-10){this._dataRequested=true;if(org.intermedia.Settings.getInstance().online)this.onDataRequestCallback(this.id);else this.setData(this._data);}},onListItemSelectedCallback:function(cellData){if(this.onListItemSelected!=null)this.onListItemSelected(cellData);},createCell:function(){var cell=new org.intermedia.view.CellBase();return cell;},updateView:function(){var _g2=this;var _g=0,_g1=Reflect.fields(this._data);while(_g<_g1.length){var index=_g1[_g];++_g;var cell=[this.createCell()];cell[0].setData(Reflect.field(this._data,index));cell[0].node.onmouseup=(function(cell){return function(mouseEventData){_g2.onListItemSelectedCallback(cell[0].getData());};})(cell);this._cells.push(cell[0]);this.node.appendChild(cell[0].node);}
if(this._listBottomLoader.parentNode!=null)this.node.removeChild(this._listBottomLoader);if(this.displayListBottomLoader==true)this.node.appendChild(this._listBottomLoader);if(this.node.parentNode.parentNode!=null){}
this._dataRequested=false;},buildBottomLoader:function(){this._bottomLoaderImage=js.Lib.document.createElement("img");org.intermedia.view.ListViewStyle.loaderImage(this._bottomLoaderImage);this._bottomLoaderImage.src="assets/loading.gif";this._listBottomLoader=js.Lib.document.createElement("div");this._listBottomLoader.appendChild(this._bottomLoaderImage);org.intermedia.view.CellStyle.setCellStyle(this._listBottomLoader);},initStyle:function(){this._style={list:org.intermedia.view.ListViewStyle.setListStyle};},__class__:org.intermedia.view.ListViewBase});org.intermedia.view.ListViewStyle=$hxClasses["org.intermedia.view.ListViewStyle"]=function(){}
org.intermedia.view.ListViewStyle.__name__=true;org.intermedia.view.ListViewStyle.setListStyle=function(node){node.style.display="inline-block";node.style.position="static";node.style.marginLeft="0px";node.style.marginRight="0px";node.style.marginTop="0px";node.style.marginBottom="0px";node.style.paddingLeft="0px";node.style.paddingRight="0px";node.style.paddingTop="0px";node.style.paddingBottom="0px";node.style.width=Std.string(js.Lib.window.innerWidth)+"px";node.style.height="100%";node.style.top="0px";node.style.bottom="0px";node.style.verticalAlign="top";node.style.overflowX="hidden";node.style.overflowY="auto";node.style.backgroundColor="#CCCCCC";}
org.intermedia.view.ListViewStyle.loaderImage=function(node){node.style.display="block";node.style.marginLeft="auto";node.style.marginRight="auto";node.style.marginTop="10px";node.style.marginBottom=Std.string(10)+"px";node.style.top=Std.string(js.Lib.window.innerHeight)+"px";}
org.intermedia.view.LoadingView=$hxClasses["org.intermedia.view.LoadingView"]=function(){this.node=js.Lib.document.createElement("div");org.intermedia.view.LoadingViewStyle.setLoadingStyle(this.node);this.loadThumb();};org.intermedia.view.LoadingView.__name__=true;org.intermedia.view.LoadingView.prototype={loadThumb:function(){var image=js.Lib.document.createElement("img");org.intermedia.view.LoadingViewStyle.setThumbnailStyle(image);this.node.appendChild(image);image.src="assets/loading.gif";},__class__:org.intermedia.view.LoadingView}
org.intermedia.view.LoadingViewStyle=$hxClasses["org.intermedia.view.LoadingViewStyle"]=function(){}
org.intermedia.view.LoadingViewStyle.__name__=true;org.intermedia.view.LoadingViewStyle.setLoadingStyle=function(node){node.style.display="block";node.style.position="absolute";node.style.width=Std.string(js.Lib.window.innerWidth)+"px";node.style.height=Std.string(js.Lib.window.innerHeight)+"px";node.style.textAlign="center";node.style.top="0px";node.style.bottom="0px";node.style.color="#FFFFFF";node.style.zIndex=1000;}
org.intermedia.view.LoadingViewStyle.setThumbnailStyle=function(node){node.style.position="relative";node.style.marginTop="auto";node.style.marginBottom="auto";node.style.marginLeft="auto";node.style.marginRight="auto";node.style.top="45%";}
org.intermedia.view.MenuCellText=$hxClasses["org.intermedia.view.MenuCellText"]=function(){org.intermedia.view.CellBase.call(this);};org.intermedia.view.MenuCellText.__name__=true;org.intermedia.view.MenuCellText.__super__=org.intermedia.view.CellBase;org.intermedia.view.MenuCellText.prototype=$extend(org.intermedia.view.CellBase.prototype,{updateView:function(){var cellData=this._data;var cellTextContainer=js.Lib.document.createElement("div");if(cellData.title!=""&&cellData.title!=null){var textElement=js.Lib.document.createTextNode(cellData.title);cellTextContainer.appendChild(textElement);this.node.appendChild(cellTextContainer);this._style.title(cellTextContainer);}},initStyle:function(){this._style={cell:org.intermedia.view.MenuCellTextStyle.setCellStyle,thumbnailMask:null,thumbnail:null,textBlock:null,title:org.intermedia.view.MenuCellTextStyle.setCellTextStyle,author:null};},__class__:org.intermedia.view.MenuCellText});org.intermedia.view.MenuCellTextStyle=$hxClasses["org.intermedia.view.MenuCellTextStyle"]=function(){}
org.intermedia.view.MenuCellTextStyle.__name__=true;org.intermedia.view.MenuCellTextStyle.setCellStyle=function(node,cellPerLine){if(cellPerLine==null)cellPerLine=1;node.style.display="inline-block";node.style.position="absolute";node.style.marginLeft="0px";node.style.marginRight="0px";node.style.marginTop="0px";node.style.marginBottom="0px";node.style.paddingLeft="0px";node.style.paddingRight="0px";node.style.paddingTop=Std.string(7)+"px";node.style.paddingBottom=Std.string(7)+"px";node.style.width="auto";org.intermedia.view.CellStyle.removeBorder(node);node.style.backgroundColor=null;node.style.cursor="pointer";}
org.intermedia.view.MenuCellTextStyle.setCellTextStyle=function(node){node.style.display="inline";node.style.position="relative";node.style.paddingRight=Std.string(5)+"px";node.style.paddingLeft=Std.string(5)+"px";node.style.fontSize="16px";node.style.lineHeight="normal";node.style.fontStyle="normal";node.style.fontFamily="Arial, sans-serif";node.style.fontVariant="normal";node.style.textTransform="none";node.style.letterSpacing="normal";node.style.wordSpacing="normal";node.style.textIndent="0px";node.style.whiteSpace="normal";node.style.verticalAlign="middle";node.style.color="#AAAAAA";}
org.intermedia.view.MenuListViewStyle=$hxClasses["org.intermedia.view.MenuListViewStyle"]=function(){}
org.intermedia.view.MenuListViewStyle.__name__=true;org.intermedia.view.MenuListViewStyle.setMenuStyle=function(node){node.style.position="fixed";node.style.display="block";node.style.marginLeft="0px";node.style.marginRight="0px";node.style.marginTop="0px";node.style.marginBottom="0px";node.style.paddingLeft="0px";node.style.paddingRight="0px";node.style.paddingTop="0px";node.style.paddingBottom="0px";node.style.minWidth="100%";node.style.width="100%";node.style.height=Std.string(35)+"px";node.style.top=Std.string(43)+"px";node.style.bottom="auto";node.style.backgroundColor=null;node.style.backgroundImage="url("+"assets/tile_french-tech2.png"+")";node.style.overflowX="hidden";node.style.overflowY="hidden";}
org.intermedia.view.MenuListViewText=$hxClasses["org.intermedia.view.MenuListViewText"]=function(){this._index=0;this._menuItem0LeftTarget=0;this._menuItem1LeftTarget=0;this._menuItem2LeftTarget=0;org.intermedia.view.ListViewBase.call(this);this.displayListBottomLoader=false;};org.intermedia.view.MenuListViewText.__name__=true;org.intermedia.view.MenuListViewText.__super__=org.intermedia.view.ListViewBase;org.intermedia.view.MenuListViewText.prototype=$extend(org.intermedia.view.ListViewBase.prototype,{refreshStyles:function(){this.computeMenuItemsLeftTarget(this._index);this.menuItem0Move(this._menuItem0LeftTarget);this.menuItem1Move(this._menuItem1LeftTarget);this.menuItem2Move(this._menuItem2LeftTarget);this.computeMenuItemsLeftPos();},horizontalTweenEnd:function(newIndex){this.setIndex(newIndex);this.refreshStyles();},moveHorizontally:function(ratio){if(ratio>0)this.computeMenuItemsLeftTarget(Math.max(this._index-1,0)|0);else if(ratio<0)this.computeMenuItemsLeftTarget(Math.min(this._index+1,2)|0);this.menuItem0Move(this._menuItem0LeftPos+Math.abs(this._menuItem0LeftTarget-this._menuItem0LeftPos)*ratio);this.menuItem1Move(this._menuItem1LeftPos+Math.abs(this._menuItem1LeftTarget-this._menuItem1LeftPos)*ratio);this.menuItem2Move(this._menuItem2LeftPos+Math.abs(this._menuItem2LeftTarget-this._menuItem2LeftPos)*ratio);},computeMenuItemsLeftTarget:function(targetIndex){switch(targetIndex){case 0:this._menuItem0LeftTarget=(js.Lib.window.innerWidth-this._menuItem0Width)/2-2.5|0;this._menuItem1LeftTarget=js.Lib.window.innerWidth-30|0;this._menuItem2LeftTarget=3*js.Lib.window.innerWidth/2|0;break;case 1:this._menuItem0LeftTarget=-(this._menuItem0Width-30)|0;this._menuItem1LeftTarget=(js.Lib.window.innerWidth-this._menuItem1Width-5)/2|0;this._menuItem2LeftTarget=js.Lib.window.innerWidth-30|0;break;case 2:this._menuItem0LeftTarget=-js.Lib.window.innerWidth/2|0;this._menuItem1LeftTarget=-(this._menuItem1Width-30)|0;this._menuItem2LeftTarget=(js.Lib.window.innerWidth-this._menuItem2Width)/2-2.5|0;break;default:}},computeMenuItemsLeftPos:function(){this._menuItem0LeftPos=this._cells[0].node.offsetLeft;this._menuItem1LeftPos=this._cells[1].node.offsetLeft;this._menuItem2LeftPos=this._cells[2].node.offsetLeft;},computeMenuItemsWidth:function(){this._menuItem0Width=this._cells[0].node.clientWidth;this._menuItem1Width=this._cells[1].node.clientWidth;this._menuItem2Width=this._cells[2].node.clientWidth;},menuItem2Move:function(e){this._cells[2].node.style.left=(e|0)+"px";},menuItem1Move:function(e){this._cells[1].node.style.left=(e|0)+"px";},menuItem0Move:function(e){this._cells[0].node.style.left=(e|0)+"px";},setIndex:function(v){this._cells[this._index].node.style.fontWeight="normal";this._cells[v].node.style.fontWeight="bold";this._index=v;return v;},getIndex:function(){return this._index;},createCell:function(){var cell=new org.intermedia.view.MenuCellText();return cell;},updateView:function(){var _g2=this;var _g=0,_g1=Reflect.fields(this._data);while(_g<_g1.length){var field=_g1[_g];++_g;var cell=[this.createCell()];cell[0].setData(Reflect.field(this._data,field));cell[0].node.onmouseup=(function(cell){return function(mouseEventData){_g2.onListItemSelectedCallback(cell[0].getData());};})(cell);this._cells.push(cell[0]);this.node.appendChild(cell[0].node);}
if(this._listBottomLoader.parentNode!=null)this.node.removeChild(this._listBottomLoader);if(this.displayListBottomLoader==true)this.node.appendChild(this._listBottomLoader);this.computeMenuItemsWidth();this.setIndex(1);this.refreshStyles();},initStyle:function(){this._style={list:org.intermedia.view.MenuListViewStyle.setMenuStyle};},__class__:org.intermedia.view.MenuListViewText});org.intermedia.view.Scroll2D=$hxClasses["org.intermedia.view.Scroll2D"]=function(scrollType){this._scrollType=scrollType;this.initialScrollPosition={x:0,y:0};this.init();};org.intermedia.view.Scroll2D.__name__=true;org.intermedia.view.Scroll2D.prototype={computeAverageVelocity:function(){this._verticalVelocity=0;var sum=0;var _g1=0,_g=this._verticalVelocityArray.length;while(_g1<_g){var i=_g1++;sum+=this._verticalVelocityArray[i]*(5-i);}
this._verticalVelocity=sum/15.;},computeVelocity:function(time){this._verticalVelocity=(this._offset.y-this._previousY)/time;this._previousY=this._offset.y;if(this._verticalVelocityArray.length<5){var _g=0;while(_g<5){var i=_g++;this._verticalVelocityArray.push(this._verticalVelocity);}}else{this._verticalVelocityArray.unshift(this._verticalVelocity);this._verticalVelocityArray.pop();}},onVerticalReleaseCallback:function(){if(this.onVerticalScroll!=null){var timeDelta=haxe.Timer.stamp()*1000-this._time;var releaseTime=Math.abs(this._verticalVelocity/0.01);var amplitude=this._verticalVelocity*releaseTime;var verticalReleaseDelta=this._offset.y+(amplitude*(1-Math.exp(-timeDelta/releaseTime))|0);this.onVerticalScroll(verticalReleaseDelta);if(timeDelta>6*releaseTime)this._decelerationTimer.stop();}},onVerticalScrollCallback:function(e){if(this.onVerticalScroll!=null)this.onVerticalScroll(e|0);},verticalReleaseTween:function(){this._time=haxe.Timer.stamp()*1000;if(this._offset.y>0)this._verticalReleaseDeceleration=-0.01;else this._verticalReleaseDeceleration=0.01;this.computeAverageVelocity();this._decelerationTimer=new haxe.Timer(10);this._decelerationTimer.run=$bind(this,this.onVerticalReleaseCallback);},horizontalTweenEnd:function(e){if(this.onHorizontalTweenEnd!=null)this.onHorizontalTweenEnd(e|0);},onHorizontalScrollCallback:function(xOffset){if(this.onHorizontalScroll!=null)this.onHorizontalScroll(xOffset|0);},horizontalReleaseTween:function(xOrigin,xTarget){this._horizontalTween=new feffects.Tween(xOrigin,xTarget,150,feffects.easing.Quad.easeOut);this._horizontalTween.onUpdate($bind(this,this.onHorizontalScrollCallback));this._horizontalTween.onFinish($bind(this,this.horizontalTweenEnd));this._horizontalTween.start();},onHorizontalUpCallback:function(event){if(this.onHorizontalUp!=null)this.onHorizontalUp(event,this._offset.x);},onUpCallback:function(event){if(this._direction==org.intermedia.view.Direction.horizontal)this.onHorizontalUpCallback(event);else if(this._direction==org.intermedia.view.Direction.vertical)this.verticalReleaseTween();this._direction=org.intermedia.view.Direction.notYetSet;},onVerticalMoveCallback:function(event){var timeDelta=haxe.Timer.stamp()*1000-this._time;this._time=haxe.Timer.stamp()*1000;this.computeVelocity(timeDelta);this._scrollPosition={x:this.initialScrollPosition.x,y:this.initialScrollPosition.y-this._offset.y};if(this._scrollPosition.y>0)event.preventDefault();this.onVerticalScrollCallback(this._offset.y);},onHorizontalMoveCallback:function(event){event.preventDefault();this._scrollPosition={x:this.initialScrollPosition.x-this._offset.x,y:this.initialScrollPosition.y};this.onHorizontalScrollCallback(this._offset.x);},onMoveCallback:function(event){this._offset.x=event.touches[0].pageX-this._initialPosition.x|0;this._offset.y=event.touches[0].pageY-this._initialPosition.y|0;if(this._direction==org.intermedia.view.Direction.notYetSet){var absX=Math.abs(this._offset.x);var absY=Math.abs(this._offset.y);if(Math.max(absX,absY)>=5){if(absX>absY)this._direction=org.intermedia.view.Direction.horizontal;else this._direction=org.intermedia.view.Direction.vertical;}}
if(this._direction==org.intermedia.view.Direction.horizontal)this.onHorizontalMoveCallback(event);else if(this._direction==org.intermedia.view.Direction.vertical)this.onVerticalMoveCallback(event);},onDownCallback:function(event){this.init();if(this._horizontalTween!=null&&this._horizontalTween.isPlaying)this._horizontalTween.pause();if(this._verticalTween!=null&&this._verticalTween.isPlaying)this._verticalTween.stop();this._initialPosition.x=event.touches[0].pageX;this._initialPosition.y=event.touches[0].pageY;if(this._scrollType==org.intermedia.view.ScrollType.horizontal)this._direction=org.intermedia.view.Direction.horizontal;else if(this._scrollType==org.intermedia.view.ScrollType.vertical)this._direction=org.intermedia.view.Direction.vertical;else this._direction=org.intermedia.view.Direction.notYetSet;},touchHandler:function(event){switch(event.type){case"touchstart":this.onDownCallback(event);break;case"touchmove":this.onMoveCallback(event);break;case"touchend":this.onUpCallback(event);break;default:return;}},init:function(){this._initialPosition={x:0,y:0};this._offset={x:0,y:0};this._scrollPosition={x:0,y:0};this._direction=org.intermedia.view.Direction.notYetSet;this._verticalVelocityArray=new Array();this._yDelta=0;this._time=haxe.Timer.stamp()*1000;this._verticalVelocity=0;this._previousY=0;},__class__:org.intermedia.view.Scroll2D}
org.intermedia.view.Direction=$hxClasses["org.intermedia.view.Direction"]={__ename__:true,__constructs__:["horizontal","vertical","notYetSet"]}
org.intermedia.view.Direction.horizontal=["horizontal",0];org.intermedia.view.Direction.horizontal.toString=$estr;org.intermedia.view.Direction.horizontal.__enum__=org.intermedia.view.Direction;org.intermedia.view.Direction.vertical=["vertical",1];org.intermedia.view.Direction.vertical.toString=$estr;org.intermedia.view.Direction.vertical.__enum__=org.intermedia.view.Direction;org.intermedia.view.Direction.notYetSet=["notYetSet",2];org.intermedia.view.Direction.notYetSet.toString=$estr;org.intermedia.view.Direction.notYetSet.__enum__=org.intermedia.view.Direction;org.intermedia.view.ScrollType=$hxClasses["org.intermedia.view.ScrollType"]={__ename__:true,__constructs__:["horizontal","vertical","both"]}
org.intermedia.view.ScrollType.horizontal=["horizontal",0];org.intermedia.view.ScrollType.horizontal.toString=$estr;org.intermedia.view.ScrollType.horizontal.__enum__=org.intermedia.view.ScrollType;org.intermedia.view.ScrollType.vertical=["vertical",1];org.intermedia.view.ScrollType.vertical.toString=$estr;org.intermedia.view.ScrollType.vertical.__enum__=org.intermedia.view.ScrollType;org.intermedia.view.ScrollType.both=["both",2];org.intermedia.view.ScrollType.both.toString=$estr;org.intermedia.view.ScrollType.both.__enum__=org.intermedia.view.ScrollType;org.intermedia.view.SplashScreenView=$hxClasses["org.intermedia.view.SplashScreenView"]=function(){this.node=js.Lib.document.createElement("div");org.intermedia.view.SplashScreenViewStyle.setLoadingStyle(this.node);};org.intermedia.view.SplashScreenView.__name__=true;org.intermedia.view.SplashScreenView.prototype={__class__:org.intermedia.view.SplashScreenView}
org.intermedia.view.SplashScreenViewStyle=$hxClasses["org.intermedia.view.SplashScreenViewStyle"]=function(){}
org.intermedia.view.SplashScreenViewStyle.__name__=true;org.intermedia.view.SplashScreenViewStyle.setLoadingStyle=function(node){node.style.position="absolute";node.style.marginBottom="0px";node.style.marginTop="0px";node.style.marginLeft="0px";node.style.marginRight="0px";node.style.paddingBottom="0px";node.style.paddingTop="0px";node.style.paddingLeft="0px";node.style.paddingRight="0px";node.style.width="100%";node.style.height="100%";node.style.backgroundColor="#191919";var splashScreenUrl="";var userAgent=js.Lib.window.navigator.userAgent.toLowerCase();if(userAgent.indexOf("iphone")!=-1||userAgent.indexOf("ipad")!=-1)splashScreenUrl="splashScreens/splashScreen-640x920.png";else if(userAgent.indexOf("android")!=-1)splashScreenUrl="splashScreens/splashScreen-480x800.png";else splashScreenUrl="splashScreens/splashScreen-640x960.png";node.style.backgroundImage="url("+splashScreenUrl+")";node.style.backgroundRepeat="no-repeat";node.style.backgroundSize="100% 100%";node.style.zIndex=1000;}
org.intermedia.view.SwippableListView=$hxClasses["org.intermedia.view.SwippableListView"]=function(){org.intermedia.view.ListViewBase.call(this);this._scrollTop=0;this.setDisplayLoading(true);this._offset={x:0,y:0};this._offsetStart={x:0,y:0};this._initialPosition={x:0,y:0};this._direction=org.intermedia.view.Direction.notYetSet;this._homePageData=new Array();this._homePageDataSet=false;this._listsContainer=js.Lib.document.createElement("div");org.intermedia.view.SwippableListViewStyle.setListsContainerStyle(this._listsContainer);this._listViews=new Array();this.list0=new org.intermedia.view.ThumbTextList1(1);this.list0.id={id:0,ressource:"feed1",title:"iPhon.fr",thumb:"assets/iphon_fr-logo.jpg",url:"http://www.iphon.fr/feed/rss2",generatedBy:"wordpress"}.url;this._listViews.push(this.list0);this.list1=new org.intermedia.view.ThumbTextList1Bis(2);this.list1.id={id:1,ressource:"feed2",title:"FrAndroid",thumb:"assets/frandroid-logo.png",url:"http://www.frandroid.com/feed",generatedBy:"wordpress"}.url;this._listViews.push(this.list1);this.list2=new org.intermedia.view.ThumbTextList1(2);this.list2.id={id:2,ressource:"feed3",title:"frenchiPhone",thumb:"assets/frenchiphone-logo.png",url:"http://www.frenchiphone.com/feed/",generatedBy:"wordpress"}.url;this._listViews.push(this.list2);this.positionLists();var _g=0,_g1=this._listViews;while(_g<_g1.length){var listView=_g1[_g];++_g;listView.onDataRequest=$bind(this,this.onDataRequestCallback);listView.onListItemSelected=$bind(this,this.onListItemSelectedCallback);this._listsContainer.appendChild(listView.node);}
this._index=1;this._currentListView=this._listViews[this._index];this._currentListView.onListItemSelected=$bind(this,this.onListItemSelectedCallback);this._scrollHandler=new org.intermedia.view.Scroll2D(org.intermedia.view.ScrollType.both);this._scrollHandler.onVerticalScroll=$bind(this,this.onVerticalScroll);this._scrollHandler.onHorizontalScroll=$bind(this,this.onHorizontalScrollCallback);this._scrollHandler.onHorizontalUp=$bind(this,this.onHorizontalUpCallback);this._scrollHandler.onHorizontalTween=$bind(this,this.onHorizontalScrollCallback);this._scrollHandler.onHorizontalTweenEnd=$bind(this,this.onHorizontalTweenEndCallback);this.addTouchEvents();};org.intermedia.view.SwippableListView.__name__=true;org.intermedia.view.SwippableListView.__super__=org.intermedia.view.ListViewBase;org.intermedia.view.SwippableListView.prototype=$extend(org.intermedia.view.ListViewBase.prototype,{applyScrollTopPosition:function(){this.list0.applyScrollTopPosition();this.list1.applyScrollTopPosition();this.list2.applyScrollTopPosition();},storeScrollTopPosition:function(){this.list0.storeScrollTopPosition();this.list1.storeScrollTopPosition();this.list2.storeScrollTopPosition();},resetInitScrollPosition:function(){this._scrollHandler.initialScrollPosition={x:this.node.scrollLeft,y:this._currentListView.node.scrollTop};},computeHorizontalRatio:function(xOffset){var ratio=0;if(js.Lib.window.innerWidth!=0)ratio=xOffset/js.Lib.window.innerWidth;return ratio;},touchEnd:function(event){this._currentListView.onListItemSelected=$bind(this,this.onListItemSelectedCallback);this._scrollHandler.touchHandler(event);},touchMove:function(event){this._currentListView.onListItemSelected=null;this._scrollHandler.touchHandler(event);},touchStart:function(event){this.resetInitScrollPosition();this._scrollHandler.touchHandler(event);},addTouchEvents:function(){this.node.addEventListener("touchstart",$bind(this,this.touchStart),false);this.node.addEventListener("touchmove",$bind(this,this.touchMove),false);this.node.addEventListener("touchend",$bind(this,this.touchEnd),false);this.node.addEventListener("touchcancel",($_=this._scrollHandler,$bind($_,$_.touchHandler)),false);},onScrollCallback:function(event){},onHorizontalUpCallback:function(event,xOffset){event.preventDefault();if(xOffset<-js.Lib.window.innerHeight*0.06){if(this.getIndex()<this._listViews.length-1){var _g=this,_g1=_g.getIndex();_g.setIndex(_g1+1);_g1;}}else if(xOffset>js.Lib.window.innerHeight*0.06){if(this.getIndex()>0){var _g=this,_g1=_g.getIndex();_g.setIndex(_g1-1);_g1;}}else this.setIndex(this.getIndex());},onVerticalScroll:function(yOffset){this._currentListView.node.scrollTop=this._scrollHandler.initialScrollPosition.y-yOffset;},onHorizontalTweenEndCallback:function(xOffset){this._currentListView.onListItemSelected=$bind(this,this.onListItemSelectedCallback);var horizontalRatio=this.computeHorizontalRatio(xOffset);if(this.onHorizontalTweenEnd!=null)this.onHorizontalTweenEnd(this._index);},onHorizontalScrollCallback:function(xOffset){this._currentListView.onListItemSelected=null;var horizontalRatio=this.computeHorizontalRatio(xOffset);this.node.scrollLeft=this._scrollHandler.initialScrollPosition.x-xOffset;if(this.node.scrollLeft>this.list0.node.offsetLeft&&this.node.scrollLeft<this.list2.node.offsetLeft){if(this.onHorizontalMove!=null&&horizontalRatio!=0)this.onHorizontalMove(horizontalRatio);}},refreshStyles:function(){org.intermedia.view.ListViewBase.prototype.refreshStyles.call(this);this.positionLists();this.scrollToCurrentList();org.intermedia.view.SwippableListViewStyle.setListsContainerStyle(this._listsContainer);var _g=0,_g1=this._listViews;while(_g<_g1.length){var list=_g1[_g];++_g;list.refreshStyles();}},scrollToCurrentList:function(){this.node.scrollLeft=Std.parseInt(HxOverrides.substr(this._currentListView.node.style.left,0,-2));this.resetInitScrollPosition();},setIndex:function(v){this._currentListView.onListItemSelected=null;this._index=v;this._currentListView=this._listViews[v];this._currentListView.onListItemSelected=$bind(this,this.onListItemSelectedCallback);this._scrollHandler.horizontalReleaseTween(this._scrollHandler.initialScrollPosition.x-this.node.scrollLeft,this._scrollHandler.initialScrollPosition.x-this._currentListView.node.offsetLeft);return v;},getIndex:function(){return this._index;},updateView:function(){var _g=0,_g1=this._listViews;while(_g<_g1.length){var list=_g1[_g];++_g;if(this._data.id==list.id&&this._data.id!=this.list1.id){if(this._homePageData.length<6){var _g2=0;while(_g2<3){var i=_g2++;this._homePageData.push(this.getData().cells[i]);}}
list.setData(this._data.cells);break;}
if(this._data.id==this.list1.id)this._list1Data=this._data.cells;}
if(!this._homePageDataSet&&this._homePageData.length==6){this.list1.buildHomePage(this._homePageData);this._homePageDataSet=true;this.setDisplayLoading(false);}
if(this._homePageDataSet){this.list1.setData(this._list1Data);if(this._listsContainer.parentNode==null)this.node.appendChild(this._listsContainer);this.scrollToCurrentList();}
this.refreshStyles();},positionLists:function(){this.list1.node.style.left=Std.string(js.Lib.window.innerWidth)+"px";this.list2.node.style.left=Std.string(2*js.Lib.window.innerWidth)+"px";},initStyle:function(){this._style={list:org.intermedia.view.SwippableListViewStyle.setSwippableListStyle};},__class__:org.intermedia.view.SwippableListView});org.intermedia.view.SwippableListViewStyle=$hxClasses["org.intermedia.view.SwippableListViewStyle"]=function(){}
org.intermedia.view.SwippableListViewStyle.__name__=true;org.intermedia.view.SwippableListViewStyle.setSwippableListStyle=function(node){node.style.display="block";node.style.position="static";node.style.marginLeft="0px";node.style.marginRight="0px";node.style.marginTop=Std.string(78)+"px";node.style.marginBottom="0px";node.style.paddingLeft="0px";node.style.paddingRight="0px";node.style.paddingTop="0px";node.style.width="100%";node.style.height=Std.string(js.Lib.window.innerHeight-78)+"px";node.style.overflowX="hidden";node.style.overflowY="hidden";}
org.intermedia.view.SwippableListViewStyle.setListsContainerStyle=function(node){node.style.display="inline-block";node.style.position="static";node.style.marginLeft="0px";node.style.marginRight="0px";node.style.marginTop="0px";node.style.marginBottom="0px";node.style.paddingLeft="0px";node.style.paddingRight="0px";node.style.paddingTop="0px";node.style.width="300%";node.style.height="100%";}
org.intermedia.view.ThumbTextList1=$hxClasses["org.intermedia.view.ThumbTextList1"]=function(cellPerLine){if(cellPerLine==null)cellPerLine=1;this._cellsPerLine=cellPerLine;org.intermedia.view.ListViewBase.call(this);};org.intermedia.view.ThumbTextList1.__name__=true;org.intermedia.view.ThumbTextList1.__super__=org.intermedia.view.ListViewBase;org.intermedia.view.ThumbTextList1.prototype=$extend(org.intermedia.view.ListViewBase.prototype,{createCell:function(){var cell=new org.intermedia.view.CellThumbText1(this._cellsPerLine);return cell;},__class__:org.intermedia.view.ThumbTextList1});org.intermedia.view.ThumbTextList1Bis=$hxClasses["org.intermedia.view.ThumbTextList1Bis"]=function(cellPerLine){if(cellPerLine==null)cellPerLine=1;org.intermedia.view.ThumbTextList1.call(this,cellPerLine);};org.intermedia.view.ThumbTextList1Bis.__name__=true;org.intermedia.view.ThumbTextList1Bis.__super__=org.intermedia.view.ThumbTextList1;org.intermedia.view.ThumbTextList1Bis.prototype=$extend(org.intermedia.view.ThumbTextList1.prototype,{createCell:function(){var cellStyle={cell:org.intermedia.view.CellThumbText1BisStyle.setCellStyle,thumbnailMask:org.intermedia.view.CellThumbText1Style.setThumbnailMaskStyle,thumbnail:null,textBlock:org.intermedia.view.CellThumbText1Style.setTextBlockStyle,title:org.intermedia.view.CellThumbText1Style.setTitleStyle,author:null};var cell=new org.intermedia.view.CellThumbText1(this._cellsPerLine,cellStyle);return cell;},buildHomePage:function(homePageData){var homePage=new org.intermedia.view.HomePage(homePageData);homePage.onListItemSelected=$bind(this,this.onListItemSelectedCallback);var _g1=0,_g=homePage.cells.length;while(_g1<_g){var i=_g1++;this._cells.push(homePage.cells[i]);this.node.appendChild(this._cells[i].node);}},initStyle:function(){this._style={list:org.intermedia.view.ThumbTextList1BisStyle.setListStyle};},__class__:org.intermedia.view.ThumbTextList1Bis});org.intermedia.view.ThumbTextList1BisStyle=$hxClasses["org.intermedia.view.ThumbTextList1BisStyle"]=function(){}
org.intermedia.view.ThumbTextList1BisStyle.__name__=true;org.intermedia.view.ThumbTextList1BisStyle.setListStyle=function(node){org.intermedia.view.ListViewStyle.setListStyle(node);node.style.backgroundColor="#191919";}
org.intermedia.view.ViewManager=$hxClasses["org.intermedia.view.ViewManager"]=function(applicationModel,applicationController){this._applicationModel=applicationModel;this._applicationController=applicationController;this._body=js.Lib.document.body;org.intermedia.view.ViewManagerStyle.setBodyStyle(this._body);this._loadingView=new org.intermedia.view.SplashScreenView();this._body.appendChild(this._loadingView.node);js.Lib.window.onload=$bind(this,this.onLoad);};org.intermedia.view.ViewManager.__name__=true;org.intermedia.view.ViewManager.prototype={refreshStyles:function(){if(this._currentView==this._swippableListView){this._menu.refreshStyles();this._swippableListView.refreshStyles();}else if(this._currentView==this._detailView)this._detailView.refreshStyles();},setZIndexToMax:function(view){this._body.removeChild(view.node);this._body.appendChild(view.node);},updateZIndexes:function(){this.setZIndexToMax(this._menu);this.setZIndexToMax(this._header);},reloadFeed:function(){this._menu.setIndex(1);this._applicationModel.initDataLoader();this._body.removeChild(this._swippableListView.node);this.initSwippableView();this.refreshStyles();},onHeaderBackButtonPressed:function(){this._header.setData("French Tech");this._header.setDisplayBackButton(false);js.Lib.document.removeEventListener("backbutton",$bind(this,this.onHeaderBackButtonPressed),false);this._body.removeChild(this._detailView.node);this._body.appendChild(this._menu.node);this._body.appendChild(this._swippableListView.node);this._swippableListView.applyScrollTopPosition();this._currentView=this._swippableListView;this.updateZIndexes();this._swippableListView.scrollToCurrentList();this.refreshStyles();},onLoadingError:function(feed,error){if(error==org.intermedia.Settings.DATALOADER_TIMEOUT_MESSAGE){org.intermedia.Settings.getInstance().online=false;this.reloadFeed();}},onDetailDataLoaded:function(detailData){this._detailView.setData(detailData);this._header.setData("Infos");this._header.setDisplayBackButton(true);this.setZIndexToMax(this._header);this.refreshStyles();this._detailView.setDisplayLoading(false);},onCellDataLoaded:function(listData){if(listData.cells.length==0)this._swippableListView.displayListBottomLoader=false;this._swippableListView.setData(listData);this.updateZIndexes();},onListItemSelectedCallback:function(cellData){this._swippableListView.storeScrollTopPosition();this._body.removeChild(this._swippableListView.node);this._body.removeChild(this._menu.node);this._detailView=new org.intermedia.view.DetailView();this._body.appendChild(this._detailView.node);js.Lib.document.addEventListener("backbutton",$bind(this,this.onHeaderBackButtonPressed),false);this._currentView=this._detailView;this.onDetailDataLoaded(cellData);},onMenuItemSelectedCallback:function(cellData){this._swippableListView.resetInitScrollPosition();this._swippableListView.setIndex(cellData.id);},initSwippableView:function(){this._swippableListView=new org.intermedia.view.SwippableListView();this._body.appendChild(this._swippableListView.node);this._currentView=this._swippableListView;this._swippableListView.onListItemSelected=$bind(this,this.onListItemSelectedCallback);this._swippableListView.onDataRequest=($_=this._applicationController,$bind($_,$_.loadCellData));this._swippableListView.onHorizontalMove=($_=this._menu,$bind($_,$_.moveHorizontally));this._swippableListView.onHorizontalTweenEnd=($_=this._menu,$bind($_,$_.horizontalTweenEnd));this._applicationController.loadCellData({id:2,ressource:"feed3",title:"frenchiPhone",thumb:"assets/frenchiphone-logo.png",url:"http://www.frenchiphone.com/feed/",generatedBy:"wordpress"}.url);this._applicationController.loadCellData({id:0,ressource:"feed1",title:"iPhon.fr",thumb:"assets/iphon_fr-logo.jpg",url:"http://www.iphon.fr/feed/rss2",generatedBy:"wordpress"}.url);this._applicationController.loadCellData({id:1,ressource:"feed2",title:"FrAndroid",thumb:"assets/frandroid-logo.png",url:"http://www.frandroid.com/feed",generatedBy:"wordpress"}.url);},init:function(){var _g=this;this._header=new org.intermedia.view.HeaderView();this._header.setData("French Tech");this._header.onBackButtonClick=$bind(this,this.onHeaderBackButtonPressed);this._body.appendChild(this._header.node);this._menu=new org.intermedia.view.MenuListViewText();this._menu.displayListBottomLoader=false;this._body.appendChild(this._menu.node);this._menu.setData([{id:0,ressource:"feed1",title:"iPhon.fr",thumb:"assets/iphon_fr-logo.jpg",url:"http://www.iphon.fr/feed/rss2",generatedBy:"wordpress"},{id:1,ressource:"feed2",title:"FrAndroid",thumb:"assets/frandroid-logo.png",url:"http://www.frandroid.com/feed",generatedBy:"wordpress"},{id:2,ressource:"feed3",title:"frenchiPhone",thumb:"assets/frenchiphone-logo.png",url:"http://www.frenchiphone.com/feed/",generatedBy:"wordpress"}]);this._detailView=new org.intermedia.view.DetailView();js.Lib.window.onresize=function(event){_g.refreshStyles();};this._applicationModel.onModelDataLoadError=$bind(this,this.onLoadingError);this._applicationModel.onModelCellDataLoaded=$bind(this,this.onCellDataLoaded);this._applicationModel.onModelDetailDataLoaded=$bind(this,this.onDetailDataLoaded);this.initSwippableView();this._menu.onListItemSelected=$bind(this,this.onMenuItemSelectedCallback);this._body.removeChild(this._loadingView.node);},onLoad:function(event){haxe.Timer.delay($bind(this,this.init),100);},__class__:org.intermedia.view.ViewManager}
org.intermedia.view.ViewManagerStyle=$hxClasses["org.intermedia.view.ViewManagerStyle"]=function(){}
org.intermedia.view.ViewManagerStyle.__name__=true;org.intermedia.view.ViewManagerStyle.setBodyStyle=function(node){node.style.marginLeft="0px";node.style.marginRight="0px";node.style.marginTop="0px";node.style.marginBottom="0px";node.style.paddingLeft="0px";node.style.paddingRight="0px";node.style.paddingTop="0px";node.style.paddingBottom="0px";node.style.width="100%";node.style.height="100%";node.style.overflowX="hidden";node.style.overflowY="auto";}
var $_;function $bind(o,m){var f=function(){return f.method.apply(f.scope,arguments);};f.scope=o;f.method=m;return f;};if(Array.prototype.indexOf)HxOverrides.remove=function(a,o){var i=a.indexOf(o);if(i==-1)return false;a.splice(i,1);return true;};else null;Math.__name__=["Math"];Math.NaN=Number.NaN;Math.NEGATIVE_INFINITY=Number.NEGATIVE_INFINITY;Math.POSITIVE_INFINITY=Number.POSITIVE_INFINITY;$hxClasses.Math=Math;Math.isFinite=function(i){return isFinite(i);};Math.isNaN=function(i){return isNaN(i);};String.prototype.__class__=$hxClasses.String=String;String.__name__=true;Array.prototype.__class__=$hxClasses.Array=Array;Array.__name__=true;Date.prototype.__class__=$hxClasses.Date=Date;Date.__name__=["Date"];var Int=$hxClasses.Int={__name__:["Int"]};var Dynamic=$hxClasses.Dynamic={__name__:["Dynamic"]};var Float=$hxClasses.Float=Number;Float.__name__=["Float"];var Bool=$hxClasses.Bool=Boolean;Bool.__ename__=["Bool"];var Class=$hxClasses.Class={__name__:["Class"]};var Enum={};Xml.Element="element";Xml.PCData="pcdata";Xml.CData="cdata";Xml.Comment="comment";Xml.DocType="doctype";Xml.Prolog="prolog";Xml.Document="document";haxe.Resource.content=[{name:"feed3",data:"s45042:PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxyc3MgdmVyc2lvbj0iMi4wIg0KCXhtbG5zOmNvbnRlbnQ9Imh0dHA6Ly9wdXJsLm9yZy9yc3MvMS4wL21vZHVsZXMvY29udGVudC8iDQoJeG1sbnM6d2Z3PSJodHRwOi8vd2VsbGZvcm1lZHdlYi5vcmcvQ29tbWVudEFQSS8iDQoJeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIg0KCXhtbG5zOmF0b209Imh0dHA6Ly93d3cudzMub3JnLzIwMDUvQXRvbSINCgl4bWxuczpzeT0iaHR0cDovL3B1cmwub3JnL3Jzcy8xLjAvbW9kdWxlcy9zeW5kaWNhdGlvbi8iDQoJeG1sbnM6c2xhc2g9Imh0dHA6Ly9wdXJsLm9yZy9yc3MvMS4wL21vZHVsZXMvc2xhc2gvIg0KCT4NCg0KPGNoYW5uZWw%DQoJPHRpdGxlPmZyZW5jaGlQaG9uZSBMZSBCbG9nIGlQaG9uZTwvdGl0bGU%DQoJPGF0b206bGluayBocmVmPSJodHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vZmVlZC8:cG9zdHNfcGVyX3BhZ2U9MTUiIHJlbD0ic2VsZiIgdHlwZT0iYXBwbGljYXRpb24vcnNzK3htbCIgLz4NCgk8bGluaz5odHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb208L2xpbms%DQoJPGRlc2NyaXB0aW9uPmlQaG9uZSA0LCBpUGhvbmUgM0dTLzNHLCBpUG9kIFRvdWNoIGV0IGlQYWQgZGUgbGEgbWFycXVlIGFwcGxlIDogYWN0dWFsaXTDqXMsIGFydGljbGVzLCB2aWTDqW9zLCBmb3J1bSBjb21tdW5hdXRhaXJlLCBhc3R1Y2VzIGV0IGFpZGVzIGF1IGphaWxicmVhaywgcGhvdG9zIGV0IHRlc3RzIGQmIzAzOTthY2Nlc3NvaXJlcyBldCBkJiMwMzk7YXBwbGljYXRpb25zLiBGcmVuY2hpUGhvbmUgbGUgYmxvZyBkZSBsYSBjb21tdW5hdXTDqSBpUGhvbmUsIGlQb2QgdG91Y2gsIGlQYWQgZnJhbmNvcGhvbmUuPC9kZXNjcmlwdGlvbj4NCgk8bGFzdEJ1aWxkRGF0ZT5UaHUsIDI3IERlYyAyMDEyIDEzOjQ5OjIzICswMDAwPC9sYXN0QnVpbGREYXRlPg0KCTxsYW5ndWFnZT5mci1GUjwvbGFuZ3VhZ2U%DQoJPHN5OnVwZGF0ZVBlcmlvZD5ob3VybHk8L3N5OnVwZGF0ZVBlcmlvZD4NCgk8c3k6dXBkYXRlRnJlcXVlbmN5PjE8L3N5OnVwZGF0ZUZyZXF1ZW5jeT4NCgk8Z2VuZXJhdG9yPmh0dHA6Ly93b3JkcHJlc3Mub3JnLz92PTwvZ2VuZXJhdG9yPg0KCQk8aXRlbT4NCgkJPHRpdGxlPltCb3V0aXF1ZV0gU3RhdGlvbiBkZSByZWNoYXJnZSBOT09TWSBVbml2ZXJzZWwgTGlnaHRuaW5nIHBvdXIgaVBob25lIDUgLyBpUGFkIE1pbmkgLyBpUGFkIDQgITwvdGl0bGU%DQoJCTxsaW5rPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI3L2JvdXRpcXVlLXN0YXRpb24tZGUtcmVjaGFyZ2Utbm9vc3ktdW5pdmVyc2VsLWxpZ2h0bmluZy1wb3VyLWlwaG9uZS01LWlwYWQtbWluaS1pcGFkLTQvPC9saW5rPg0KCQk8Y29tbWVudHM%aHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tLzIwMTIvMTIvMjcvYm91dGlxdWUtc3RhdGlvbi1kZS1yZWNoYXJnZS1ub29zeS11bml2ZXJzZWwtbGlnaHRuaW5nLXBvdXItaXBob25lLTUtaXBhZC1taW5pLWlwYWQtNC8jY29tbWVudHM8L2NvbW1lbnRzPg0KCQk8cHViRGF0ZT5UaHUsIDI3IERlYyAyMDEyIDEzOjQ5OjIzICswMDAwPC9wdWJEYXRlPg0KCQk8ZGM6Y3JlYXRvcj5Kb2huIDMxNjwvZGM6Y3JlYXRvcj4NCgkJCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbQWNjZXNzb2lyZXNdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbaVBhZCBtaW5pXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW2lQaG9uZTVdXT48L2NhdGVnb3J5Pg0KDQoJCTxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI%aHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tLz9wPTQ4NTM3PC9ndWlkPg0KCQk8ZGVzY3JpcHRpb24%PCFbQ0RBVEFbRW5jb3JlIHVuZSBub3V2ZWF1dMOpIGRhbnMgbm90cmUgYm91dGlxdWUgISEgTGEgbWFycXVlIE5PT1NZIG5vdXMgcHLDqXNlbnRlIGxhIHByZW1pw6hyZSBzdGF0aW9uIHVuaXZlcnNlbGxlIGRlIHJlY2hhcmdlIGV0IHN5bmNocm9uaXNhdGlvbiBwb3VyIGxlcyBtYWNoaW5lcyBBcHBsZSDDqXF1aXDDqWVzIGQmIzgyMTc7dW4gY29ubmVjdGV1ciBMaWdodG5pbmcuIEVuIGVmZmV0LCBsZSBkb2NrIHBvc3PDqGRlIGRlcyBlbnRyw6llcyBhdSBmb3JtYXQgTWljcm8gVVNCLCBMaWdodG5pbmcsIFVTQiBldCBBcHBsZSAzMCBwaW5zLiBJbCBlc3QgZG9uYyBjb21wYXRpYmxlIGF2ZWMgcHJlc3F1ZSB0b3VzIGxlcyBjw6JibGVzIGR1IFsuLi5dXV0%PC9kZXNjcmlwdGlvbj4NCgkJCQk8Y29udGVudDplbmNvZGVkPjwhW0NEQVRBWzxwPjxhIGhyZWY9ImFzc2V0cy9mZWVkc19pbWFnZXMvaXBhZC1taW5pLmpwZyIgcmVsPSJsaWdodGJveFs0ODUzN10iIHRpdGxlPSJbQm91dGlxdWVdIFN0YXRpb24gZGUgcmVjaGFyZ2UgTk9PU1kgVW5pdmVyc2VsIExpZ2h0bmluZyBwb3VyIGlQaG9uZSA1IC8gaVBhZCBNaW5pIC8gaVBhZCA0ICEiPjxpbWcgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL2lwYWQtbWluaS0zMDB4MTk5LmpwZyIgYWx0PSJpcGFkLW1pbmkiIHdpZHRoPSIzMDAiIGhlaWdodD0iMTk5IiBjbGFzcz0iYWxpZ25sZWZ0IHNpemUtbWVkaXVtIHdwLWltYWdlLTQ4NTM4IiAvPjwvYT5FbmNvcmUgdW5lIG5vdXZlYXV0w6kgZGFucyBub3RyZSBib3V0aXF1ZSAhITwvcD4NCjxwPkxhIG1hcnF1ZSBOT09TWSBub3VzIHByw6lzZW50ZSBsYSA8YSBocmVmPSJodHRwOi8vc2hvcC5mcmVuY2hpcGhvbmUuY29tL3N0YXRpb24tZGUtcmVjaGFyZ2Utbm9vc3ktdW5pdmVyc2VsLWxpZ2h0bmluZy1wb3VyLWlwaG9uZS01LWlwYWQtbWluaS1pcGFkLTQuaHRtbCIgdGFyZ2V0PSJfYmxhbmsiPnByZW1pw6hyZSBzdGF0aW9uIHVuaXZlcnNlbGxlIGRlIHJlY2hhcmdlIGV0IHN5bmNocm9uaXNhdGlvbjwvYT4gcG91ciBsZXMgbWFjaGluZXMgQXBwbGUgw6lxdWlww6llcyBkJnJzcXVvO3VuIGNvbm5lY3RldXIgTGlnaHRuaW5nLjxiciAvPg0KRW4gZWZmZXQsIGxlIGRvY2sgcG9zc8OoZGUgZGVzIGVudHLDqWVzIGF1IGZvcm1hdCBNaWNybyBVU0IsIExpZ2h0bmluZywgVVNCIGV0IEFwcGxlIDMwIHBpbnMuPGJyIC8%DQpJbCBlc3QgZG9uYyBjb21wYXRpYmxlIGF2ZWMgcHJlc3F1ZSB0b3VzIGxlcyBjw6JibGVzIGR1IG1hcmNow6kuPC9wPg0KPHA%RWxsZSBlc3QgcGFzIGJlbGxlIGxhIHZpZSA:PC9wPg0KPHA%PGEgaHJlZj0iaHR0cDovL3Nob3AuZnJlbmNoaXBob25lLmNvbS9zdGF0aW9uLWRlLXJlY2hhcmdlLW5vb3N5LXVuaXZlcnNlbC1saWdodG5pbmctcG91ci1pcGhvbmUtNS1pcGFkLW1pbmktaXBhZC00Lmh0bWwiIHRhcmdldD0iX2JsYW5rIj5MYSBzdGF0aW9uIGRlIHJlY2hhcmdlIE5PT1NZIFVuaXZlcnNlbCBMaWdodG5pbmcgcG91ciBpUGhvbmUgNSAvIGlQYWQgTWluaSBldCBpUGFkIDQgZXN0IGRpc3BvbmlibGUgYXUgcHJpeCBkZSAyOS45NeKCrDwvYT4gYXZlYyBjb21tZSB0b3Vqb3VycyBsYSBsaXZyYWlzb24gb2ZmZXJ0ZSA8aW1nIHNyYz0naHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tL3dwLWluY2x1ZGVzL2ltYWdlcy9zbWlsaWVzL2ljb25fc21pbGUuZ2lmJyBhbHQ9JzopJyBjbGFzcz0nd3Atc21pbGV5JyAvPiA8L3A%DQpdXT48L2NvbnRlbnQ6ZW5jb2RlZD4NCgkJCTx3Znc6Y29tbWVudFJzcz5odHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vMjAxMi8xMi8yNy9ib3V0aXF1ZS1zdGF0aW9uLWRlLXJlY2hhcmdlLW5vb3N5LXVuaXZlcnNlbC1saWdodG5pbmctcG91ci1pcGhvbmUtNS1pcGFkLW1pbmktaXBhZC00L2ZlZWQvPC93Znc6Y29tbWVudFJzcz4NCgkJPHNsYXNoOmNvbW1lbnRzPjA8L3NsYXNoOmNvbW1lbnRzPg0KCQk8L2l0ZW0%DQoJCTxpdGVtPg0KCQk8dGl0bGU%W1ZpZMOpb10gQ3ljbG9yYW1pYyA6IGRlcyB2aWTDqW9zIDM2MMKwIHNhbnMgbGVzIG1haW5zICE8L3RpdGxlPg0KCQk8bGluaz5odHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vMjAxMi8xMi8yNy9jeWNsb3JhbWljLWRlcy12aWRlb3MtMzYwLXNhbnMtbGVzLW1haW5zLzwvbGluaz4NCgkJPGNvbW1lbnRzPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI3L2N5Y2xvcmFtaWMtZGVzLXZpZGVvcy0zNjAtc2Fucy1sZXMtbWFpbnMvI2NvbW1lbnRzPC9jb21tZW50cz4NCgkJPHB1YkRhdGU%VGh1LCAyNyBEZWMgMjAxMiAxMDoyMzoyNCArMDAwMDwvcHViRGF0ZT4NCgkJPGRjOmNyZWF0b3I%Sm9obiAzMTY8L2RjOmNyZWF0b3I%DQoJCQkJPGNhdGVnb3J5PjwhW0NEQVRBW2lQaG9uZTVdXT48L2NhdGVnb3J5Pg0KDQoJCTxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI%aHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tLz9wPTQ4NTM1PC9ndWlkPg0KCQk8ZGVzY3JpcHRpb24%PCFbQ0RBVEFbSmUgdmllbnMgZGUgdG9tYmVyIHN1ciBDeWNsb3JhbWljICgwLjg54oKsKSwgdW5lIHBldGl0ZSBhcHBsaWNhdGlvbiBwbHV0w7R0IG1hcnJhbnRlICEgTGUgcHJpbmNpcGUgZXN0IGZyYW5jaGVtZW50IG9yaWdpbmFsIDogVm91cyBwb3NleiB2b3RyZSBpUGhvbmUgNSBzdXIgdW5lIHN1cmZhY2UgbGlzc2UgKHZlcnJlLCBtYXJicmUsIGdyYW5pdCkgcHVpcyB2b3VzIGxhbmNleiBsJiM4MjE3O2FwcGxpY2F0aW9uLCB2b3RyZSBpUGhvbmUgdmEgYWxvcnMgdG91cm5lciBzdXIgbHVpLW3Dqm1lIGNvbW1lIHVuIGdyYW5kIGV0IGVmZmVjdHVlciB1biAzNjDCsCAob3UgdW4gNzIwwrApIHRvdXQgZW4gZmlsbWFudCBbLi4uXV1dPjwvZGVzY3JpcHRpb24%DQoJCQkJPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD48YSBocmVmPSJhc3NldHMvZmVlZHNfaW1hZ2VzL2N5Y2xvcmFtaWMuanBnIiByZWw9ImxpZ2h0Ym94WzQ4NTM1XSIgdGl0bGU9IltWaWTDqW9dIEN5Y2xvcmFtaWMgOiBkZXMgdmlkw6lvcyAzNjDCsCBzYW5zIGxlcyBtYWlucyAhIj48aW1nIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9jeWNsb3JhbWljLTIyOXgzMDAuanBnIiBhbHQ9ImN5Y2xvcmFtaWMiIHdpZHRoPSIyMjkiIGhlaWdodD0iMzAwIiBjbGFzcz0iYWxpZ25sZWZ0IHNpemUtbWVkaXVtIHdwLWltYWdlLTQ4NTM2IiAvPjwvYT5KZSB2aWVucyBkZSB0b21iZXIgc3VyIDxhIGhyZWY9Imh0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthPTE4ODUxNTcmYW1wO3VybD1odHRwczovL2l0dW5lcy5hcHBsZS5jb20vZnIvYXBwL2N5Y2xvcmFtaWMvaWQ1ODc1NzgzNjg:bXQ9OCZhbXA7dW89NCZhbXA7cGFydG5lcklkPTIwMDMiIHRhcmdldD0iX2JsYW5rIj5DeWNsb3JhbWljICgwLjg54oKsKTwvYT4sIHVuZSBwZXRpdGUgYXBwbGljYXRpb24gcGx1dMO0dCBtYXJyYW50ZSAhPC9wPg0KPHA%TGUgcHJpbmNpcGUgZXN0IGZyYW5jaGVtZW50IG9yaWdpbmFsIDogVm91cyBwb3NleiB2b3RyZSBpUGhvbmUgNSBzdXIgdW5lIHN1cmZhY2UgbGlzc2UgKHZlcnJlLCBtYXJicmUsIGdyYW5pdCkgcHVpcyB2b3VzIGxhbmNleiBsJnJzcXVvO2FwcGxpY2F0aW9uLCB2b3RyZSBpUGhvbmUgdmEgYWxvcnMgdG91cm5lciBzdXIgbHVpLW3Dqm1lIGNvbW1lIHVuIGdyYW5kIGV0IGVmZmVjdHVlciB1biAzNjDCsCAob3UgdW4gNzIwwrApIHRvdXQgZW4gZmlsbWFudCB1bmUgdmlkw6lvICE8L3A%DQo8cD5Db21tZW50IGVzdC1jZSBwb3NzaWJsZSA:IFRvdXQgJmxhcXVvOyZuYnNwO3NpbXBsZW1lbnQmbmJzcDsmcmFxdW87IGVuIHV0aWxpc2FudCBsZSB2aWJyZXVyIGRlIHZvdHJlIGlQaG9uZSAhITwvcD4NCjxwPjxhIGhyZWY9Imh0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthPTE4ODUxNTcmYW1wO3VybD1odHRwczovL2l0dW5lcy5hcHBsZS5jb20vZnIvYXBwL2N5Y2xvcmFtaWMvaWQ1ODc1NzgzNjg:bXQ9OCZhbXA7dW89NCZhbXA7cGFydG5lcklkPTIwMDMiPjxpbWcgY2xhc3M9InNpemUtZnVsbCB3cC1pbWFnZS0xODMxNiBhbGlnbnJpZ2h0IiB0aXRsZT0iYmFkZ2VfYXBwc3RvcmUtbHJnIiBzcmM9Imh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxMC8xMS9iYWRnZV9hcHBzdG9yZS1scmcxLmdpZiIgYWx0PSIiIHdpZHRoPSIxMTYiIGhlaWdodD0iNDAiIC8%PC9hPjwvcD4NCjxwPkomcnNxdW87YWkgZmFpdCB1bmUgcGV0aXRlIHZpZMOpbyA6PC9wPg0KPHA%PGEgaHJlZj0iaHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tLzIwMTIvMTIvMjcvY3ljbG9yYW1pYy1kZXMtdmlkZW9zLTM2MC1zYW5zLWxlcy1tYWlucy8iPjxlbT5DbGlxdWVyIGljaSBwb3VyIHZvaXIgbGEgdmlkw6lvLjwvZW0%PC9hPjwvcD4NCl1dPjwvY29udGVudDplbmNvZGVkPg0KCQkJPHdmdzpjb21tZW50UnNzPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI3L2N5Y2xvcmFtaWMtZGVzLXZpZGVvcy0zNjAtc2Fucy1sZXMtbWFpbnMvZmVlZC88L3dmdzpjb21tZW50UnNzPg0KCQk8c2xhc2g6Y29tbWVudHM%Njwvc2xhc2g6Y29tbWVudHM%DQoJCTwvaXRlbT4NCgkJPGl0ZW0%DQoJCTx0aXRsZT5bVmlkw6lvXSBDb25jZXB0IGQmIzgyMTc7aVBob25lIDV4PC90aXRsZT4NCgkJPGxpbms%aHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tLzIwMTIvMTIvMjcvdmlkZW8tY29uY2VwdC1kaXBob25lLTV4LzwvbGluaz4NCgkJPGNvbW1lbnRzPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI3L3ZpZGVvLWNvbmNlcHQtZGlwaG9uZS01eC8jY29tbWVudHM8L2NvbW1lbnRzPg0KCQk8cHViRGF0ZT5UaHUsIDI3IERlYyAyMDEyIDA3OjAzOjU2ICswMDAwPC9wdWJEYXRlPg0KCQk8ZGM6Y3JlYXRvcj5Kb2huIDMxNjwvZGM6Y3JlYXRvcj4NCgkJCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbQXBwbGVdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbTmV3c11dPjwvY2F0ZWdvcnk%DQoNCgkJPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj5odHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vP3A9NDg1MzI8L2d1aWQ%DQoJCTxkZXNjcmlwdGlvbj48IVtDREFUQVtBbGxleiByw6p2b25zIHVuIHBldSBlbiBjZXR0ZSBww6lyaW9kZSBkZSBmw6p0ZXMgISBWb2ljaSBsZSB2aWTDqW8gZCYjODIxNzt1biBpUGhvbmUgNVggdW4gcGV1IHBsdXMgb3JpZ2luYWwgcXVlIGNldXggcXVlIG5vdXMgcHJvcG9zZW50IGRlcHVpcyBxdWVscXVlcyB0ZW1wcyBBcHBsZSBVbmUgc29ydGUgZCYjODIxNztpUGhvbmUgVHJhbnNmb3JtZXIgZG90w6kgZCYjODIxNzt1biBjbGF2aWVyIGV0IGQmIzgyMTc7dW4gdmlkw6lvLXByb2plY3RldXIsIG1pYW0gbWlhbS5dXT48L2Rlc2NyaXB0aW9uPg0KCQkJCTxjb250ZW50OmVuY29kZWQ%PCFbQ0RBVEFbPHA%PGEgaHJlZj0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9jb25jZXB0LmpwZyIgcmVsPSJsaWdodGJveFs0ODUzMl0iIHRpdGxlPSJbVmlkw6lvXSBDb25jZXB0IGQnaVBob25lIDV4Ij48aW1nIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9jb25jZXB0LTMwMHgxODQuanBnIiBhbHQ9ImNvbmNlcHQiIHdpZHRoPSIzMDAiIGhlaWdodD0iMTg0IiBjbGFzcz0iYWxpZ25sZWZ0IHNpemUtbWVkaXVtIHdwLWltYWdlLTQ4NTMzIiAvPjwvYT5BbGxleiByw6p2b25zIHVuIHBldSBlbiBjZXR0ZSBww6lyaW9kZSBkZSBmw6p0ZXMgITwvcD4NCjxwPlZvaWNpIGxlIHZpZMOpbyBkJnJzcXVvO3VuIGlQaG9uZSA1WCB1biBwZXUgcGx1cyBvcmlnaW5hbCBxdWUgY2V1eCBxdWUgbm91cyBwcm9wb3NlbnQgZGVwdWlzIHF1ZWxxdWVzIHRlbXBzIEFwcGxlIDxpbWcgc3JjPSdodHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vd3AtaW5jbHVkZXMvaW1hZ2VzL3NtaWxpZXMvaWNvbl9zbWlsZS5naWYnIGFsdD0nOiknIGNsYXNzPSd3cC1zbWlsZXknIC8%IDwvcD4NCjxwPlVuZSBzb3J0ZSBkJnJzcXVvO2lQaG9uZSBUcmFuc2Zvcm1lciBkb3TDqSBkJnJzcXVvO3VuIGNsYXZpZXIgZXQgZCZyc3F1bzt1biB2aWTDqW8tcHJvamVjdGV1ciwgbWlhbSBtaWFtLjwvcD4NCjxwPjxhIGhyZWY9Imh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI3L3ZpZGVvLWNvbmNlcHQtZGlwaG9uZS01eC8iPjxlbT5DbGlxdWVyIGljaSBwb3VyIHZvaXIgbGEgdmlkw6lvLjwvZW0%PC9hPjwvcD4NCl1dPjwvY29udGVudDplbmNvZGVkPg0KCQkJPHdmdzpjb21tZW50UnNzPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI3L3ZpZGVvLWNvbmNlcHQtZGlwaG9uZS01eC9mZWVkLzwvd2Z3OmNvbW1lbnRSc3M%DQoJCTxzbGFzaDpjb21tZW50cz4yPC9zbGFzaDpjb21tZW50cz4NCgkJPC9pdGVtPg0KCQk8aXRlbT4NCgkJPHRpdGxlPkxlcyAxMiBqb3VycyBjYWRlYXV4IDogSm91ciAyPC90aXRsZT4NCgkJPGxpbms%aHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tLzIwMTIvMTIvMjcvbGVzLTEyLWpvdXJzLWNhZGVhdXgtam91ci0yLzwvbGluaz4NCgkJPGNvbW1lbnRzPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI3L2xlcy0xMi1qb3Vycy1jYWRlYXV4LWpvdXItMi8jY29tbWVudHM8L2NvbW1lbnRzPg0KCQk8cHViRGF0ZT5UaHUsIDI3IERlYyAyMDEyIDA2OjMyOjI1ICswMDAwPC9wdWJEYXRlPg0KCQk8ZGM6Y3JlYXRvcj5Kb2huIDMxNjwvZGM6Y3JlYXRvcj4NCgkJCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbQXBwIEdyYXR1aXRlXV0%PC9jYXRlZ29yeT4NCg0KCQk8Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8:cD00ODUzMDwvZ3VpZD4NCgkJPGRlc2NyaXB0aW9uPjwhW0NEQVRBW1BvdXIgY2V0dGUgZGV1eGnDqG1lIGpvdXJuw6llIEFwcGxlIHZvdXMgb2ZmcmUgdW4gamV1LCBlbiBs4oCZb2NjdXJyZW5jZSAmIzE3MTsmIzE2MDtTY29yZSYjMTYwOyYjMTg3Oy4gRXQgbGUgbW9pbnMgcXVlIGwmIzgyMTc7b24gcHVpc3NlIGRpcmUgZXN0IHF1JiM4MjE3O2lsIGVzdCBmcmFuY2hlbWVudCBiaWVuIG5vdMOpIGF2ZWMgdW5lIG1veWVubmUgZGUgNSDDqXRvaWxlcyBwb3VyIDEzMDggbm90ZXMgKHRvdXRlcyB2ZXJzaW9uIGNvbmZvbmR1ZXMpLl1dPjwvZGVzY3JpcHRpb24%DQoJCQkJPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD48YSBocmVmPSJhc3NldHMvZmVlZHNfaW1hZ2VzL2NhZGVhdXguanBnIiByZWw9ImxpZ2h0Ym94WzQ4NTMwXSIgdGl0bGU9IkxlcyAxMiBqb3VycyBjYWRlYXV4IDogSm91ciAyICI%PGltZyBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvY2FkZWF1eC0yMzd4MzAwLmpwZyIgYWx0PSJjYWRlYXV4IiB3aWR0aD0iMjM3IiBoZWlnaHQ9IjMwMCIgY2xhc3M9ImFsaWdubGVmdCBzaXplLW1lZGl1bSB3cC1pbWFnZS00ODUzMSIgLz48L2E%UG91ciBjZXR0ZSBkZXV4acOobWUgam91cm7DqWUgQXBwbGUgdm91cyBvZmZyZSB1biBqZXUsIGVuIGzigJlvY2N1cnJlbmNlICZsYXF1bzsmbmJzcDtTY29yZSZuYnNwOyZyYXF1bzsuPC9wPg0KPHA%RXQgbGUgbW9pbnMgcXVlIGwmcnNxdW87b24gcHVpc3NlIGRpcmUgZXN0IHF1JnJzcXVvO2lsIGVzdCBmcmFuY2hlbWVudCBiaWVuIG5vdMOpIGF2ZWMgdW5lIG1veWVubmUgZGUgNSDDqXRvaWxlcyBwb3VyIDEzMDggbm90ZXMgKHRvdXRlcyB2ZXJzaW9uIGNvbmZvbmR1ZXMpLjwvcD4NCjxwPjxhIGhyZWY9Imh0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthPTE4ODUxNTcmYW1wO3VybD1odHRwczovL2l0dW5lcy5hcHBsZS5jb20vZnIvYXBwL2xlcy0xMi1qb3Vycy1kZS1jYWRlYXV4LWl0dW5lcy9pZDQ3OTY3Mjk4Mz9tdD04JmFtcDt1bz00JmFtcDtwYXJ0bmVySWQ9MjAwMyI%PGltZyBjbGFzcz0ic2l6ZS1mdWxsIHdwLWltYWdlLTE4MzE2IGFsaWducmlnaHQiIHRpdGxlPSJiYWRnZV9hcHBzdG9yZS1scmciIHNyYz0iaHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDEwLzExL2JhZGdlX2FwcHN0b3JlLWxyZzEuZ2lmIiBhbHQ9IiIgd2lkdGg9IjExNiIgaGVpZ2h0PSI0MCIgLz48L2E%PC9wPg0KXV0%PC9jb250ZW50OmVuY29kZWQ%DQoJCQk8d2Z3OmNvbW1lbnRSc3M%aHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tLzIwMTIvMTIvMjcvbGVzLTEyLWpvdXJzLWNhZGVhdXgtam91ci0yL2ZlZWQvPC93Znc6Y29tbWVudFJzcz4NCgkJPHNsYXNoOmNvbW1lbnRzPjA8L3NsYXNoOmNvbW1lbnRzPg0KCQk8L2l0ZW0%DQoJCTxpdGVtPg0KCQk8dGl0bGU%W0pCXSBUb3BvZ3JhcGh5IDogQWN0aXZleiBsZSBtb2RlIGNhY2jDqSBkYW5zIEdvb2dsZSBNYXBzLjwvdGl0bGU%DQoJCTxsaW5rPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI2L2piLXRvcG9ncmFwaHktYWN0aXZlei1sZS1tb2RlLWNhY2hlLWRhbnMtZ29vZ2xlLW1hcHMvPC9saW5rPg0KCQk8Y29tbWVudHM%aHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tLzIwMTIvMTIvMjYvamItdG9wb2dyYXBoeS1hY3RpdmV6LWxlLW1vZGUtY2FjaGUtZGFucy1nb29nbGUtbWFwcy8jY29tbWVudHM8L2NvbW1lbnRzPg0KCQk8cHViRGF0ZT5XZWQsIDI2IERlYyAyMDEyIDE1OjM5OjE0ICswMDAwPC9wdWJEYXRlPg0KCQk8ZGM6Y3JlYXRvcj5Kb2huIDMxNjwvZGM6Y3JlYXRvcj4NCgkJCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbQ3lkaWFdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbSmFpbGJyZWFrXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW3R3ZWFrXV0%PC9jYXRlZ29yeT4NCg0KCQk8Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8:cD00ODUyODwvZ3VpZD4NCgkJPGRlc2NyaXB0aW9uPjwhW0NEQVRBW1RvcG9ncmFwaHkgZXN0IHVuIG5vdXZlYXUgdHdlYWsgZHUgdGFsZW50dWV1eCBSeWFuIFBldHJpY2ggcXVpIHZhIGFjdGl2ZXIgdW5lIGZvbmN0aW9ubmFsaXTDqSBqdXNxdWUgbMOgIGluYWNjZXNzaWJsZSBkYW5zIGwmIzgyMTc7YXBwbGljYXRpb24gR29vZ2xlIE1hcHMuIEFwcsOocyBsJiM4MjE3O2F2b2lyIGluc3RhbGzDqSB2b3VzIGFsbGV6IGVuIGVmZmV0IGRpc3Bvc2VyIGQmIzgyMTc7dW5lIG5vdXZlbGxlIG9wdGlvbiBiYXB0aXPDqWUgJiMxNzE7JiMxNjA7VG9wb2dyYXBoeSYjMTYwOyYjMTg3OyBxdWkgdmEgYWZmaWNoZXIgbGUgcmVsaWVmIGRlIGxhIGNhcnRlLiBUb3BvZ3JhcGh5IGVzdCBkaXNwb25pYmxlIGdyYXR1aXRlbWVudCBzdXIgbGUgcmVwby4gZGUgUnlhbiBQZXRyaWNoIChodHRwOi8vcnBldHJpLmNoL3JlcG8pLl1dPjwvZGVzY3JpcHRpb24%DQoJCQkJPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD48YSBocmVmPSJhc3NldHMvZmVlZHNfaW1hZ2VzL3RvcG9ncmFwaHkuanBnIiByZWw9ImxpZ2h0Ym94WzQ4NTI4XSIgdGl0bGU9IltKQl0gVG9wb2dyYXBoeSA6IEFjdGl2ZXogbGUgbW9kZSBjYWNow6kgZGFucyBHb29nbGUgTWFwcy4iPjxpbWcgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL3RvcG9ncmFwaHktMjM1eDMwMC5qcGciIGFsdD0idG9wb2dyYXBoeSIgd2lkdGg9IjIzNSIgaGVpZ2h0PSIzMDAiIGNsYXNzPSJhbGlnbmxlZnQgc2l6ZS1tZWRpdW0gd3AtaW1hZ2UtNDg1MjkiIC8%PC9hPlRvcG9ncmFwaHkgZXN0IHVuIG5vdXZlYXUgdHdlYWsgZHUgdGFsZW50dWV1eCBSeWFuIFBldHJpY2ggcXVpIHZhIGFjdGl2ZXIgdW5lIGZvbmN0aW9ubmFsaXTDqSBqdXNxdWUgbMOgIGluYWNjZXNzaWJsZSBkYW5zIGwmcnNxdW87YXBwbGljYXRpb24gR29vZ2xlIE1hcHMuPC9wPg0KPHA%QXByw6hzIGwmcnNxdW87YXZvaXIgaW5zdGFsbMOpIHZvdXMgYWxsZXogZW4gZWZmZXQgZGlzcG9zZXIgZCZyc3F1bzt1bmUgbm91dmVsbGUgb3B0aW9uIGJhcHRpc8OpZSAmbGFxdW87Jm5ic3A7VG9wb2dyYXBoeSZuYnNwOyZyYXF1bzsgcXVpIHZhIGFmZmljaGVyIGxlIHJlbGllZiBkZSBsYSBjYXJ0ZS48L3A%DQo8cD5Ub3BvZ3JhcGh5IGVzdCBkaXNwb25pYmxlIGdyYXR1aXRlbWVudCBzdXIgbGUgcmVwby4gZGUgUnlhbiBQZXRyaWNoIChodHRwOi8vcnBldHJpLmNoL3JlcG8pLjwvcD4NCl1dPjwvY29udGVudDplbmNvZGVkPg0KCQkJPHdmdzpjb21tZW50UnNzPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI2L2piLXRvcG9ncmFwaHktYWN0aXZlei1sZS1tb2RlLWNhY2hlLWRhbnMtZ29vZ2xlLW1hcHMvZmVlZC88L3dmdzpjb21tZW50UnNzPg0KCQk8c2xhc2g6Y29tbWVudHM%Mjwvc2xhc2g6Y29tbWVudHM%DQoJCTwvaXRlbT4NCgkJPGl0ZW0%DQoJCTx0aXRsZT5bQm91dGlxdWVdIExhbXBlIFN1cHBvcnQgaUxpZ2h0IHBvdXIgdGFibGV0dGVzIDogc28gY3V0ZSAhPC90aXRsZT4NCgkJPGxpbms%aHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tLzIwMTIvMTIvMjYvYm91dGlxdWUtbGFtcGUtc3VwcG9ydC1pbGlnaHQtcG91ci10YWJsZXR0ZXMtc28tY3V0ZS88L2xpbms%DQoJCTxjb21tZW50cz5odHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vMjAxMi8xMi8yNi9ib3V0aXF1ZS1sYW1wZS1zdXBwb3J0LWlsaWdodC1wb3VyLXRhYmxldHRlcy1zby1jdXRlLyNjb21tZW50czwvY29tbWVudHM%DQoJCTxwdWJEYXRlPldlZCwgMjYgRGVjIDIwMTIgMTQ6NDE6MzggKzAwMDA8L3B1YkRhdGU%DQoJCTxkYzpjcmVhdG9yPkpvaG4gMzE2PC9kYzpjcmVhdG9yPg0KCQkJCTxjYXRlZ29yeT48IVtDREFUQVtBY2Nlc3NvaXJlc11dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtpcGFkXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW2lQYWQgNF1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtpUGFkIG1pbmldXT48L2NhdGVnb3J5Pg0KDQoJCTxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI%aHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tLz9wPTQ4NTI2PC9ndWlkPg0KCQk8ZGVzY3JpcHRpb24%PCFbQ0RBVEFbU2kgdm91cyBhdmV6IHVuZSB0YWJsZXR0ZSBldCBxdWUgdm91cyBhaW1leiBsZXMgam9saXMgb2JqZXRzIHJlZ2FyZGV6IHVuIHBldSBjZSBxdWUgbm91cyB2ZW5vbnMgZGUgcmVudHJlciBkYW5zIGxhIGJvdXRpcXVlICEgTGUgaUxpZ2h0IGVzdCB1biBhY2Nlc3NvaXJlIGlubm92YW50IGV0IGNvbXBsw6h0ZW1lbnQgdW5pcXVlIHN1ciBsZSBtYXJjaMOpLiBDZXR0ZSBwZXRpdGUgbGFtcGUgZGUgYnVyZWF1IHNlIHRyYW5zZm9ybWUgYXUgYmVzb2luIGVuIHN1cHBvcnQgcG91ciB0YWJsZXR0ZXMuIEZpbmkgbGVzIGZpbHMgISBDZXR0ZSBbLi4uXV1dPjwvZGVzY3JpcHRpb24%DQoJCQkJPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD48YSBocmVmPSJhc3NldHMvZmVlZHNfaW1hZ2VzLzQ4MjQ5XzEwMTUyMzcyOTYyNTY1MDcyXzEzNTExMjUyNDBfby5qcGciIHJlbD0ibGlnaHRib3hbNDg1MjZdIiB0aXRsZT0iW0JvdXRpcXVlXSBMYW1wZSBTdXBwb3J0IGlMaWdodCBwb3VyIHRhYmxldHRlcyA6IHNvIGN1dGUgISI%PGltZyBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvNDgyNDlfMTAxNTIzNzI5NjI1NjUwNzJfMTM1MTEyNTI0MF9vLTMwMHgyMDYuanBnIiBhbHQ9IjQ4MjQ5XzEwMTUyMzcyOTYyNTY1MDcyXzEzNTExMjUyNDBfbyIgd2lkdGg9IjMwMCIgaGVpZ2h0PSIyMDYiIGNsYXNzPSJhbGlnbmxlZnQgc2l6ZS1tZWRpdW0gd3AtaW1hZ2UtNDg1MjciIC8%PC9hPlNpIHZvdXMgYXZleiB1bmUgdGFibGV0dGUgZXQgcXVlIHZvdXMgYWltZXogbGVzIGpvbGlzIG9iamV0cyByZWdhcmRleiB1biBwZXUgY2UgcXVlIG5vdXMgdmVub25zIGRlIHJlbnRyZXIgZGFucyBsYSBib3V0aXF1ZSAhPC9wPg0KPHA%TGUgPGEgaHJlZj0iaHR0cDovL3Nob3AuZnJlbmNoaXBob25lLmNvbS9sYW1wZS1zdXBwb3J0LWlsaWdodC1wb3VyLXRhYmxldHRlcy1pcGFkLWdhbGF4eS10YWItbmV4dXMtNy5odG1sIiB0YXJnZXQ9Il9ibGFuayI%aUxpZ2h0IDwvYT5lc3QgdW4gYWNjZXNzb2lyZSBpbm5vdmFudCBldCBjb21wbMOodGVtZW50IHVuaXF1ZSBzdXIgbGUgbWFyY2jDqS4gQ2V0dGUgcGV0aXRlIGxhbXBlIGRlIGJ1cmVhdSBzZSB0cmFuc2Zvcm1lIGF1IGJlc29pbiBlbiBzdXBwb3J0IHBvdXIgdGFibGV0dGVzLiBGaW5pIGxlcyBmaWxzICEgQ2V0dGUgbGFtcGUgaW50w6hncmUgdW5lIGJhdHRlcmllIExpdGhpdW0gZGUgMTA1MG1BaCBxdWkgcGVybWV0IGQmcnNxdW87YXZvaXIgdW5lIGF1dG9ub21pZSBkZSA3SC48L3A%DQo8cD5MZSA8YSBocmVmPSJodHRwOi8vc2hvcC5mcmVuY2hpcGhvbmUuY29tL2xhbXBlLXN1cHBvcnQtaWxpZ2h0LXBvdXItdGFibGV0dGVzLWlwYWQtZ2FsYXh5LXRhYi1uZXh1cy03Lmh0bWwiIHRhcmdldD0iX2JsYW5rIj5pTGlnaHQgZXN0IGRpc3BvbmlibGUgc3VyIG5vdHJlIGJvdXRpcXVlIGF1IHByaXggZGUgNTkuOTXigqw8L2E%IGF2ZWMgY29tbWUgdG91am91cnMgbGEgbGl2cmFpc29uIGdyYXR1aXRlIHBvdXIgbGEgRnJhbmNlLjwvcD4NCl1dPjwvY29udGVudDplbmNvZGVkPg0KCQkJPHdmdzpjb21tZW50UnNzPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI2L2JvdXRpcXVlLWxhbXBlLXN1cHBvcnQtaWxpZ2h0LXBvdXItdGFibGV0dGVzLXNvLWN1dGUvZmVlZC88L3dmdzpjb21tZW50UnNzPg0KCQk8c2xhc2g6Y29tbWVudHM%MDwvc2xhc2g6Y29tbWVudHM%DQoJCTwvaXRlbT4NCgkJPGl0ZW0%DQoJCTx0aXRsZT5MZXMgMTIgam91cnMgY2FkZWF1eCBBcHBsZSBjJiM4MjE3O2VzdCBwYXJ0aSAhPC90aXRsZT4NCgkJPGxpbms%aHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tLzIwMTIvMTIvMjYvbGVzLTEyLWpvdXJzLWNhZGVhdXgtYXBwbGUtY2VzdC1wYXJ0aS88L2xpbms%DQoJCTxjb21tZW50cz5odHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vMjAxMi8xMi8yNi9sZXMtMTItam91cnMtY2FkZWF1eC1hcHBsZS1jZXN0LXBhcnRpLyNjb21tZW50czwvY29tbWVudHM%DQoJCTxwdWJEYXRlPldlZCwgMjYgRGVjIDIwMTIgMDc6MDM6MzMgKzAwMDA8L3B1YkRhdGU%DQoJCTxkYzpjcmVhdG9yPkpvaG4gMzE2PC9kYzpjcmVhdG9yPg0KCQkJCTxjYXRlZ29yeT48IVtDREFUQVtBcHAgR3JhdHVpdGVdXT48L2NhdGVnb3J5Pg0KDQoJCTxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI%aHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tLz9wPTQ4NTI0PC9ndWlkPg0KCQk8ZGVzY3JpcHRpb24%PCFbQ0RBVEFbRXQgYyYjODIxNztlc3QgcGFydGkgcG91ciBsZXMgMTIgam91cnMgY2FkZWF1eCBpVHVuZXMgISBQb3VyIGNldHRlIHByZW1pw6hyZSBqb3VybsOpZSBBcHBsZSB2b3VzIG9mZnJlIHVuIEVQIGRlIE1hcm9vbiA1LCBwb3VyIGluZm9ybWF0aW9uIEVQIHNpZ25pZmllIEV4dGFuZGVkIFBsYXkuIFZvdXMgYXVyZXogZG9uYyBkcm9pdCDDoCAyIHRpdHJlcyA6ICYjMTcxOyYjMTYwO01vdmVzIExpa2UgSmFnZ2VyJiMxNjA7JiMxODc7LCAmIzE3MTsmIzE2MDtPbmUgTW9yZSBOaWdodCYjMTYwOyYjMTg3OyBldCDDoCB1bmUgdmlkw6lvIGRlICYjMTcxOyYjMTYwO01vdmVzIExpa2UgSmFnZ2VyJiMxNjA7JiMxODc7Ll1dPjwvZGVzY3JpcHRpb24%DQoJCQkJPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD48YSBocmVmPSJhc3NldHMvZmVlZHNfaW1hZ2VzL2NhZGVhdXhfMS5qcGciIHJlbD0ibGlnaHRib3hbNDg1MjRdIiB0aXRsZT0iTGVzIDEyIGpvdXJzIGNhZGVhdXggQXBwbGUgYydlc3QgcGFydGkgISI%PGltZyBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvY2FkZWF1eF8xLTIzN3gzMDAuanBnIiBhbHQ9ImNhZGVhdXhfMSIgd2lkdGg9IjIzNyIgaGVpZ2h0PSIzMDAiIGNsYXNzPSJhbGlnbmxlZnQgc2l6ZS1tZWRpdW0gd3AtaW1hZ2UtNDg1MjUiIC8%PC9hPkV0IGMmcnNxdW87ZXN0IHBhcnRpIHBvdXIgbGVzIDxhIGhyZWY9Imh0dHBzOi8vaXR1bmVzLmFwcGxlLmNvbS9mci9hcHAvbGVzLTEyLWpvdXJzLWRlLWNhZGVhdXgtaXR1bmVzL2lkNDc5NjcyOTgzP210PTgmYW1wO3VvPTQmYW1wO3BhcnRuZXJJZD0yMDAzIiB0YXJnZXQ9Il9ibGFuayI%MTIgam91cnMgY2FkZWF1eCBpVHVuZXM8L2E%ICE8L3A%DQo8cD5Qb3VyIGNldHRlIHByZW1pw6hyZSBqb3VybsOpZSBBcHBsZSB2b3VzIG9mZnJlIHVuIEVQIGRlIE1hcm9vbiA1LCBwb3VyIGluZm9ybWF0aW9uIEVQIHNpZ25pZmllIEV4dGFuZGVkIFBsYXkuPC9wPg0KPHA%Vm91cyBhdXJleiBkb25jIGRyb2l0IMOgIDIgdGl0cmVzIDogJmxhcXVvOyZuYnNwO01vdmVzIExpa2UgSmFnZ2VyJm5ic3A7JnJhcXVvOywgJmxhcXVvOyZuYnNwO09uZSBNb3JlIE5pZ2h0Jm5ic3A7JnJhcXVvOyBldCDDoCB1bmUgdmlkw6lvIGRlICZsYXF1bzsmbmJzcDtNb3ZlcyBMaWtlIEphZ2dlciZuYnNwOyZyYXF1bzsuPC9wPg0KPHA%PGEgaHJlZj0iaHR0cDovL2Nsay50cmFkZWRvdWJsZXIuY29tL2NsaWNrP3A9MjM3NTMmYW1wO2E9MTg4NTE1NyZhbXA7dXJsPWh0dHBzOi8vaXR1bmVzLmFwcGxlLmNvbS9mci9hcHAvbGVzLTEyLWpvdXJzLWRlLWNhZGVhdXgtaXR1bmVzL2lkNDc5NjcyOTgzP210PTgmYW1wO3VvPTQmYW1wO3BhcnRuZXJJZD0yMDAzIj48aW1nIGNsYXNzPSJzaXplLWZ1bGwgd3AtaW1hZ2UtMTgzMTYgYWxpZ25yaWdodCIgdGl0bGU9ImJhZGdlX2FwcHN0b3JlLWxyZyIgc3JjPSJodHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTAvMTEvYmFkZ2VfYXBwc3RvcmUtbHJnMS5naWYiIGFsdD0iIiB3aWR0aD0iMTE2IiBoZWlnaHQ9IjQwIiAvPjwvYT48L3A%DQpdXT48L2NvbnRlbnQ6ZW5jb2RlZD4NCgkJCTx3Znc6Y29tbWVudFJzcz5odHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vMjAxMi8xMi8yNi9sZXMtMTItam91cnMtY2FkZWF1eC1hcHBsZS1jZXN0LXBhcnRpL2ZlZWQvPC93Znc6Y29tbWVudFJzcz4NCgkJPHNsYXNoOmNvbW1lbnRzPjA8L3NsYXNoOmNvbW1lbnRzPg0KCQk8L2l0ZW0%DQoJCTxpdGVtPg0KCQk8dGl0bGU%W0pCXSBCb292ZXIgOiBwbGFjZXogdm9zIGJhZGdlcyDDoCB2b3RyZSBndWlzZS48L3RpdGxlPg0KCQk8bGluaz5odHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vMjAxMi8xMi8yNi9qYi1ib292ZXItcGxhY2V6LXZvcy1iYWRnZXMtYS12b3RyZS1ndWlzZS88L2xpbms%DQoJCTxjb21tZW50cz5odHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vMjAxMi8xMi8yNi9qYi1ib292ZXItcGxhY2V6LXZvcy1iYWRnZXMtYS12b3RyZS1ndWlzZS8jY29tbWVudHM8L2NvbW1lbnRzPg0KCQk8cHViRGF0ZT5XZWQsIDI2IERlYyAyMDEyIDA2OjU2OjU4ICswMDAwPC9wdWJEYXRlPg0KCQk8ZGM6Y3JlYXRvcj5Kb2huIDMxNjwvZGM6Y3JlYXRvcj4NCgkJCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbQ3lkaWFdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbSmFpbGJyZWFrXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW3R3ZWFrXV0%PC9jYXRlZ29yeT4NCg0KCQk8Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8:cD00ODUyMjwvZ3VpZD4NCgkJPGRlc2NyaXB0aW9uPjwhW0NEQVRBW05vdXMgdm91cyBwYXJsaW9ucyBpbCB5IGEgcXVlbHF1ZXMgam91cnMgZHUgdHdlYWsgQ2VudGVyQmFkZ2VzIHF1aSB2b3VzIHBlcm1ldCBkZSBjZW50cmVyIGxlcyBiYWRnZXMgZGUgbm90aWZpY2F0aW9uIGhvcml6b250YWxlbWVudCBzdXIgdm90cmUgc3ByaW5nYm9hcmQgZXQgYmllbiBzaSBjZSBnZW5yZSBkZSBjdXN0b21pc2F0aW9uIHZvdXMgcGxhaXQgdm9pY2kgQm9vdmVyICEgQm9vdmVyIHBhcnQgZHUgbcOqbWUgcHJpbmNpcGUgbWFpcyB2b3VzIG9mZnJlIGJlYXVjb3VwIHBsdXMgZGUgcG9zc2liaWxpdMOpcywgdm91cyBwb3V2ZXogZW4gZWZmZXQgcGxhY2VyIHZvcyBiYWRnZXMgWy4uLl1dXT48L2Rlc2NyaXB0aW9uPg0KCQkJCTxjb250ZW50OmVuY29kZWQ%PCFbQ0RBVEFbPHA%PGEgaHJlZj0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9Cb292ZXIuanBnIiByZWw9ImxpZ2h0Ym94WzQ4NTIyXSIgdGl0bGU9IltKQl0gQm9vdmVyIDogcGxhY2V6IHZvcyBiYWRnZXMgw6Agdm90cmUgZ3Vpc2UuIj48aW1nIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9Cb292ZXItMjI4eDMwMC5qcGciIGFsdD0iQm9vdmVyIiB3aWR0aD0iMjI4IiBoZWlnaHQ9IjMwMCIgY2xhc3M9ImFsaWdubGVmdCBzaXplLW1lZGl1bSB3cC1pbWFnZS00ODUyMyIgLz48L2E%Tm91cyB2b3VzIHBhcmxpb25zIGlsIHkgYSBxdWVscXVlcyBqb3VycyBkdSB0d2VhayBDZW50ZXJCYWRnZXMgcXVpIHZvdXMgcGVybWV0IGRlIGNlbnRyZXIgbGVzIGJhZGdlcyBkZSBub3RpZmljYXRpb24gaG9yaXpvbnRhbGVtZW50IHN1ciB2b3RyZSBzcHJpbmdib2FyZCBldCBiaWVuIHNpIGNlIGdlbnJlIGRlIGN1c3RvbWlzYXRpb24gdm91cyBwbGFpdCB2b2ljaSBCb292ZXIgITwvcD4NCjxwPkJvb3ZlciBwYXJ0IGR1IG3Dqm1lIHByaW5jaXBlIG1haXMgdm91cyBvZmZyZSBiZWF1Y291cCBwbHVzIGRlIHBvc3NpYmlsaXTDqXMsIHZvdXMgcG91dmV6IGVuIGVmZmV0IHBsYWNlciB2b3MgYmFkZ2VzIG:DuSB2b3VzIGxlIHNvdWhhaXRlei48L3A%DQo8cD5Cb292ZXIgZXN0IGRpc3BvbmlibGUgZ3JhdHVpdGVtZW50IHN1ciBsZSByZXBvLiBkZSBCaWdCb3NzLjwvcD4NCl1dPjwvY29udGVudDplbmNvZGVkPg0KCQkJPHdmdzpjb21tZW50UnNzPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI2L2piLWJvb3Zlci1wbGFjZXotdm9zLWJhZGdlcy1hLXZvdHJlLWd1aXNlL2ZlZWQvPC93Znc6Y29tbWVudFJzcz4NCgkJPHNsYXNoOmNvbW1lbnRzPjA8L3NsYXNoOmNvbW1lbnRzPg0KCQk8L2l0ZW0%DQoJCTxpdGVtPg0KCQk8dGl0bGU%U2FudGEgUm9ja3N0YXIgOiBVbiBhaXIgZGUgR3VpdGFyIEhlcm8gcG91ciBsZXMgY2hhbnRzIGRlIE5vw6tsLjwvdGl0bGU%DQoJCTxsaW5rPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI1L3NhbnRhLXJvY2tzdGFyLXVuLWFpci1kZS1ndWl0YXItaGVyby1wb3VyLWxlcy1jaGFudHMtZGUtbm9lbC88L2xpbms%DQoJCTxjb21tZW50cz5odHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vMjAxMi8xMi8yNS9zYW50YS1yb2Nrc3Rhci11bi1haXItZGUtZ3VpdGFyLWhlcm8tcG91ci1sZXMtY2hhbnRzLWRlLW5vZWwvI2NvbW1lbnRzPC9jb21tZW50cz4NCgkJPHB1YkRhdGU%VHVlLCAyNSBEZWMgMjAxMiAwODoxMzoyMSArMDAwMDwvcHViRGF0ZT4NCgkJPGRjOmNyZWF0b3I%Sm9obiAzMTY8L2RjOmNyZWF0b3I%DQoJCQkJPGNhdGVnb3J5PjwhW0NEQVRBW0FwcCBHcmF0dWl0ZV1dPjwvY2F0ZWdvcnk%DQoNCgkJPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj5odHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vP3A9NDg1MjA8L2d1aWQ%DQoJCTxkZXNjcmlwdGlvbj48IVtDREFUQVtPbiBjb250aW51ZSBkYW5zIGwmIzgyMTc7ZXNwcml0IGRlIE5vw6tsIGF2ZWMgdW4gcGV0aXQgamV1IGRhbnMgbGUgcGx1cyBwdXIgZXNwcml0IGRlcyBHdWl0YXIgSGVybyAhIE1haXMgY2V0dGUgZm9pcy1jaSBsZXMgY2hhbnNvbnMgc29udCBkZXMgY2hhbnRzIGRlIG5vw6tsIHJlbWl4w6llcyBkYW5zIGxlIHBsdXMgcHVyIHN0eWxlIEhhcmQgUm9jayAhIFNhbnRhIFJvY2tzdGFyIGVzdCBkaXNwb25pYmxlIGdyYXR1aXRlbWVudF1dPjwvZGVzY3JpcHRpb24%DQoJCQkJPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD48YSBocmVmPSJhc3NldHMvZmVlZHNfaW1hZ2VzL1NhbnRhUm9ja3N0YXIuanBnIiByZWw9ImxpZ2h0Ym94WzQ4NTIwXSIgdGl0bGU9IlNhbnRhIFJvY2tzdGFyIDogVW4gYWlyIGRlIEd1aXRhciBIZXJvIHBvdXIgbGVzIGNoYW50cyBkZSBOb8OrbC4iPjxpbWcgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL1NhbnRhUm9ja3N0YXItMjIxeDMwMC5qcGciIGFsdD0iU2FudGFSb2Nrc3RhciIgd2lkdGg9IjIyMSIgaGVpZ2h0PSIzMDAiIGNsYXNzPSJhbGlnbmxlZnQgc2l6ZS1tZWRpdW0gd3AtaW1hZ2UtNDg1MjEiIC8%PC9hPk9uIGNvbnRpbnVlIGRhbnMgbCZyc3F1bztlc3ByaXQgZGUgTm:Dq2wgYXZlYyB1biBwZXRpdCBqZXUgZGFucyBsZSBwbHVzIHB1ciBlc3ByaXQgZGVzIEd1aXRhciBIZXJvICE8L3A%DQo8cD5NYWlzIGNldHRlIGZvaXMtY2kgbGVzIGNoYW5zb25zIHNvbnQgZGVzIGNoYW50cyBkZSBub8OrbCByZW1peMOpZXMgZGFucyBsZSBwbHVzIHB1ciBzdHlsZSBIYXJkIFJvY2sgITwvcD4NCjxwPjxhIGhyZWY9Imh0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthPTE4ODUxNTcmYW1wO3VybD1odHRwczovL2l0dW5lcy5hcHBsZS5jb20vZnIvYXBwL3NhbnRhLXJvY2tzdGFyL2lkNTc4NjM4MDY5P210PTgmYW1wO3VvPTQmYW1wO3BhcnRuZXJJZD0yMDAzIiB0YXJnZXQ9Il9ibGFuayI%U2FudGEgUm9ja3N0YXIgPC9hPmVzdCBkaXNwb25pYmxlIGdyYXR1aXRlbWVudCA8aW1nIHNyYz0naHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tL3dwLWluY2x1ZGVzL2ltYWdlcy9zbWlsaWVzL2ljb25fc21pbGUuZ2lmJyBhbHQ9JzopJyBjbGFzcz0nd3Atc21pbGV5JyAvPiA8L3A%DQo8cD48YSBocmVmPSJodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YT0xODg1MTU3JmFtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2ZyL2FwcC9zYW50YS1yb2Nrc3Rhci9pZDU3ODYzODA2OT9tdD04JmFtcDt1bz00JmFtcDtwYXJ0bmVySWQ9MjAwMyI%PGltZyBjbGFzcz0ic2l6ZS1mdWxsIHdwLWltYWdlLTE4MzE2IGFsaWducmlnaHQiIHRpdGxlPSJiYWRnZV9hcHBzdG9yZS1scmciIHNyYz0iaHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDEwLzExL2JhZGdlX2FwcHN0b3JlLWxyZzEuZ2lmIiBhbHQ9IiIgd2lkdGg9IjExNiIgaGVpZ2h0PSI0MCIgLz48L2E%PC9wPg0KXV0%PC9jb250ZW50OmVuY29kZWQ%DQoJCQk8d2Z3OmNvbW1lbnRSc3M%aHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tLzIwMTIvMTIvMjUvc2FudGEtcm9ja3N0YXItdW4tYWlyLWRlLWd1aXRhci1oZXJvLXBvdXItbGVzLWNoYW50cy1kZS1ub2VsL2ZlZWQvPC93Znc6Y29tbWVudFJzcz4NCgkJPHNsYXNoOmNvbW1lbnRzPjE8L3NsYXNoOmNvbW1lbnRzPg0KCQk8L2l0ZW0%DQoJCTxpdGVtPg0KCQk8dGl0bGU%W0dyYXR1aXRdIENhbWVyYS1GWCBhIG5lIHBhcyBjb25mb25kcmUgYXZlYyBDYW1lcmEgRlghPC90aXRsZT4NCgkJPGxpbms%aHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tLzIwMTIvMTIvMjUvZ3JhdHVpdC1jYW1lcmEtZngtYS1uZS1wYXMtY29uZm9uZHJlLWF2ZWMtY2FtZXJhLWZ4LzwvbGluaz4NCgkJPGNvbW1lbnRzPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI1L2dyYXR1aXQtY2FtZXJhLWZ4LWEtbmUtcGFzLWNvbmZvbmRyZS1hdmVjLWNhbWVyYS1meC8jY29tbWVudHM8L2NvbW1lbnRzPg0KCQk8cHViRGF0ZT5UdWUsIDI1IERlYyAyMDEyIDA2OjU4OjQ4ICswMDAwPC9wdWJEYXRlPg0KCQk8ZGM6Y3JlYXRvcj5Kb2huIDMxNjwvZGM6Y3JlYXRvcj4NCgkJCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbQXBwIEdyYXR1aXRlXV0%PC9jYXRlZ29yeT4NCg0KCQk8Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8:cD00ODUxODwvZ3VpZD4NCgkJPGRlc2NyaXB0aW9uPjwhW0NEQVRBW0FsbGV6IGVuY29yZSB1bmUgbm91dmVsbGUgYXBwbGljYXRpb24gZGUgcHJpc2UgZGUgcGhvdG9zIGV0IGQmIzgyMTc7YWpvdXQgZGUgZmlsdHJlcyAhIENhbWVyYS1GWCDDoCBuZSBwYXMgY29uZm9uZHJlIGF2ZWMgQ2FtZXJhIEZYISBlc3QgcGx1dMO0dCBiaWVuIHLDqWFsaXPDqWUgZXQgYSBkZSBwbHVzIGxlIG3DqXJpdGUgZCYjODIxNzvDqnRyZSBncmF0dWl0ZS4gQSBlc3NheWVyLl1dPjwvZGVzY3JpcHRpb24%DQoJCQkJPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD48YSBocmVmPSJhc3NldHMvZmVlZHNfaW1hZ2VzL216bC5sbmFuZGt4cC4zMjB4NDgwLTc1LmpwZyIgcmVsPSJsaWdodGJveFs0ODUxOF0iIHRpdGxlPSJbR3JhdHVpdF0gQ2FtZXJhLUZYIGEgbmUgcGFzIGNvbmZvbmRyZSBhdmVjIENhbWVyYSBGWCEiPjxpbWcgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL216bC5sbmFuZGt4cC4zMjB4NDgwLTc1LTE2OHgzMDAuanBnIiBhbHQ9Im16bC5sbmFuZGt4cC4zMjB4NDgwLTc1IiB3aWR0aD0iMTY4IiBoZWlnaHQ9IjMwMCIgY2xhc3M9ImFsaWdubGVmdCBzaXplLW1lZGl1bSB3cC1pbWFnZS00ODUxOSIgLz48L2E%QWxsZXogZW5jb3JlIHVuZSBub3V2ZWxsZSBhcHBsaWNhdGlvbiBkZSBwcmlzZSBkZSBwaG90b3MgZXQgZCZyc3F1bztham91dCBkZSBmaWx0cmVzICE8L3A%DQo8cD48YSBocmVmPSJodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YT0xODg1MTU3JmFtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2ZyL2FwcC9jYW1lcmEtZngvaWQ1ODIwNzgzMTI:bXQ9OCZhbXA7dW89NCZhbXA7cGFydG5lcklkPTIwMDMiIHRhcmdldD0iX2JsYW5rIj5DYW1lcmEtRlg8L2E%IMOgIG5lIHBhcyBjb25mb25kcmUgYXZlYyBDYW1lcmEgRlghIGVzdCBwbHV0w7R0IGJpZW4gcsOpYWxpc8OpZSBldCBhIGRlIHBsdXMgbGUgbcOpcml0ZSBkJnJzcXVvO8OqdHJlIGdyYXR1aXRlLjwvcD4NCjxwPkEgZXNzYXllci48L3A%DQo8cD48YSBocmVmPSJodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YT0xODg1MTU3JmFtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2ZyL2FwcC9jYW1lcmEtZngvaWQ1ODIwNzgzMTI:bXQ9OCZhbXA7dW89NCZhbXA7cGFydG5lcklkPTIwMDMiPjxpbWcgY2xhc3M9InNpemUtZnVsbCB3cC1pbWFnZS0xODMxNiBhbGlnbnJpZ2h0IiB0aXRsZT0iYmFkZ2VfYXBwc3RvcmUtbHJnIiBzcmM9Imh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxMC8xMS9iYWRnZV9hcHBzdG9yZS1scmcxLmdpZiIgYWx0PSIiIHdpZHRoPSIxMTYiIGhlaWdodD0iNDAiIC8%PC9hPjwvcD4NCl1dPjwvY29udGVudDplbmNvZGVkPg0KCQkJPHdmdzpjb21tZW50UnNzPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI1L2dyYXR1aXQtY2FtZXJhLWZ4LWEtbmUtcGFzLWNvbmZvbmRyZS1hdmVjLWNhbWVyYS1meC9mZWVkLzwvd2Z3OmNvbW1lbnRSc3M%DQoJCTxzbGFzaDpjb21tZW50cz4xPC9zbGFzaDpjb21tZW50cz4NCgkJPC9pdGVtPg0KCQk8aXRlbT4NCgkJPHRpdGxlPkpveWV1eCBOb8OrbCDDoCB0b3VzICE8L3RpdGxlPg0KCQk8bGluaz5odHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vMjAxMi8xMi8yNC9qb3lldXgtbm9lbC1hLXRvdXMvPC9saW5rPg0KCQk8Y29tbWVudHM%aHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tLzIwMTIvMTIvMjQvam95ZXV4LW5vZWwtYS10b3VzLyNjb21tZW50czwvY29tbWVudHM%DQoJCTxwdWJEYXRlPk1vbiwgMjQgRGVjIDIwMTIgMTg6MjI6NDggKzAwMDA8L3B1YkRhdGU%DQoJCTxkYzpjcmVhdG9yPkpvaG4gMzE2PC9kYzpjcmVhdG9yPg0KCQkJCTxjYXRlZ29yeT48IVtDREFUQVtpUGhvbmVdXT48L2NhdGVnb3J5Pg0KDQoJCTxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI%aHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tLz9wPTQ4NTE2PC9ndWlkPg0KCQk8ZGVzY3JpcHRpb24%PCFbQ0RBVEFbQWxsZXogaWwgZXN0IHRlbXBzIGRlIGxhaXNzZXIgdG9tYmVyIHVuIHBldSBsZSBtb25kZSBkZSBsYSBwb21tZSBwb3VyIHNlIHJldHJvdXZlciBlbiBmYW1pbGxlICEgTm91cyB2b3VzIHNvdWhhaXRvbnMgw6AgdG91cyB1biBleGNlbGxlbnQgTm:Dq2wgISFdXT48L2Rlc2NyaXB0aW9uPg0KCQkJCTxjb250ZW50OmVuY29kZWQ%PCFbQ0RBVEFbPHA%QWxsZXogaWwgZXN0IHRlbXBzIGRlIGxhaXNzZXIgdG9tYmVyIHVuIHBldSBsZSBtb25kZSBkZSBsYSBwb21tZSBwb3VyIHNlIHJldHJvdXZlciBlbiBmYW1pbGxlICE8L3A%DQo8cD5Ob3VzIHZvdXMgc291aGFpdG9ucyDDoCB0b3VzIHVuIGV4Y2VsbGVudCBOb8OrbCAhITxhIGhyZWY9ImFzc2V0cy9mZWVkc19pbWFnZXMvbm9lbC5qcGciIHJlbD0ibGlnaHRib3hbNDg1MTZdIiB0aXRsZT0iSm95ZXV4IE5vw6tsIMOgIHRvdXMgISI%PGltZyBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvbm9lbC5qcGciIGFsdD0ibm9lbCIgd2lkdGg9IjU1MCIgaGVpZ2h0PSIzNzciIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLWZ1bGwgd3AtaW1hZ2UtNDg1MTciIC8%PC9hPjwvcD4NCl1dPjwvY29udGVudDplbmNvZGVkPg0KCQkJPHdmdzpjb21tZW50UnNzPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI0L2pveWV1eC1ub2VsLWEtdG91cy9mZWVkLzwvd2Z3OmNvbW1lbnRSc3M%DQoJCTxzbGFzaDpjb21tZW50cz4wPC9zbGFzaDpjb21tZW50cz4NCgkJPC9pdGVtPg0KCQk8aXRlbT4NCgkJPHRpdGxlPltWaWTDqW9dIFNpcmkgYXZlYyB1bmUgdm9peCBmw6ltaW5pbmUuPC90aXRsZT4NCgkJPGxpbms%aHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tLzIwMTIvMTIvMjQvdmlkZW8tc2lyaS1hdmVjLXVuZS12b2l4LWZlbWluaW5lLzwvbGluaz4NCgkJPGNvbW1lbnRzPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI0L3ZpZGVvLXNpcmktYXZlYy11bmUtdm9peC1mZW1pbmluZS8jY29tbWVudHM8L2NvbW1lbnRzPg0KCQk8cHViRGF0ZT5Nb24sIDI0IERlYyAyMDEyIDA3OjM3OjA3ICswMDAwPC9wdWJEYXRlPg0KCQk8ZGM6Y3JlYXRvcj5Kb2huIDMxNjwvZGM6Y3JlYXRvcj4NCgkJCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbU2lyaV1dPjwvY2F0ZWdvcnk%DQoNCgkJPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj5odHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vP3A9NDg1MTQ8L2d1aWQ%DQoJCTxkZXNjcmlwdGlvbj48IVtDREFUQVtTaSB2b3VzIGVuIGF2ZXogdW4gcGV1IG1hcnJlIGRlIGxhIHZvaXggbWFzY3VsaW5lIGRlIFNpcmkgc2F2aWV6LXZvdXMgcXUmIzgyMTc7aWwgZXN0IHBvc3NpYmxlIGQmIzgyMTc7dXRpbGlzZXIgdW5lIHZvaXggZsOpbWluaW5lID8gSWwgc3VmZml0IGRlIHZvdXMgcmVuZHJlIGRhbnMgbGVzIHLDqWdsYWdlcyBkZSB2b3RyZSBpUGhvbmUgcHVpcyBkYW5zIEfDqW7DqXJhbCwgU2lyaSwgTGFuZ3VlIGV0IGRlIHPDqWxlY3Rpb25uZXIgRnJhbsOnYWlzIChDYW5hZGEpLiBCaWVuIHPDu3IgbGEgZGVtb2lzZWxsZSBhdXJhIHVuZSBwb2ludGUgZCYjODIxNzthY2NlbnQgY2FuYWRpZW4gbWFpcyBjZWxhIGFqb3V0ZSBbLi4uXV1dPjwvZGVzY3JpcHRpb24%DQoJCQkJPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD48YSBocmVmPSJhc3NldHMvZmVlZHNfaW1hZ2VzL3NpcmkuanBnIiByZWw9ImxpZ2h0Ym94WzQ4NTE0XSIgdGl0bGU9IltWaWTDqW9dIFNpcmkgYXZlYyB1bmUgdm9peCBmw6ltaW5pbmUuIj48aW1nIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9zaXJpLTMwMHgyMjAuanBnIiBhbHQ9InNpcmkiIHdpZHRoPSIzMDAiIGhlaWdodD0iMjIwIiBjbGFzcz0iYWxpZ25sZWZ0IHNpemUtbWVkaXVtIHdwLWltYWdlLTQ4NTE1IiAvPjwvYT5TaSB2b3VzIGVuIGF2ZXogdW4gcGV1IG1hcnJlIGRlIGxhIHZvaXggbWFzY3VsaW5lIGRlIFNpcmkgc2F2aWV6LXZvdXMgcXUmcnNxdW87aWwgZXN0IHBvc3NpYmxlIGQmcnNxdW87dXRpbGlzZXIgdW5lIHZvaXggZsOpbWluaW5lID88L3A%DQo8cD5JbCBzdWZmaXQgZGUgdm91cyByZW5kcmUgZGFucyBsZXMgcsOpZ2xhZ2VzIGRlIHZvdHJlIGlQaG9uZSBwdWlzIGRhbnMgR8OpbsOpcmFsLCBTaXJpLCBMYW5ndWUgZXQgZGUgc8OpbGVjdGlvbm5lciBGcmFuw6dhaXMgKENhbmFkYSkuPC9wPg0KPHA%QmllbiBzw7tyIGxhIGRlbW9pc2VsbGUgYXVyYSB1bmUgcG9pbnRlIGQmcnNxdW87YWNjZW50IGNhbmFkaWVuIG1haXMgY2VsYSBham91dGUgdW4gcGV1IGQmcnNxdW87ZXhvdGlzbWUgITwvcD4NCjxwPjxhIGhyZWY9Imh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI0L3ZpZGVvLXNpcmktYXZlYy11bmUtdm9peC1mZW1pbmluZS8iPjxlbT5DbGlxdWVyIGljaSBwb3VyIHZvaXIgbGEgdmlkw6lvLjwvZW0%PC9hPjwvcD4NCl1dPjwvY29udGVudDplbmNvZGVkPg0KCQkJPHdmdzpjb21tZW50UnNzPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI0L3ZpZGVvLXNpcmktYXZlYy11bmUtdm9peC1mZW1pbmluZS9mZWVkLzwvd2Z3OmNvbW1lbnRSc3M%DQoJCTxzbGFzaDpjb21tZW50cz4wPC9zbGFzaDpjb21tZW50cz4NCgkJPC9pdGVtPg0KCQk8aXRlbT4NCgkJPHRpdGxlPkomIzgyMTc7YWkgcmXDp3UgbW9uIEFsYnVtIE1vc2FpYyA6IFN1cGVyYmUgY29tbWUgcHLDqXZ1LjwvdGl0bGU%DQoJCTxsaW5rPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI0L2phaS1yZWN1LW1vbi1hbGJ1bS1tb3NhaWMtc3VwZXJiZS1jb21tZS1wcmV2dS88L2xpbms%DQoJCTxjb21tZW50cz5odHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vMjAxMi8xMi8yNC9qYWktcmVjdS1tb24tYWxidW0tbW9zYWljLXN1cGVyYmUtY29tbWUtcHJldnUvI2NvbW1lbnRzPC9jb21tZW50cz4NCgkJPHB1YkRhdGU%TW9uLCAyNCBEZWMgMjAxMiAwNjoyMjo1NCArMDAwMDwvcHViRGF0ZT4NCgkJPGRjOmNyZWF0b3I%Sm9obiAzMTY8L2RjOmNyZWF0b3I%DQoJCQkJPGNhdGVnb3J5PjwhW0NEQVRBW05ld3NdXT48L2NhdGVnb3J5Pg0KDQoJCTxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI%aHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tLz9wPTQ4NTA3PC9ndWlkPg0KCQk8ZGVzY3JpcHRpb24%PCFbQ0RBVEFbSWwgeSBhIHF1ZWxxdWVzIGpvdXJzIGplIHZvdXMgcGFybGFpcyBkZSBsJiM4MjE3O2FwcGxpY2F0aW9uIE1vc2FpYywgdW5lIGFwcGxpY2F0aW9uIHBhcnRpY3VsacOocmVtZW50IHNpbXBsZSBwZXJtZXR0YW50IGRlIGNyw6llciBkZSBzdXBlcmJlcyBhbGJ1bXMgcGhvdG9zLiBFdCBiaWVuIGomIzgyMTc7YWkgcmXDp3UgbGUgbWllbiB2ZW5kcmVkaSBkZXJuaWVyIGV0IGplIGRvaXMgZGlyZSBxdWUgamUgbmUgc3VpcyBmcmFuY2hlbWVudCBwYXMgZMOpw6d1ICEgSmUgbmUgc2FpcyBtYWxoZXVyZXVzZW1lbnQgdG91am91cnMgcGFzIHF1YW5kIGxhIHZlcnNpb24gZmluYWxlIHZhIHNvcnRpciBwb3VyIFsuLi5dXV0%PC9kZXNjcmlwdGlvbj4NCgkJCQk8Y29udGVudDplbmNvZGVkPjwhW0NEQVRBWzxwPklsIHkgYSA8YSBocmVmPSJodHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vMjAxMi8xMi8xNy9iZXRhLWF2ZWMtbW9zYWljLWNyZWV6LWRlLXN1cGVyYmVzLWFsYnVtcy1waG90b3MvIj5xdWVscXVlcyBqb3VycyBqZSB2b3VzIHBhcmxhaXMgZGUgbCZyc3F1bzthcHBsaWNhdGlvbiBNb3NhaWM8L2E%LCB1bmUgYXBwbGljYXRpb24gcGFydGljdWxpw6hyZW1lbnQgc2ltcGxlIHBlcm1ldHRhbnQgZGUgY3LDqWVyIGRlIHN1cGVyYmVzIGFsYnVtcyBwaG90b3MuPGJyIC8%DQpFdCBiaWVuIGomcnNxdW87YWkgcmXDp3UgbGUgbWllbiB2ZW5kcmVkaSBkZXJuaWVyIGV0IGplIGRvaXMgZGlyZSBxdWUgamUgbmUgc3VpcyBmcmFuY2hlbWVudCBwYXMgZMOpw6d1ICE8YnIgLz4NCkplIG5lIHNhaXMgbWFsaGV1cmV1c2VtZW50IHRvdWpvdXJzIHBhcyBxdWFuZCBsYSB2ZXJzaW9uIGZpbmFsZSB2YSBzb3J0aXIgcG91ciBsJnJzcXVvO0V1cm9wZSBtYWlzIGplIHZhaXMgbSZyc3F1bztlbXByZXNzZXIgZGUgbGV1ciBkZW1hbmRlci48YnIgLz4NClBTIDogbCZyc3F1bzthbGJ1bSBtJnJzcXVvO2EgY2:Du3TDqSAyMCQgKyAxOCQgZCZyc3F1bztVUFMgc29pdCB1biBwZXUgbW9pbnMgZGUgMzDigqwgY2UgcXVpIGVzdCBwbHV0w7R0IGNvcnJlY3QgbG9yc3F1ZSBsJnJzcXVvO29uIHZvaXQgbGEgcXVhbGl0w6kgZHUgcGFja2FnaW5nIGV0IGRlIGwmcnNxdW87YWxidW0uPGJyIC8%DQo8YSBocmVmPSJhc3NldHMvZmVlZHNfaW1hZ2VzL01vc2FpY18xLmpwZyIgcmVsPSJsaWdodGJveFs0ODUwN10iIHRpdGxlPSJKJ2FpIHJlw6d1IG1vbiBBbGJ1bSBNb3NhaWMgOiBTdXBlcmJlIGNvbW1lIHByw6l2dS4iPjxpbWcgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL01vc2FpY18xLmpwZyIgYWx0PSJNb3NhaWNfMSIgd2lkdGg9IjU1MCIgaGVpZ2h0PSIzNTUiIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLWZ1bGwgd3AtaW1hZ2UtNDg1MDkiIC8%PC9hPjxiciAvPg0KPGEgaHJlZj0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9Nb3NhaWNfMi5qcGciIHJlbD0ibGlnaHRib3hbNDg1MDddIiB0aXRsZT0iSidhaSByZcOndSBtb24gQWxidW0gTW9zYWljIDogU3VwZXJiZSBjb21tZSBwcsOpdnUuIj48aW1nIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9Nb3NhaWNfMi5qcGciIGFsdD0iTW9zYWljXzIiIHdpZHRoPSI1NTAiIGhlaWdodD0iMzU1IiBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1mdWxsIHdwLWltYWdlLTQ4NTEwIiAvPjwvYT48YnIgLz4NCjxhIGhyZWY9ImFzc2V0cy9mZWVkc19pbWFnZXMvTW9zYWljXzMuanBnIiByZWw9ImxpZ2h0Ym94WzQ4NTA3XSIgdGl0bGU9IkonYWkgcmXDp3UgbW9uIEFsYnVtIE1vc2FpYyA6IFN1cGVyYmUgY29tbWUgcHLDqXZ1LiI%PGltZyBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvTW9zYWljXzMuanBnIiBhbHQ9Ik1vc2FpY18zIiB3aWR0aD0iNTUwIiBoZWlnaHQ9IjM1NSIgY2xhc3M9ImFsaWduY2VudGVyIHNpemUtZnVsbCB3cC1pbWFnZS00ODUxMSIgLz48L2E%PGJyIC8%DQo8YSBocmVmPSJhc3NldHMvZmVlZHNfaW1hZ2VzL01vc2FpY18zYi5qcGciIHJlbD0ibGlnaHRib3hbNDg1MDddIiB0aXRsZT0iSidhaSByZcOndSBtb24gQWxidW0gTW9zYWljIDogU3VwZXJiZSBjb21tZSBwcsOpdnUuIj48aW1nIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9Nb3NhaWNfM2IuanBnIiBhbHQ9Ik1vc2FpY18zYiIgd2lkdGg9IjU1MCIgaGVpZ2h0PSIzNTUiIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLWZ1bGwgd3AtaW1hZ2UtNDg1MTIiIC8%PC9hPjxiciAvPg0KPGEgaHJlZj0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9Nb3NhaWNfNC5qcGciIHJlbD0ibGlnaHRib3hbNDg1MDddIiB0aXRsZT0iSidhaSByZcOndSBtb24gQWxidW0gTW9zYWljIDogU3VwZXJiZSBjb21tZSBwcsOpdnUuIj48aW1nIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9Nb3NhaWNfNC5qcGciIGFsdD0iTW9zYWljXzQiIHdpZHRoPSI1NTAiIGhlaWdodD0iMzU1IiBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1mdWxsIHdwLWltYWdlLTQ4NTEzIiAvPjwvYT48L3A%DQpdXT48L2NvbnRlbnQ6ZW5jb2RlZD4NCgkJCTx3Znc6Y29tbWVudFJzcz5odHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vMjAxMi8xMi8yNC9qYWktcmVjdS1tb24tYWxidW0tbW9zYWljLXN1cGVyYmUtY29tbWUtcHJldnUvZmVlZC88L3dmdzpjb21tZW50UnNzPg0KCQk8c2xhc2g6Y29tbWVudHM%Mzwvc2xhc2g6Y29tbWVudHM%DQoJCTwvaXRlbT4NCgkJPGl0ZW0%DQoJCTx0aXRsZT5MJiM4MjE3O0FwcGxpY2F0aW9uIGRlIGxhIHNlbWFpbmUgZCYjODIxNztBcHBsZSA6IEF2ZW5nZXJzIEluaXRpYXRpdmUgITwvdGl0bGU%DQoJCTxsaW5rPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI0L2xhcHBsaWNhdGlvbi1kZS1sYS1zZW1haW5lLWRhcHBsZS1hdmVuZ2Vycy1pbml0aWF0aXZlLzwvbGluaz4NCgkJPGNvbW1lbnRzPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI0L2xhcHBsaWNhdGlvbi1kZS1sYS1zZW1haW5lLWRhcHBsZS1hdmVuZ2Vycy1pbml0aWF0aXZlLyNjb21tZW50czwvY29tbWVudHM%DQoJCTxwdWJEYXRlPk1vbiwgMjQgRGVjIDIwMTIgMDU6NTc6MzUgKzAwMDA8L3B1YkRhdGU%DQoJCTxkYzpjcmVhdG9yPkpvaG4gMzE2PC9kYzpjcmVhdG9yPg0KCQkJCTxjYXRlZ29yeT48IVtDREFUQVtBcHAgR3JhdHVpdGVdXT48L2NhdGVnb3J5Pg0KDQoJCTxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI%aHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tLz9wPTQ4NTA1PC9ndWlkPg0KCQk8ZGVzY3JpcHRpb24%PCFbQ0RBVEFbQ29tbWUgY2hhcXVlIHNlbWFpbmUgQXBwbGUgdm91cyBwcm9wb3NlIHVuZSBhcHBsaWNhdGlvbiBncmF0dWl0ZSBldCBjZXR0ZSBmb2lzLWNpIGlsIHMmIzgyMTc7YWdpdCBkJiM4MjE3O3VuIGpldSBNYXJ2ZWwgISBBdmVuZ2VycyBJbml0aWF0aXZlIGVzdCBkb25jIGFjdHVlbGxlbWVudCBncmF0dWl0ZSwgdW4gYm9uIGpldSBiaWVuIGJvdXJyaW4gZGFucyBsZXF1ZWwgdm91cyBhbGzDqSBwb3V2b2lyIGluY2FybsOpIENhcHRhaW4gQW1lcmljYSBvdSBIdWxrICEgUFMgOiBMZSBqZXUgZmFpdCB0b3V0IGRlIG3Dqm1lIDEuMDVHbywgb3B0ZXogcG91ciB1bmUgY29ubmV4aW9uIFdpRmldXT48L2Rlc2NyaXB0aW9uPg0KCQkJCTxjb250ZW50OmVuY29kZWQ%PCFbQ0RBVEFbPHA%PGEgaHJlZj0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9temwueGNncnZ4cmUuNjQweDk2MC03NS5qcGciIHJlbD0ibGlnaHRib3hbNDg1MDVdIiB0aXRsZT0iTCdBcHBsaWNhdGlvbiBkZSBsYSBzZW1haW5lIGQnQXBwbGUgOiBBdmVuZ2VycyBJbml0aWF0aXZlICEiPjxpbWcgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL216bC54Y2dydnhyZS42NDB4OTYwLTc1LTMwMHgxNjkuanBnIiBhbHQ9Im16bC54Y2dydnhyZS42NDB4OTYwLTc1IiB3aWR0aD0iMzAwIiBoZWlnaHQ9IjE2OSIgY2xhc3M9ImFsaWdubGVmdCBzaXplLW1lZGl1bSB3cC1pbWFnZS00ODUwNiIgLz48L2E%Q29tbWUgY2hhcXVlIHNlbWFpbmUgQXBwbGUgdm91cyBwcm9wb3NlIHVuZSBhcHBsaWNhdGlvbiBncmF0dWl0ZSBldCBjZXR0ZSBmb2lzLWNpIGlsIHMmcnNxdW87YWdpdCBkJnJzcXVvO3VuIGpldSBNYXJ2ZWwgITwvcD4NCjxwPjxhIGhyZWY9Imh0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthPTE4ODUxNTcmYW1wO3VybD1odHRwczovL2l0dW5lcy5hcHBsZS5jb20vZnIvYXBwL2F2ZW5nZXJzLWluaXRpYXRpdmUvaWQ1MDcyODMzMzE:bXQ9OCZhbXA7dW89NCZhbXA7cGFydG5lcklkPTIwMDMiIHRhcmdldD0iX2JsYW5rIj5BdmVuZ2VycyBJbml0aWF0aXZlPC9hPiBlc3QgZG9uYyBhY3R1ZWxsZW1lbnQgZ3JhdHVpdGUsIHVuIGJvbiBqZXUgYmllbiBib3VycmluIGRhbnMgbGVxdWVsIHZvdXMgYWxsw6kgcG91dm9pciBpbmNhcm7DqSBDYXB0YWluIEFtZXJpY2Egb3UgSHVsayAhIDwvcD4NCjxwPlBTIDogTGUgamV1IGZhaXQgdG91dCBkZSBtw6ptZSAxLjA1R28sIG9wdGV6IHBvdXIgdW5lIGNvbm5leGlvbiBXaUZpIDxpbWcgc3JjPSdodHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vd3AtaW5jbHVkZXMvaW1hZ2VzL3NtaWxpZXMvaWNvbl9zbWlsZS5naWYnIGFsdD0nOiknIGNsYXNzPSd3cC1zbWlsZXknIC8%IDwvcD4NCjxwPjxhIGhyZWY9Imh0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthPTE4ODUxNTcmYW1wO3VybD1odHRwczovL2l0dW5lcy5hcHBsZS5jb20vZnIvYXBwL2F2ZW5nZXJzLWluaXRpYXRpdmUvaWQ1MDcyODMzMzE:bXQ9OCZhbXA7dW89NCZhbXA7cGFydG5lcklkPTIwMDMiPjxpbWcgY2xhc3M9InNpemUtZnVsbCB3cC1pbWFnZS0xODMxNiBhbGlnbnJpZ2h0IiB0aXRsZT0iYmFkZ2VfYXBwc3RvcmUtbHJnIiBzcmM9Imh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxMC8xMS9iYWRnZV9hcHBzdG9yZS1scmcxLmdpZiIgYWx0PSIiIHdpZHRoPSIxMTYiIGhlaWdodD0iNDAiIC8%PC9hPjwvcD4NCl1dPjwvY29udGVudDplbmNvZGVkPg0KCQkJPHdmdzpjb21tZW50UnNzPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI0L2xhcHBsaWNhdGlvbi1kZS1sYS1zZW1haW5lLWRhcHBsZS1hdmVuZ2Vycy1pbml0aWF0aXZlL2ZlZWQvPC93Znc6Y29tbWVudFJzcz4NCgkJPHNsYXNoOmNvbW1lbnRzPjE8L3NsYXNoOmNvbW1lbnRzPg0KCQk8L2l0ZW0%DQoJCTxpdGVtPg0KCQk8dGl0bGU%W1ZpZMOpb10gVW4gbWFnaWNpZW4sIHVuIGlQYWQgZXQgTm:Dq2wgITwvdGl0bGU%DQoJCTxsaW5rPmh0dHA6Ly93d3cuZnJlbmNoaXBob25lLmNvbS8yMDEyLzEyLzI0L3ZpZGVvLXVuLW1hZ2ljaWVuLXVuLWlwYWQtZXQtbGEtbm9lbC88L2xpbms%DQoJCTxjb21tZW50cz5odHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vMjAxMi8xMi8yNC92aWRlby11bi1tYWdpY2llbi11bi1pcGFkLWV0LWxhLW5vZWwvI2NvbW1lbnRzPC9jb21tZW50cz4NCgkJPHB1YkRhdGU%TW9uLCAyNCBEZWMgMjAxMiAwNTo0Nzo0NiArMDAwMDwvcHViRGF0ZT4NCgkJPGRjOmNyZWF0b3I%Sm9obiAzMTY8L2RjOmNyZWF0b3I%DQoJCQkJPGNhdGVnb3J5PjwhW0NEQVRBW05ld3NdXT48L2NhdGVnb3J5Pg0KDQoJCTxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI%aHR0cDovL3d3dy5mcmVuY2hpcGhvbmUuY29tLz9wPTQ4NTAzPC9ndWlkPg0KCQk8ZGVzY3JpcHRpb24%PCFbQ0RBVEFbU2ltb24gUGllcnJvIHBsdXMgY29ubnUgc291cyBsZSBwc2V1ZG8gZCYjODIxNztpU2ltb24gbiYjODIxNztlbiBlc3QgcGFzIMOgIHNvbiBjb3VwIGQmIzgyMTc7ZXNzYWkgZXQgY2V0dGUgZm9pcy1jaSBpbCBub3VzIHByb3Bvc2UgZGlmZsOpcmVudHMgdG91cnMgZGUgbWFnaWUgYmFzw6lzIHN1ciBsJiM4MjE3O2VzcHJpdCBkZSBOb8OrbCBsZSB0b3V0IGVuIHV0aWxpc2FudCB1biBpUGFkIGJpZW4gc8O7ci5dXT48L2Rlc2NyaXB0aW9uPg0KCQkJCTxjb250ZW50OmVuY29kZWQ%PCFbQ0RBVEFbPHA%PGEgaHJlZj0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9tYWdpZS5qcGciIHJlbD0ibGlnaHRib3hbNDg1MDNdIiB0aXRsZT0iW1ZpZMOpb10gVW4gbWFnaWNpZW4sIHVuIGlQYWQgZXQgTm:Dq2wgISI%PGltZyBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvbWFnaWUtMzAweDI1MC5qcGciIGFsdD0ibWFnaWUiIHdpZHRoPSIzMDAiIGhlaWdodD0iMjUwIiBjbGFzcz0iYWxpZ25sZWZ0IHNpemUtbWVkaXVtIHdwLWltYWdlLTQ4NTA0IiAvPjwvYT5TaW1vbiBQaWVycm8gcGx1cyBjb25udSBzb3VzIGxlIHBzZXVkbyBkJnJzcXVvOzxhIGhyZWY9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3VzZXIvaU9TbWFnaWM:ZmVhdHVyZT13YXRjaCIgdGFyZ2V0PSJfYmxhbmsiPmlTaW1vbjwvYT4gbiZyc3F1bztlbiBlc3QgcGFzIMOgIHNvbiBjb3VwIGQmcnNxdW87ZXNzYWkgZXQgY2V0dGUgZm9pcy1jaSBpbCBub3VzIHByb3Bvc2UgZGlmZsOpcmVudHMgdG91cnMgZGUgbWFnaWUgYmFzw6lzIHN1ciBsJnJzcXVvO2VzcHJpdCBkZSBOb8OrbCBsZSB0b3V0IGVuIHV0aWxpc2FudCB1biBpUGFkIGJpZW4gc8O7ci48L3A%DQo8cD48YSBocmVmPSJodHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vMjAxMi8xMi8yNC92aWRlby11bi1tYWdpY2llbi11bi1pcGFkLWV0LWxhLW5vZWwvIj48ZW0%Q2xpcXVlciBpY2kgcG91ciB2b2lyIGxhIHZpZMOpby48L2VtPjwvYT48L3A%DQpdXT48L2NvbnRlbnQ6ZW5jb2RlZD4NCgkJCTx3Znc6Y29tbWVudFJzcz5odHRwOi8vd3d3LmZyZW5jaGlwaG9uZS5jb20vMjAxMi8xMi8yNC92aWRlby11bi1tYWdpY2llbi11bi1pcGFkLWV0LWxhLW5vZWwvZmVlZC88L3dmdzpjb21tZW50UnNzPg0KCQk8c2xhc2g6Y29tbWVudHM%MDwvc2xhc2g6Y29tbWVudHM%DQoJCTwvaXRlbT4NCgk8L2NoYW5uZWw%DQo8L3Jzcz4NCg"},{name:"feed2",data:"s149088:PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxyc3MgdmVyc2lvbj0iMi4wIg0KCXhtbG5zOmNvbnRlbnQ9Imh0dHA6Ly9wdXJsLm9yZy9yc3MvMS4wL21vZHVsZXMvY29udGVudC8iDQoJeG1sbnM6d2Z3PSJodHRwOi8vd2VsbGZvcm1lZHdlYi5vcmcvQ29tbWVudEFQSS8iDQoJeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIg0KCXhtbG5zOmF0b209Imh0dHA6Ly93d3cudzMub3JnLzIwMDUvQXRvbSINCgl4bWxuczpzeT0iaHR0cDovL3B1cmwub3JnL3Jzcy8xLjAvbW9kdWxlcy9zeW5kaWNhdGlvbi8iDQoJeG1sbnM6c2xhc2g9Imh0dHA6Ly9wdXJsLm9yZy9yc3MvMS4wL21vZHVsZXMvc2xhc2gvIg0KCT4NCjxjaGFubmVsPg0KCTx0aXRsZT5GckFuZHJvaWQ8L3RpdGxlPg0KCTxhdG9tOmxpbmsgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2ZlZWQ:cG9zdHNfcGVyX3BhZ2U9MTUmIzAzODtwYWdlZD0xIiByZWw9InNlbGYiIHR5cGU9ImFwcGxpY2F0aW9uL3Jzcyt4bWwiIC8%DQoJPGxpbms%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tPC9saW5rPg0KCTxkZXNjcmlwdGlvbj5Db21tdW5hdXTDqSBtb2JpbGUgQW5kcm9pZDwvZGVzY3JpcHRpb24%DQoJPGxhc3RCdWlsZERhdGU%VGh1LCAyNyBEZWMgMjAxMiAxNDoxNjoxNCArMDAwMDwvbGFzdEJ1aWxkRGF0ZT4NCgk8bGFuZ3VhZ2U%ZnItRlI8L2xhbmd1YWdlPg0KCTxzeTp1cGRhdGVQZXJpb2Q%aG91cmx5PC9zeTp1cGRhdGVQZXJpb2Q%DQoJPHN5OnVwZGF0ZUZyZXF1ZW5jeT4xPC9zeTp1cGRhdGVGcmVxdWVuY3k%DQoJPGdlbmVyYXRvcj5odHRwOi8vd29yZHByZXNzLm9yZy8:dj0zLjU8L2dlbmVyYXRvcj4NCgkJPGl0ZW0%DQoJCTx0aXRsZT5MZSBTb255IE9kaW4gc2VyYSBhcHBlbMOpIFhwZXJpYSBYIGV0IHNlcmEgYW5ub25jw6kgYXUgQ0VTPC90aXRsZT4NCgkJPGxpbms%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL21hdGVyaWVscy1hY2Nlc3NvaXJlcy8xMjI2MDBfc29ueS14cGVyaWEteC1vZGluLXNtYXJ0cGhvbmUtYW5kcm9pZC88L2xpbms%DQoJCTxjb21tZW50cz5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vbWF0ZXJpZWxzLWFjY2Vzc29pcmVzLzEyMjYwMF9zb255LXhwZXJpYS14LW9kaW4tc21hcnRwaG9uZS1hbmRyb2lkLyNjb21tZW50czwvY29tbWVudHM%DQoJCTxwdWJEYXRlPlRodSwgMjcgRGVjIDIwMTIgMTQ6MTQ6MDkgKzAwMDA8L3B1YkRhdGU%DQoJCTxkYzpjcmVhdG9yPkVkb3VhcmQgTWFycXVlejwvZGM6Y3JlYXRvcj4NCgkJCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbTWF0w6lyaWVscyAvIEFjY2Vzc29pcmVzXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW0FuZHJvaWRdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbQ0VTIDIwMTNdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbb2Rpbl1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtzbWFydHBob25lXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW3Nvbnkgb2Rpbl1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtTb255IFhwZXJpYSBaXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW3hwZXJpYSB6XV0%PC9jYXRlZ29yeT4NCgkJPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vP3A9MTIyNjAwPC9ndWlkPg0KCQk8ZGVzY3JpcHRpb24%PCFbQ0RBVEFbTGVzIGFubm9uY2VzIGRlIFNvbnkgTW9iaWxlIGF1IENFUyBzb250IGTDqWrDoCBjb25udWVzIMOgIGwmIzgyMTc7YXZhbmNlIDogbGUgU29ueSBYcGVyaWEgWiAoWXVnYSkgZXQgbGUgU29ueSBYcGVyaWEgWCAoT2RpbikuIFNvbnkgRXJpY3Nzb24gbiYjODIxNzthIGphbWFpcyDDqXTDqSB1bmUgZW50cmVwcmlzZSBkb250IGxlIHNlY3JldCDDqXRhaXQgbGUgbWHDrnRyZS1tb3QuIENoZXogU29ueSBNb2JpbGUsIHJpZW4gbmUgc2VtYmxlIGF2b2lyIGNoYW5nw6ksIGNhciBzaSBsJiM4MjE3O2VudHJlcHJpc2UgZG9pdCBmYWlyZSB1bmUgYW5ub25jZSBhdSBDRVMgZGFucyBxdWVscXVlcyBqb3Vycywgbm91cyBjb25uYWlzc29ucyB1bmUgZ3JhbmRlIHBhcnRpZSBkZXMgbm91dmVhdXTDqXMuIElsIHkgYXVyYSB0b3V0IGQmIzgyMTc7YWJvcmQgbGUgWHBlcmlhIFogKEwzNmgvTDM2aS9MMzZhKSBxdWkgc2VyYS4uLiA8YSBjbGFzcz0ibW9yZS1saW5rIiBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vbWF0ZXJpZWxzLWFjY2Vzc29pcmVzLzEyMjYwMF9zb255LXhwZXJpYS14LW9kaW4tc21hcnRwaG9uZS1hbmRyb2lkLyI%TGlyZSBsYSBzdWl0ZS4uLjwvYT5dXT48L2Rlc2NyaXB0aW9uPg0KCQkJCTxjb250ZW50OmVuY29kZWQ%PCFbQ0RBVEFbPHA%TGVzIGFubm9uY2VzIGRlIFNvbnkgTW9iaWxlIGF1IENFUyBzb250IGTDqWrDoCBjb25udWVzIMOgIGwmcnNxdW87YXZhbmNlIDogbGUgU29ueSBYcGVyaWEgWiAoWXVnYSkgZXQgbGUgU29ueSBYcGVyaWEgWCAoT2RpbikuPC9wPg0KPGRpdiBpZD0iYXR0YWNobWVudF8xMjI2MDEiIGNsYXNzPSJ3cC1jYXB0aW9uIGFsaWduY2VudGVyIiBzdHlsZT0id2lkdGg6IDI1NHB4Ij48YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vbWF0ZXJpZWxzLWFjY2Vzc29pcmVzLzEyMjYwMF9zb255LXhwZXJpYS14LW9kaW4tc21hcnRwaG9uZS1hbmRyb2lkL2F0dGFjaG1lbnQveHBlcmlhX29kaW5fcmVuZGVyLTIvIiByZWw9ImF0dGFjaG1lbnQgd3AtYXR0LTEyMjYwMSI%PGltZyBjbGFzcz0ic2l6ZS1mdWxsIHdwLWltYWdlLTEyMjYwMSBjb2xvcmJveC0xMjI2MDAiIGFsdD0iU29ueSBYcGVyaWEgWCIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL1hwZXJpYV9vZGluX3JlbmRlci5qcGVnIiB3aWR0aD0iMjQ0IiBoZWlnaHQ9IjQzMiIgLz48L2E%PHAgY2xhc3M9IndwLWNhcHRpb24tdGV4dCI%VmlzdWVsIHN1cHBvc8OpIGR1IFhwZXJpYSBYIChPZGluKTwvcD48L2Rpdj4NCjxwPlNvbnkgRXJpY3Nzb24gbiZyc3F1bzthIGphbWFpcyDDqXTDqSB1bmUgZW50cmVwcmlzZSBkb250IGxlIHNlY3JldCDDqXRhaXQgbGUgbWHDrnRyZS1tb3QuIENoZXogU29ueSBNb2JpbGUsIHJpZW4gbmUgc2VtYmxlIGF2b2lyIGNoYW5nw6ksIGNhciBzaSBsJnJzcXVvO2VudHJlcHJpc2UgZG9pdCBmYWlyZSB1bmUgYW5ub25jZSBhdSBDRVMgZGFucyBxdWVscXVlcyBqb3Vycywgbm91cyBjb25uYWlzc29ucyB1bmUgZ3JhbmRlIHBhcnRpZSBkZXMgbm91dmVhdXTDqXMuIElsIHkgYXVyYSB0b3V0IGQmcnNxdW87YWJvcmQgbGUgWHBlcmlhIFogKEwzNmgvTDM2aS9MMzZhKSBxdWkgc2VyYSBsZSBub3V2ZWF1IGhhdXQgZGUgZ2FtbWUgYXZlYyBzb24gw6ljcmFuIGRlIDUgcG91Y2VzIDEwODBwIGV0IHNhIHB1Y2UgcXVhZHJ1cGxlLWNvZXVyLiBMYSBjb21tZXJjaWFsaXNhdGlvbiBkZXZyYWl0IMOqdHJlIHRyw6hzIHJhcGlkZSwgY2FyIG9uIHBhcmxlIGRlIG1pLWphbnZpZXIgcG91ciBsYSBDaGluZSBldCBUYcOvd2FuLjwvcD4NCjxwPkFsb3JzIHF1ZSBsZXMgcnVtZXVycyBzZSBzb250IGNvbmNlbnRyw6llcyBzdXIgbGUgWHBlcmlhIFogKFl1Z2EpLCBsJnJzcXVvO09kaW4gcXVpIGF2YWl0IMOpdMOpIGTDqXZvaWzDqSBlbiBwcmVtaWVyIMOpdGFpdCByZXN0w6kgcGx1dMO0dCBkaXNjcmV0LCBtYWlzIHZvaWzDoCBxdSZyc3F1bztpbCByZWZhaXQgc3VyZmFjZS4gU29uIG5vbSBjb21tZXJjaWFsIGRldnJhaXQgw6p0cmUgbGUgPHN0cm9uZz5YcGVyaWEgWCAoTDM1aCk8L3N0cm9uZz4uIFNlcyBjYXJhY3TDqXJpc3RpcXVlcyBkZXZyYWllbnQgw6p0cmUgcXVhc2ktc2ltaWxhaXJlcyBhdmVjIGxlIFhwZXJpYSBaIDogw6ljcmFuIDxzdHJvbmc%SVBTIGRlIDUgcG91Y2U8L3N0cm9uZz5zIGF2ZWMgdW5lIGTDqWZpbml0aW9uIDxzdHJvbmc%RnVsbCBIRCAoMTkyMCB4IDEwODAgcGl4ZWxzKTwvc3Ryb25nPiwgcHJvY2Vzc2V1ciBxdWFkcnVwbGUtY29ldXIgUXVhbGNvbW0gU25hcGRyYWdvbiA8c3Ryb25nPlM0IFBybzwvc3Ryb25nPiwgPHN0cm9uZz4yIEdvIGRlIG3DqW1vaXJlIHZpdmU8L3N0cm9uZz4sIGNhbcOpcmEgZGUgPHN0cm9uZz4xMyBtw6lnYXBpeGVsczwvc3Ryb25nPiBldCBsZWN0ZXVyIGRlIDxzdHJvbmc%Y2FydGUgbWljcm9TRDwvc3Ryb25nPi4gVG91cyBsZXMgZGV1eCBzb250IGTDqWrDoCBzb3VzIDxzdHJvbmc%QW5kcm9pZCA0LjE8L3N0cm9uZz4gKEplbGx5IEJlYW4pLCBjZSBxdWkgZXN0IHBsdXTDtHQgdW5lIGJvbm5lIG5vdXZlbGxlLCBzYWNoYW50IHF1ZSBTb255IG4mcnNxdW87ZXN0IHBhcyBkZXMgcGx1cyByYXBpZGVzIHBvdXIgbWV0dHJlIMOgIGpvdXIuPHNwYW4gaWQ9Im1vcmUtMTIyNjAwIj48L3NwYW4%PC9wPg0KPHA%SWwgc2VtYmxlcmFpdCBxdWUgbCZyc3F1bztvbiBzZSByZXRyb3V2ZSBkYW5zIGxhIG3Dqm1lIHNpdHVhdGlvbiBxdSZyc3F1bzthdSBDRVMgMjAxMiwgYyZyc3F1bztlc3Qtw6AtZGlyZSBxdWUgbGVzIGRldXggdGVybWluYXV4IGFubm9uY8OpcyBzb2llbnQgc2ltaWxhaXJlcy4gQSBsJnJzcXVvO8OpcG9xdWUsIG5vdXMgYXZpb25zIGxlcyBYcGVyaWEgUyBldCBYcGVyaWEgSW9uIHF1aSBzZSBkaWZmw6lyZW5jaWFpZW50IHBhciBsYSBjb25uZWN0aXZpdMOpIChMVEUgcG91ciBsZSBJb24gZGFucyB1biBwcmVtaWVyIHRlbXBzKSBldCBsYSB0YWlsbGUgZGUgbCZyc3F1bzvDqWNyYW4gKDQsMyBwb3VjZXMgY29udHJlIDQsNiBwb3VjZXMpLjwvcD4NCjxwPkNldHRlIGFubsOpZSwgbm91cyBzYXZvbnMgcXVlIGxlIFhwZXJpYSBaIGVzdCByw6lzaXN0YW50IMOgIGwmcnNxdW87ZWF1LCBhdXggcG91c3Npw6hyZXMgZXQgYXV4IHJheXVyZXMsIHRhbmRpcyBxdWUgbGUgWHBlcmlhIFggbmUgYsOpbsOpZmljaWVyYSBwYXMgZCZyc3F1bzt1biB0ZWwgdHJhaXRlbWVudCBkZSBmYXZldXIuIExlcyBkZXNpZ25zIGRldnJhaWVudCDDqnRyZSBkaWZmw6lyZW50cyA6IGxlIFhwZXJpYSBaIGEgdW4gZG9zIGVuIHZlcnJlLCBtYWlzIGxlIFhwZXJpYSBYIGRldnJhaXQgw6p0cmUgcGx1cyBjbGFzc2lxdWUgZGFucyBsZSBkb21haW5lLjwvcD4NCjxwPlBvdXIgbCZyc3F1bztpbnN0YW50LCBpbCBlc3QgdW4gcGV1IGRpZmZpY2lsZSBkZSB2b2lyIGNsYWlyIGRhbnMgbGUgamV1IGRlIFNvbnkgTW9iaWxlLCBtYWlzIGxlIFhwZXJpYSBaIChZdWdhKSBlc3QgbGUgbW9kw6hsZSBwaGFyZSBkZSBsYSBtYXJxdWUgZW4gZMOpYnV0IGQmcnNxdW87YW5uw6llLjwvcD4NCjxwPjxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9tYXRlcmllbHMtYWNjZXNzb2lyZXMvMTIyNjAwX3NvbnkteHBlcmlhLXgtb2Rpbi1zbWFydHBob25lLWFuZHJvaWQvYXR0YWNobWVudC9oaWNob25nXzFfMTAyX2Q4MDA1MjgyZDU4YWM4MmIwZmIyN2I2MWJlMGE1M2MyLyIgcmVsPSJhdHRhY2htZW50IHdwLWF0dC0xMjI2MTMiPjxpbWcgY2xhc3M9ImFsaWduY2VudGVyIHNpemUtZnVsbCB3cC1pbWFnZS0xMjI2MTMgY29sb3Jib3gtMTIyNjAwIiBhbHQ9ImhpY2hvbmdfMV8xMDJfZDgwMDUyODJkNThhYzgyYjBmYjI3YjYxYmUwYTUzYzIiIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9oaWNob25nXzFfMTAyX2Q4MDA1MjgyZDU4YWM4MmIwZmIyN2I2MWJlMGE1M2MyLmpwZyIgd2lkdGg9IjYwNiIgaGVpZ2h0PSIzNjMiIC8%PC9hPjwvcD4NCjxwPjxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwOi8vd3d3LmVwcmljZS5jb20uY24vbW9iaWxlL3RhbGsvMTAyLzQ1MDcxNjUiIHRhcmdldD0iX2JsYW5rIj5Tb3VyY2U8L2E%PC9wPg0KXV0%PC9jb250ZW50OmVuY29kZWQ%DQoJCQk8d2Z3OmNvbW1lbnRSc3M%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL21hdGVyaWVscy1hY2Nlc3NvaXJlcy8xMjI2MDBfc29ueS14cGVyaWEteC1vZGluLXNtYXJ0cGhvbmUtYW5kcm9pZC9mZWVkLzwvd2Z3OmNvbW1lbnRSc3M%DQoJCTxzbGFzaDpjb21tZW50cz4yMDwvc2xhc2g6Y29tbWVudHM%DQoJCTwvaXRlbT4NCgkJPGl0ZW0%DQoJCTx0aXRsZT5VbmUgdmlkw6lvIGNvbmNlcHQgcG91ciBsZSBTYW1zdW5nIEdhbGF4eSBTIElWPC90aXRsZT4NCgkJPGxpbms%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMjU5Nl91bmUtdmlkZW8tY29uY2VwdC1wb3VyLWxlLXNhbXN1bmctZ2FsYXh5LXMtaXYvPC9saW5rPg0KCQk8Y29tbWVudHM%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMjU5Nl91bmUtdmlkZW8tY29uY2VwdC1wb3VyLWxlLXNhbXN1bmctZ2FsYXh5LXMtaXYvI2NvbW1lbnRzPC9jb21tZW50cz4NCgkJPHB1YkRhdGU%VGh1LCAyNyBEZWMgMjAxMiAxMzo1NDowOCArMDAwMDwvcHViRGF0ZT4NCgkJPGRjOmNyZWF0b3I%RGFsYXZhcmE8L2RjOmNyZWF0b3I%DQoJCQkJPGNhdGVnb3J5PjwhW0NEQVRBW0FjdHVhbGl0w6lzIEfDqW7DqXJhbGVzXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW1J1bWV1cnNdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbR2FsYXh5IFNdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbR2FsYXh5IFM0XV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW3J1bWV1cnMgZ2FsYXh5IFMgSVZdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbcnVtZXVycyBzYW1zdW5nXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW3J1bWV1cnMgc2Ftc3VuZyBnYWxheHldXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbc2Ftc3VuZ11dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtTYW1zdW5nIEdhbGF4eSBTIElWXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW3ZpZMOpbyBnYWxheHkgUzRdXT48L2NhdGVnb3J5Pg0KCQk8Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS8:cD0xMjI1OTY8L2d1aWQ%DQoJCTxkZXNjcmlwdGlvbj48IVtDREFUQVtTJiM4MjE3O2lsIHkgYSBiaWVuIHVuIHNpZ25lIHF1aSBtb250cmUgcXUmIzgyMTc7dW4gdMOpbMOpcGhvbmUgZXN0IGRldmVudWUgdW5lIGljw7RuZSwgYyYjODIxNztlc3QgcXVhbmQgbGVzIHNww6ljdWxhdGlvbnMgc3VyIHNvbiDDqXZvbHV0aW9uIGZ1dHVyZSBwYXJ0ZW50IGRhbnMgdG91cyBsZXMgc2VucyBldCBxdWUgZGUgc29tYnJlcyBmb3VzIGZvbnQgZGVzIHZpZMOpb3MgcG91ciBlc3NheWVyIGRlIHJhc3NlbWJsZXIgdG91dGVzIGxlcyBydW1ldXJzLCBlbiBsdWkgZG9ubmFudCB1bmUgYWxsdXJlIGNyw6lkaWJsZS4gU2kganVzcXUmIzgyMTc7w6AgbWFpbnRlbmFudCwgYyYjODIxNzvDqXRhaXQgbCYjODIxNztpUGhvbmUgcXVpIMOpdGFpdCBsZSBwbHVzIHByb3BpY2Ugw6AgY2UgZ2VucmUgZGUgc3DDqWN1bGF0aW9ucywgbCYjODIxNzthbm7DqWUgMjAxMiBhdXJhIHZ1IHBhc3NlciBTYW1zdW5nIGF1IGRlc3N1cyBkJiM4MjE3O0FwcGxlIGdyw6JjZSDDoCBzb24uLi4gPGEgY2xhc3M9Im1vcmUtbGluayIgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMjU5Nl91bmUtdmlkZW8tY29uY2VwdC1wb3VyLWxlLXNhbXN1bmctZ2FsYXh5LXMtaXYvIj5MaXJlIGxhIHN1aXRlLi4uPC9hPl1dPjwvZGVzY3JpcHRpb24%DQoJCQkJPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD5TJnJzcXVvO2lsIHkgYSBiaWVuIHVuIHNpZ25lIHF1aSBtb250cmUgcXUmcnNxdW87dW4gdMOpbMOpcGhvbmUgZXN0IGRldmVudWUgdW5lIGljw7RuZSwgYyZyc3F1bztlc3QgcXVhbmQgbGVzIHNww6ljdWxhdGlvbnMgc3VyIHNvbiDDqXZvbHV0aW9uIGZ1dHVyZSBwYXJ0ZW50IGRhbnMgdG91cyBsZXMgc2VucyBldCBxdWUgZGUgc29tYnJlcyBmb3VzIGZvbnQgZGVzIHZpZMOpb3MgcG91ciBlc3NheWVyIGRlIHJhc3NlbWJsZXIgdG91dGVzIGxlcyBydW1ldXJzLCBlbiBsdWkgZG9ubmFudCB1bmUgYWxsdXJlIGNyw6lkaWJsZS4gU2kganVzcXUmcnNxdW87w6AgbWFpbnRlbmFudCwgYyZyc3F1bzvDqXRhaXQgbCZyc3F1bztpUGhvbmUgcXVpIMOpdGFpdCBsZSBwbHVzIHByb3BpY2Ugw6AgY2UgZ2VucmUgZGUgc3DDqWN1bGF0aW9ucywgbCZyc3F1bzthbm7DqWUgMjAxMiBhdXJhIHZ1IHBhc3NlciBTYW1zdW5nIGF1IGRlc3N1cyBkJnJzcXVvO0FwcGxlIGdyw6JjZSDDoCBzb24gU2Ftc3VuZyBHYWxheHkgUyBJSUksIGRlIGxvaW4gbCZyc3F1bztpUGhvbmUgS2lsbGVyIGxlIHBsdXMgdmVuZHUuPC9wPg0KPHA%PGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMjU5Nl91bmUtdmlkZW8tY29uY2VwdC1wb3VyLWxlLXNhbXN1bmctZ2FsYXh5LXMtaXYvYXR0YWNobWVudC9jYXB0dXJlLTExLyIgcmVsPSJhdHRhY2htZW50IHdwLWF0dC0xMjI2MDkiPjxpbWcgY2xhc3M9ImFsaWduY2VudGVyIHNpemUtZnVsbCB3cC1pbWFnZS0xMjI2MDkgY29sb3Jib3gtMTIyNTk2IiBhbHQ9IlNhbXN1bmcgR2FsYXh5IFMgSVYiIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9DYXB0dXJlLmpwZyIgd2lkdGg9IjYzNCIgaGVpZ2h0PSIzNDgiIC8%PC9hPjwvcD4NCjxwPk3Dqm1lIHNpIGxlIFMzIG4mcnNxdW87ZXN0IHBhcyBleGVtcHQgZGUgZMOpZmF1dHMgIC0gb24gcGV1dCBub3RhbW1lbnQgY2l0ZXIgbGUgcHJvYmzDqG1lIHLDqWNlbnQ8YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTIyNTIzX2dhbGF4eS1zMy1uZS1kZW1hcnJlLXBsdXMvIj4gZGUgbW9ydCBzdWJpdGUgYXByw6hzIDIwMCBqb3VyczwvYT4sIGlsIGVzdCBlbiB0b3V0IGNhcyBjZWx1aSBxdWkgZmFpdCBsZSBwbHVzIHBhcmxlciAobcOqbWUgc2kgbGUgTmV4dXMgNCBhdXJhaXQgdGVuZGFuY2Ugw6AgbHVpIHRhaWxsZXIgZGVzIGNyb3VwacOocmVzKS4gUGFzIMOpdG9ubmFudCBxdWUgbiZyc3F1bztpbXBvcnRlIHF1ZWxsZSBydW1ldXIgc3VyIGxlIHByb2NoYWluIEdhbGF4eSBTIGZhc3NlIGxlIHRvdXIgZGUgbGEgdG9pbGUgZW4gdW4gcmllbiBkZSB0ZW1wcywgcXVpdHRlIG3Dqm1lIMOgIGTDqXBhc3NlciBsZSBtYcOudHJlIGludsOpdMOpcsOpIGRlIGNldHRlIGNhdMOpZ29yaWUgcXUmcnNxdW87w6l0YWl0IGp1c3F1JnJzcXVvO8OgIG1haW50ZW5hbnQgbCZyc3F1bztpUGhvbmUgNS48L3A%DQo8cD5BcHLDqHMgbGEgZGF0ZSAoPGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL3J1bWV1cnMvMTE5OTM2X3NhbXN1bmctZ2FsYXh5LXM0LWRlYmFycXVlbWVudC1lbi1hdnJpbC0yMDEzLyI%w6AgcHJpb3JpIHBsdXTDtHQgYXZyaWwtbWFpPC9hPikgZXQgbGVzIHJ1bWV1cnMgcGV1IHLDqWFsaXN0ZXMgZW4gbCZyc3F1bzvDqXRhdCBkJnJzcXVvO3VuIMOpY3JhbiBmbGV4aWJsZSwgdm9pY2kgdW4gYXV0cmUgZXhlbXBsZSBkJnJzcXVvO3VuIGJ1enogcsOpdXNzaSA6IGxhIHZpZMOpbyBkdSBjb25jZXB0IGR1IHByb2R1aXQuPHNwYW4gaWQ9Im1vcmUtMTIyNTk2Ij48L3NwYW4%PGJyIC8%DQo8aWZyYW1lIHdpZHRoPSI1NjAiIGhlaWdodD0iMzE1IiBzcmM9Imh0dHA6Ly93d3cueW91dHViZS5jb20vZW1iZWQvcDVZUGFCa2hLWkkiIGZyYW1lYm9yZGVyPSIwIiBhbGxvd2Z1bGxzY3JlZW4%PC9pZnJhbWU%DQo8cCBzdHlsZT0ndGV4dC1hbGlnbjogY2VudGVyJz48aT48YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cDovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PXA1WVBhQmtoS1pJIiB0YXJnZXQ9Il9uZXd0YWIiPkxpZW4gWW91dHViZTwvYT48L2k%PC9wPg0KPHA%RGFucyBjZXR0ZSB2aWTDqW8gc29udCBkb25jIHLDqXN1bcOpZXMgbGVzIHByaW5jaXBhbGVzIGNhcmFjdMOpcmlzdGlxdWVzIHN1cHBvc8OpZXMgZXQgLyBvdSByw6p2w6llcyBkZSBsJnJzcXVvO2FwcGFyZWlsIDo8L3A%DQo8dWw%DQo8bGk%RWNyYW4gMTA4MHAgQU1PTEVEPC9saT4NCjxsaT5DYW3DqXJhIGRlIDEzIG3DqWdhcGl4ZWxzPC9saT4NCjxsaT5Qcm9jZXNzZXVyIHF1YWRydXBsZS1jb2V1ciBTYW1zdW5nIEV4eW5vcyBjYWRlbmPDqSDDoCAyLjBHSHo8L2xpPg0KPGxpPkFuZHJvaWQgNS4wIEtleSBMaW1lIFBpZTwvbGk%DQo8bGk%cGx1cyBmaW4gcXVlIGxlIEdhbGF4eSBTMyBldCBsJnJzcXVvO2lQaG9uZSA1PC9saT4NCjxsaT51biBkb2NrIHBlcm1ldHRhbnQgZGUgcHJvamV0ZXIgdW4gY2xhdmllciBlbiBsYXNlciBpbnTDqWdyw6k8L2xpPg0KPC91bD4NCjxwPlNpIGwmcnNxdW87w6ljcmFuIEFNT0xFRCBldCAxMDgwcCBzZW1ibGUgYWNxdWlzIGV0IGxhIGNhbcOpcmEgMTMgbcOpZ2FwaXhlbCBwbHVzIHF1ZSBwbGF1c2libGVzLCBsZXMgYXV0cmVzIGNhcmFjdMOpcmlzdGlxdWVzIHNvbnQgcGx1cyBmYW50YWlzaXN0ZXMuIExlIHByb2Nlc3NldXIgc2VyYSBjZXJ0YWluZW1lbnQgdW4gcHJvY2Vzc2V1ciBtYWlzb24gKFNhbXN1bmcgRXh5bm9zKSBldCBwb3NzaWJsZW1lbnQgdW4gcHJvY2Vzc2V1ciBxdWFkLWNvcmUsIHJlc3RlIMOgIHZvaXIgc2kgY2Ugc2VyYSB1biBwcm9jZXNzZXVyIGNhZGVuY8OpIMOgIDIgR0h6LiBQYXJlaWwgcG91ciBsYSB2ZXJzaW9uIGQmcnNxdW87QW5kcm9pZCwgc2kgbGEgc29ydGllIGR1IHByb2R1aXQgZXN0IHByw6l2dWUgcG91ciBhdnJpbC1tYWksIGlsIHNlbWJsZSBwZXUgcHJvYmFibGUgcXVlIGNlIHNvaXQgQW5kcm9pZCA1LjAgw6AgbCZyc3F1bztpbnTDqXJpZXVyLCBLZXkgTGltZSBQaWUgbmUgZGV2YW50IMOgIHByaW9yaSBzb3J0aXIgcXVlIGR1cmFudCBsYSBHb29nbGUgSS9PIGVuIG1haSBwcm9jaGFpbiwgdm9pcmUgdW4gcGV1IHBsdXMgdGFyZC48L3A%DQo8cD5SZXN0ZSBkZXV4IMOpbMOpbWVudHMgw6Agb2JzZXJ2ZXIgbWFpbnRlbmFudCA6IGxhIGZpbmVzc2UgZXQgbGUgZG9jayBsYXNlci4gQSBwcm9wb3MgZGUgbGEgZmluZXNzZSwgamUgcGVuc2UgcXUmcnNxdW87b24gZXN0IGFycml2w6kgZW4gMjAxMiBhdSBzZXVpbCBtYXhpbXVtIGV0IGlsIHNlcmEgZGlmZmljaWxlLCBldCBwYXMgZm9yY8OpbWVudCBzb3VoYWl0YWJsZSwgZCZyc3F1bzthbGxlciBlbiBkZXNzb3VzIGRlcyA4IG1tIGQmcnNxdW87w6lwYWlzc2V1ci4gRGlmZmljaWxlIGNhciDDoCB1biBtb21lbnQsIG9uIGVzdCBsaW1pdMOpIHBhciBjZXJ0YWlucyDDqWzDqW1lbnRzIHBoeXNpcXVlcyBxdSZyc3F1bztvbiBuZSBwZXV0IHBhcyByw6lkdWlyZSBjb21tZSBsZSBkaWFtw6h0cmUgZGUgbGEgcHJpc2UgamFjayBvdSBkdSBtaWNyby11c2IgZXQgcGFzIHNvdWhhaXRhYmxlLCBjYXIgcXVpIGRpdCBwbHVzIGZpbiwgZGl0IGF1c3NpIHNvdXZlbnQgcGx1cyBmcmFnaWxlIG91IHBhcyBmb3Jjw6ltZW50IHByYXRpcXVlIMOgIHV0aWxpc2VyLiBPbiBwZXV0IGF1c3NpIHNlIGRlbWFuZGVyIHF1ZWwgZXN0IGwmcnNxdW87aW50w6lyw6p0IGRlIGZhaXJlIGxlIHTDqWzDqXBob25lIGxlIHBsdXMgZmluIGF1IG1vbmRlLCBhbG9ycyBxdSZyc3F1bztpbCBwb3VycmFpdCDDqnRyZSB1biBwZXRpdCBwZXUgcGx1cyDDqXBhaXMgZW4gbWV0dGFudCB1bmUgYmF0dGVyaWUgZCZyc3F1bzt1bmUgcGx1cyBncmFuZGUgY2FwYWNpdMOpLiBBIGNob2lzaXIgZW50cmUgdW5lIGZpbmVzc2UgZXhhZ8OpcsOpZSBvdSB1bmUgYmF0dGVyaWUgdW4gcGV1IG1laWxsZXVyZSwgamUgY2hvaXNpcyBzYW5zIGjDqXNpdGVyIGxhIG1laWxsZXVyZSBiYXR0ZXJpZS48L3A%DQo8cD48YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cDovL3d3dy5waG9uZWFyZW5hLmNvbS9uZXdzL1NhbXN1bmctR2FsYXh5LVMtSVYtY29uY2VwdC1kcm9vbHMtb24tdGhlLXBvc3NpYmlsaXRpZXMtb2YtdGhlLW5leHQtYmlnLXRoaW5nX2lkMzgwOTkiPlNvdXJjZTwvYT48L3A%DQo8cD4mbmJzcDs8L3A%DQpdXT48L2NvbnRlbnQ6ZW5jb2RlZD4NCgkJCTx3Znc6Y29tbWVudFJzcz5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTIyNTk2X3VuZS12aWRlby1jb25jZXB0LXBvdXItbGUtc2Ftc3VuZy1nYWxheHktcy1pdi9mZWVkLzwvd2Z3OmNvbW1lbnRSc3M%DQoJCTxzbGFzaDpjb21tZW50cz4yNDwvc2xhc2g6Y29tbWVudHM%DQoJCTwvaXRlbT4NCgkJPGl0ZW0%DQoJCTx0aXRsZT5HYWxheHkgTm90ZSA6IFNhbXN1bmcgY29uZmlybWUgcXVlIGxhIFByZW1pdW0gU3VpdGUgY29tcG9ydGVyYSBsZSBtdWx0aS1mZW7DqnRyZXM8L3RpdGxlPg0KCQk8bGluaz5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTIyNTkxX2dhbGF4eS1ub3RlLXByZW1pdW0tc3VpdGUvPC9saW5rPg0KCQk8Y29tbWVudHM%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMjU5MV9nYWxheHktbm90ZS1wcmVtaXVtLXN1aXRlLyNjb21tZW50czwvY29tbWVudHM%DQoJCTxwdWJEYXRlPlRodSwgMjcgRGVjIDIwMTIgMTM6MTA6MTggKzAwMDA8L3B1YkRhdGU%DQoJCTxkYzpjcmVhdG9yPkVkb3VhcmQgTWFycXVlejwvZGM6Y3JlYXRvcj4NCgkJCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbQWN0dWFsaXTDqXMgR8OpbsOpcmFsZXNdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbTWlzZXMgw6Agam91ciBBbmRyb2lkXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW0FuZHJvaWRdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbZWFzeSBjbGlwXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW2dhbGF4eSBub3RlXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW2dvb2dsZSBub3ddXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbamVsbHkgYmVhbl1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtwYXBlciBhcnRpc3RdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbcGhvdG8gZnJhbWVdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbcGhvdG8gbm90ZV1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtwb3B1cCBub3RlXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW3ByZW1pdW0gc3VpdGVdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbcyBjYWxlbmRyaWVyXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW3Mgbm90ZV1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtzIHBsYW5uZXJdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbc2Ftc3VuZ11dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtzYW1zdW5nIGdhbGF4eSBub3RlXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW3NtYXJ0cGhvbmVdXT48L2NhdGVnb3J5Pg0KCQk8Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS8:cD0xMjI1OTE8L2d1aWQ%DQoJCTxkZXNjcmlwdGlvbj48IVtDREFUQVtQb3VyIHJhcHBlbCwgbGEgbWlzZSDDoCBqb3VyIHF1aSBkZXZhaXQgaW5pdGlhbGVtZW50IMOqdHJlIGRpc3BvbmlibGUgYXUgbW9pcyBkZSBkw6ljZW1icmUgYSDDqXTDqSByZXBvdXNzw6llIGF1IG1vaXMgcHJvY2hhaW4uIEJlYXVjb3VwIGRlIGNvbnN0cnVjdGV1cnMgbsOpZ2xpZ2VudCBhdWpvdXJkJiM4MjE3O2h1aSBsYSBtaXNlIMOgIGpvdXIgZGUgbGV1cnMgdGVybWluYXV4LCBhbG9ycyBxdSYjODIxNztpbCBzJiM4MjE3O2FnaXQgcG91cnRhbnQgZCYjODIxNzt1biDDqWzDqW1lbnQgY2zDqSBwZXJtZXR0YW50IGRlIGZpZMOpbGlzZXIgbGVzIGNsaWVudHMuIFNhbXN1bmcgYSBiaWVuIGNvbXByaXMgbGEgZMOpbWFyY2hlLCBtw6ptZSBzaSBsZSBjb3LDqWVuIGEgcGFyZm9pcyBkZXMgZGlmZmljdWx0w6lzIMOgIHJlc3BlY3RlciBzZXMgZMOpbGFpcy4gTMOgIG:DuSBkZXMgTEcsIFNvbnkgZXQgYmllbiBkJiM4MjE3O2F1dHJlcyBjb25zdHJ1Y3RldXJzIG91YmxpZW50IHJhcGlkZW1lbnQgbGV1cnMuLi4gPGEgY2xhc3M9Im1vcmUtbGluayIgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMjU5MV9nYWxheHktbm90ZS1wcmVtaXVtLXN1aXRlLyI%TGlyZSBsYSBzdWl0ZS4uLjwvYT5dXT48L2Rlc2NyaXB0aW9uPg0KCQkJCTxjb250ZW50OmVuY29kZWQ%PCFbQ0RBVEFbPHA%PHN0cm9uZz5Qb3VyIHJhcHBlbCwgbGEgbWlzZSDDoCBqb3VyIHF1aSBkZXZhaXQgaW5pdGlhbGVtZW50IMOqdHJlIGRpc3BvbmlibGUgYXUgbW9pcyBkZSBkw6ljZW1icmUgYSDDqXTDqSByZXBvdXNzw6llIGF1IG1vaXMgcHJvY2hhaW4uPC9zdHJvbmc%PC9wPg0KPHA%PGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMjU5MV9nYWxheHktbm90ZS1wcmVtaXVtLXN1aXRlL2F0dGFjaG1lbnQvZ2FsYXh5LW5vdGUtcHJlbWl1bS1zdWl0ZS0yLyIgcmVsPSJhdHRhY2htZW50IHdwLWF0dC0xMjI1OTIiPjxpbWcgY2xhc3M9ImFsaWduY2VudGVyIHNpemUtZnVsbCB3cC1pbWFnZS0xMjI1OTIgY29sb3Jib3gtMTIyNTkxIiBhbHQ9IkdhbGF4eS1Ob3RlLVByZW1pdW0tU3VpdGUiIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9HYWxheHktTm90ZS1QcmVtaXVtLVN1aXRlLmpwZyIgd2lkdGg9IjI0NCIgaGVpZ2h0PSIzOTQiIC8%PC9hPjwvcD4NCjxwPkJlYXVjb3VwIGRlIGNvbnN0cnVjdGV1cnMgbsOpZ2xpZ2VudCBhdWpvdXJkJnJzcXVvO2h1aSBsYSBtaXNlIMOgIGpvdXIgZGUgbGV1cnMgdGVybWluYXV4LCBhbG9ycyBxdSZyc3F1bztpbCBzJnJzcXVvO2FnaXQgcG91cnRhbnQgZCZyc3F1bzt1biDDqWzDqW1lbnQgY2zDqSBwZXJtZXR0YW50IGRlIGZpZMOpbGlzZXIgbGVzIGNsaWVudHMuIFNhbXN1bmcgYSBiaWVuIGNvbXByaXMgbGEgZMOpbWFyY2hlLCBtw6ptZSBzaSBsZSBjb3LDqWVuIGEgcGFyZm9pcyBkZXMgZGlmZmljdWx0w6lzIMOgIHJlc3BlY3RlciBzZXMgZMOpbGFpcy4gTMOgIG:DuSBkZXMgTEcsIFNvbnkgZXQgYmllbiBkJnJzcXVvO2F1dHJlcyBjb25zdHJ1Y3RldXJzIG91YmxpZW50IHJhcGlkZW1lbnQgbGV1cnMgdGVybWluYXV4LCB5IGNvbXByaXMgbGVzIGhhdXRzIGRlIGdhbW1lIGRlIGwmcnNxdW87YW5uw6llIHBhc3PDqWUsIFNhbXN1bmcgZXN0IGJlYXVjb3VwIHBsdXMgcmVzcGVjdHVldXguPC9wPg0KPHA%QyZyc3F1bztlc3QgYWluc2kgcXVlIGxlIHByZW1pZXIgR2FsYXh5IE5vdGUgdmEgcmVjZXZvaXIgc2EgbWlzZSDDoCBqb3VyIHZlcnMgQW5kcm9pZCA0LjEgKEplbGx5IEJlYW4pLiBDb21tZSBsZSBjb3LDqWVuIGVuIGEgcHJpcyBsJnJzcXVvO2hhYml0dWRlLCBpbCBuZSBzZSBjb250ZW50ZSBwYXMgZGVzIGFqb3V0cyBkZSBHb29nbGUgKFByb2plY3QgQnV0dGVyLCBub3RpZmljYXRpb25zIGFtw6lsaW9yw6llcywgR29vZ2xlIE5vdywgcmVjb25uYWlzc2FuY2Ugdm9jYWxlIGhvcnMgbGlnbmUmIzgyMzA7KSwgZW4gcHJvcG9zYW50IGxhIFByZW1pdW0gU3VpdGUuIFBvdXIgbGUgR2FsYXh5IE5vdGUsIGxhIHF1YXNpLXRvdGFsaXTDqSBkZXMgbm91dmVhdXTDqXMgaW50cm9kdWl0ZXMgc3VyIGxlIEdhbGF4eSBOb3RlIElJIHZvbnQgw6p0cmUgaW50w6lncsOpZXMuPHNwYW4gaWQ9Im1vcmUtMTIyNTkxIj48L3NwYW4%PC9wPg0KPHA%PGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMjU5MV9nYWxheHktbm90ZS1wcmVtaXVtLXN1aXRlL2F0dGFjaG1lbnQvaW1nX2JlbmNvbjIyLyIgcmVsPSJhdHRhY2htZW50IHdwLWF0dC0xMjI1OTMiPjxpbWcgY2xhc3M9ImFsaWduY2VudGVyIHNpemUtbWVkaXVtIHdwLWltYWdlLTEyMjU5MyBjb2xvcmJveC0xMjI1OTEiIGFsdD0iaW1nX2JlbmNvbjIyIiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvaW1nX2JlbmNvbjIyLTYzMHgzNDIuanBnIiB3aWR0aD0iNjMwIiBoZWlnaHQ9IjM0MiIgLz48L2E%PC9wPg0KPHA%PGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHA6Ly93d3cuc2Ftc3VuZy5jb20vZ2xvYmFsL21pY3Jvc2l0ZS9nYWxheHlub3RlL25vdGUvYmVuZWZpdC5odG1sP3R5cGU9ZmluZCIgdGFyZ2V0PSJfYmxhbmsiPlN1ciBsZSBzaXRlIG9mZmljaWVsIGR1IHRlcm1pbmFsPC9hPiwgb24gcGV1dCBhaW5zaSB2b2lyIGxlcyBmb25jdGlvbm5hbGl0w6lzIHF1aSBzZXJvbnQgcHJvcG9zw6llcyA6PC9wPg0KPHVsPg0KPGxpPkxlIG11bHRpLWZlbsOqdHJlIDogYWZmaWNoZXIgZGV1eCBhcHBsaWNhdGlvbnMgw6AgbGEgZm9pcyBzdXIgbCZyc3F1bzvDqWNyYW48L2xpPg0KPGxpPlBvcHVwIE5vdGUgOiDDqWNyaXJlIGF2ZWMgbGUgc3R5bGV0IGRhbnMgdW5lIFBvcHVwLCBzYW5zIGF2b2lyIGJlc29pbiBkZSBsYW5jZXIgU05vdGU8L2xpPg0KPGxpPlBvcHVwIFZpZGVvPC9saT4NCjxsaT5OYXZpZ2F0ZXVyIGNvbnRleHR1ZWwgKFBvcHVwIEJyb3dzZXIpPC9saT4NCjxsaT5QaG90byBOb3RlIC8gUGhvdG8gZnJhbWUgOiBhbm5vdGVyIGRlcyBwaG90b3MgKGRldmFudCBvdSBkZXJyacOocmUpPC9saT4NCjxsaT5FYXN5IENsaXAgOiBkw6ljb3VwZXIgdW5lIGltYWdlIGF2ZWMgbGUgc3R5bGV0IG91IHPDqWxlY3Rpb25uZXIgZHUgdGV4dGUgZW4gZGVzc2luYW50IHVuZSBsaWduZTwvbGk%DQo8bGk%UGFwZXIgQXJ0aXN0IDogdW5lIGFwcGxpY2F0aW9uIHBvdXIgYWpvdXRlciBkaXZlcnMgZWZmZXRzIHN1ciBsZXMgcGhvdG9zPC9saT4NCjxsaT5FY3JpdHVyZSBtYW51c2NyaXRlIHN1ciBTIENhbGVuZHJpZXIgZXQgRW1haWw8L2xpPg0KPGxpPlMgTm90ZSBhbcOpbGlvcsOpPC9saT4NCjwvdWw%DQo8cD5BbG9ycyBxdWUgbGEgbWlzZSDDoCBqb3VyIGRlIEdpbmdlcmJyZWFkIHZlcnMgSWNlIENyZWFtIFNhbmR3aWNoIGF2YWl0IHBvc8OpIGJlYXVjb3VwIGRlIHByb2Jsw6htZXMgYXV4IHV0aWxpc2F0ZXVycyBmcmFuw6dhaXMsIG5vdXMgZXNww6lyb25zIHF1ZSBjZXR0ZSBmb2lzIFNhbXN1bmcgdmEgZmFpcmUgbGUgbsOpY2Vzc2FpcmUgcG91ciBvZmZyaXIgdW5lIG1pc2Ugw6Agam91ciDDoCBsYSBoYXV0ZXVyIGR1IHRlcm1pbmFsLjwvcD4NCjxwPjxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjI1OTFfZ2FsYXh5LW5vdGUtcHJlbWl1bS1zdWl0ZS9hdHRhY2htZW50L2ltZ19iZW5jb24yMy8iIHJlbD0iYXR0YWNobWVudCB3cC1hdHQtMTIyNTk0Ij48aW1nIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLWZ1bGwgd3AtaW1hZ2UtMTIyNTk0IGNvbG9yYm94LTEyMjU5MSIgYWx0PSJpbWdfYmVuY29uMjMiIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9pbWdfYmVuY29uMjMuanBnIiB3aWR0aD0iNTIxIiBoZWlnaHQ9IjM5MSIgLz48L2E%PC9wPg0KXV0%PC9jb250ZW50OmVuY29kZWQ%DQoJCQk8d2Z3OmNvbW1lbnRSc3M%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMjU5MV9nYWxheHktbm90ZS1wcmVtaXVtLXN1aXRlL2ZlZWQvPC93Znc6Y29tbWVudFJzcz4NCgkJPHNsYXNoOmNvbW1lbnRzPjIyPC9zbGFzaDpjb21tZW50cz4NCgkJPC9pdGVtPg0KCQk8aXRlbT4NCgkJPHRpdGxlPkdvb2dsZSBNdXNpYyAmIzE3MTsmIzE2MDtTY2FuICZhbXA7IE1hdGNoJiMxNjA7JiMxODc7IGNlbnN1cmUgbGVzIHBhcm9sZXMgZXhwbGljaXRlcyBhdXggRXRhdHMtVW5pczwvdGl0bGU%DQoJCTxsaW5rPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjI1NzBfZ29vZ2xlLW11c2ljLW1hdGNoLWNlbnN1cmUtcGFyb2xlcy88L2xpbms%DQoJCTxjb21tZW50cz5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTIyNTcwX2dvb2dsZS1tdXNpYy1tYXRjaC1jZW5zdXJlLXBhcm9sZXMvI2NvbW1lbnRzPC9jb21tZW50cz4NCgkJPHB1YkRhdGU%VGh1LCAyNyBEZWMgMjAxMiAwNzozMDowMyArMDAwMDwvcHViRGF0ZT4NCgkJPGRjOmNyZWF0b3I%U2FteTwvZGM6Y3JlYXRvcj4NCgkJCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbQWN0dWFsaXTDqXMgR8OpbsOpcmFsZXNdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbR29vZ2xlIFBsYXldXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbY2Vuc3VyZV1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtnb29nbGUgbXVzaWNdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbZ29vZ2xlIHBsYXldXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbTXVzaXF1ZV1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtwYXJvbGVzIGV4cGxpY2l0ZXNdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbc2NhbiAmIG1hdGNoXV0%PC9jYXRlZ29yeT4NCgkJPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vP3A9MTIyNTcwPC9ndWlkPg0KCQk8ZGVzY3JpcHRpb24%PCFbQ0RBVEFbTm91cyB2b3VzIGwmIzgyMTc7YW5ub25jaW9ucyBsYSBzZW1haW5lIGRlcm5pw6hyZSA6IGFwcsOocyBsJiM4MjE3O0V1cm9wZSwgbGEgZm9uY3Rpb25uYWxpdMOpIFNjYW4gJiMzODsgTWF0Y2ggZGUgcmVjb25uYWlzc2FuY2UgZGUgbW9yY2VhdXggbXVzaWNhdXggZGUgR29vZ2xlIE11c2ljIHZpZW50IHRvdXQganVzdGUgZCYjODIxNzvDqnRyZSBtaXNlIGVuIHNlcnZpY2UgYXV4IEV0YXRzLVVuaXMuIENldHRlIGZvbmN0aW9ubmFsaXTDqSBiaWVuIHByYXRpcXVlIHBlcm1ldCBkZSBzJiM4MjE3O2FmZnJhbmNoaXIgZGUgbCYjODIxNzt1cGxvYWQgZmFzdGlkaWV1eCBkZXMgbW9yY2VhdXggZGUgbXVzaXF1ZSBkZSBzYSBiaWJsaW90aMOocXVlIHZlcnMgR29vZ2xlIE11c2ljLCBwdWlzcXVlIMOpdGFudCByZWNvbm51cywgaWxzIHNvbnQgYXV0b21hdGlxdWVtZW50IHJlbXBsYWPDqXMgcGFyIGxlcyBtb3JjZWF1eCDDqXF1aXZhbGVudHMgZMOpasOgICBkaXNwb25pYmxlcyBzdXIgbGVzIHNlcnZldXJzIGRlIEdvb2dsZS4gTWFpcyB2b2lsw6AsIGF1eCBFdGF0cy1VbmlzLCB1biBub21icmUgaW1wb3J0YW50IGRlLi4uIDxhIGNsYXNzPSJtb3JlLWxpbmsiIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjI1NzBfZ29vZ2xlLW11c2ljLW1hdGNoLWNlbnN1cmUtcGFyb2xlcy8iPkxpcmUgbGEgc3VpdGUuLi48L2E%XV0%PC9kZXNjcmlwdGlvbj4NCgkJCQk8Y29udGVudDplbmNvZGVkPjwhW0NEQVRBWzxwPjxzdHJvbmc%Tm91cyB2b3VzIGwmcnNxdW87YW5ub25jaW9ucyA8YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTIxNzMxX2dvb2dsZS1tdXNpYy1pdHVuZXMtbWF0Y2gvIiB0YXJnZXQ9Il9ibGFuayI%bGEgc2VtYWluZSBkZXJuacOocmU8L2E%IDogYXByw6hzIGwmcnNxdW87RXVyb3BlLCBsYSBmb25jdGlvbm5hbGl0w6kgU2NhbiAmYW1wOyBNYXRjaCBkZSByZWNvbm5haXNzYW5jZSBkZSBtb3JjZWF1eCBtdXNpY2F1eCBkZSBHb29nbGUgTXVzaWMgdmllbnQgdG91dCBqdXN0ZSBkJnJzcXVvO8OqdHJlIG1pc2UgZW4gc2VydmljZSBhdXggRXRhdHMtVW5pcy4gQ2V0dGUgZm9uY3Rpb25uYWxpdMOpIGJpZW4gcHJhdGlxdWUgcGVybWV0IGRlIHMmcnNxdW87YWZmcmFuY2hpciBkZSBsJnJzcXVvO3VwbG9hZCBmYXN0aWRpZXV4IGRlcyBtb3JjZWF1eCBkZSBtdXNpcXVlIGRlIHNhIGJpYmxpb3Row6hxdWUgdmVycyBHb29nbGUgTXVzaWMsIHB1aXNxdWUgw6l0YW50IHJlY29ubnVzLCBpbHMgc29udCBhdXRvbWF0aXF1ZW1lbnQgcmVtcGxhY8OpcyBwYXIgbGVzIG1vcmNlYXV4IMOpcXVpdmFsZW50cyBkw6lqw6AgIGRpc3BvbmlibGVzIHN1ciBsZXMgc2VydmV1cnMgZGUgR29vZ2xlLjwvc3Ryb25nPjwvcD4NCjxwPjxpbWcgY2xhc3M9ImFsaWduY2VudGVyIHNpemUtZnVsbCB3cC1pbWFnZS0xMjI1NzEgY29sb3Jib3gtMTIyNTcwIiBhbHQ9Ikdvb2dsZSBNdXNpYyIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzLzA1MDExNTE0LXBob3RvLWdvb2dsZS1wbGF5LWxvZ28uanBnIiB3aWR0aD0iNTIxIiBoZWlnaHQ9IjMzNiIgLz48c3BhbiBpZD0ibW9yZS0xMjI1NzAiPjwvc3Bhbj48L3A%DQo8cD5NYWlzIHZvaWzDoCwgYXV4IEV0YXRzLVVuaXMsIHVuIG5vbWJyZSBpbXBvcnRhbnQgZGUgbm91dmVhdXggdXRpbGlzYXRldXJzIGR1IHNlcnZpY2UgZGUgbXVzaXF1ZSBkYW5zIGxlIGNsb3VkIHJhcHBvcnRlbnQgcXVlIGxlcyBtb3JjZWF1eCBkZSBsZXVyIGJpYmxpb3Row6hxdWUgbXVzaWNhbGUgY29udGVuYW50IGRlcyA8c3Ryb25nPnBhcm9sZXMgZXhwbGljaXRlczwvc3Ryb25nPiBzb250IGF1dG9tYXRpcXVlbWVudCByZW1wbGFjw6lzIHBhciBkZXMgdmVyc2lvbnMgZMOpbnXDqWVzIGRlIHRvdXRlIGdyb3NzacOocmV0w6kuPC9wPg0KPHA%Q2UgYnVnIHF1JnJzcXVvO29uIHBvdXJyYWl0IHByZW5kcmUgcG91ciA8c3Ryb25nPnVuZSBmb3JtZSBkZSBjZW5zdXJlPC9zdHJvbmc%IGfDqW7DqHJlIGJlYXVjb3VwIGRlIG3DqWNvbnRlbnRlbWVudCBPdXRyZS1BdGxhbnRpcXVlLCBzdXJ0b3V0IHF1ZSBHb29nbGUgbiZyc3F1bzthIHRvdWpvdXJzIHBhcyBjb21tdW5pcXXDqSBzdXIgbCZyc3F1bzvDqXZlbnR1ZWxsZSBjb3JyZWN0aW9uIGRlIHNvbiBhbGdvcml0aG1lLiBMZSBwbHVzIMOpdG9ubmFudCBlc3QgcXVlIGxlIG3Dqm1lIGNvbXBvcnRlbWVudCBhdmFpdCDDqXTDqSByZW1hcnF1w6kgbG9ycyBkdSBsYW5jZW1lbnQgZHUgc2VydmljZSBzaW1pbGFpcmUgcHJvcG9zw6kgcGFyIEFwcGxlICg8c3Ryb25nPmlUdW5lcyBNYXRjaDwvc3Ryb25nPikuPC9wPg0KPHA%Tm91cyBpZ25vcm9ucyBzaSBjZSBidWcgdG91Y2hlIGxlcyB1dGlsaXNhdGV1cnMgZXVyb3DDqWVucyAodGVuZXotbm91cyBhdSBjb3VyYW50IHZpYSBsZXMgY29tbWVudGFpcmVzKS4gUXVvaSBxdSZyc3F1bztpbCBlbiBzb2l0LCBzaSB2b3RyZSBjaGFuc29uIGEgw6l0w6kgcmVtcGxhY8OpZSBwYXIgdW5lIHZlcnNpb24gcXVpIG5lIHZvdXMgY29udmllbnQgcGFzLCB2b3VzIHBvdXZleiB0b3Vqb3VycyA8c3Ryb25nPnVwbG9hZGVyIGxlIGZpY2hpZXIgZCZyc3F1bztvcmlnaW5lPC9zdHJvbmc%IGdyw6JjZSDDoCBsYSBmb25jdGlvbiAmbGFxdW87Jm5ic3A7Q29ycmlnZXIgbGEgY29ycmVzcG9uZGFuY2UgaW5jb3JyZWN0ZSZuYnNwOyZyYXF1bzsgY29tbWUgaWxsdXN0csOpIGNpLWRlc3NvdXMgOjxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS8:YXR0YWNobWVudF9pZD0xMjI1NzIiIHJlbD0iYXR0YWNobWVudCB3cC1hdHQtMTIyNTcyIj48aW1nIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLWZ1bGwgd3AtaW1hZ2UtMTIyNTcyIGNvbG9yYm94LTEyMjU3MCIgYWx0PSJHb29nbGUgTXVzaWMiIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9TY3JlZW5TaG90MTkzLmpwZyIgd2lkdGg9IjMwNiIgaGVpZ2h0PSIzNjgiIC8%PC9hPjwvcD4NCjxwPiZuYnNwOzwvcD4NCjxwPiZuYnNwOzwvcD4NCjxwPjxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwOi8vd3d3LmRyb2lkLWxpZmUuY29tLzIwMTIvMTIvMjQvZ29vZ2xlcy1zY2FuLWFuZC1tYXRjaC1mZWF0dXJlLWlzbnQtYS1mYW4tb2YtZXhwbGljaXQtbXVzaWMvIiB0YXJnZXQ9Il9ibGFuayI%U291cmNlPC9hPjwvcD4NCl1dPjwvY29udGVudDplbmNvZGVkPg0KCQkJPHdmdzpjb21tZW50UnNzPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjI1NzBfZ29vZ2xlLW11c2ljLW1hdGNoLWNlbnN1cmUtcGFyb2xlcy9mZWVkLzwvd2Z3OmNvbW1lbnRSc3M%DQoJCTxzbGFzaDpjb21tZW50cz4xNDwvc2xhc2g6Y29tbWVudHM%DQoJCTwvaXRlbT4NCgkJPGl0ZW0%DQoJCTx0aXRsZT5MRyBhbm5vbmNlIHNlcHQgbm91dmVhdXggdMOpbMOpdmlzZXVycyBzb3VzIEdvb2dsZSBUViBwb3VyIDIwMTM8L3RpdGxlPg0KCQk8bGluaz5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTIyNTc0X2xnLWdvb2dsZS10di0yMDEzLzwvbGluaz4NCgkJPGNvbW1lbnRzPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjI1NzRfbGctZ29vZ2xlLXR2LTIwMTMvI2NvbW1lbnRzPC9jb21tZW50cz4NCgkJPHB1YkRhdGU%VGh1LCAyNyBEZWMgMjAxMiAwNjowMDowOCArMDAwMDwvcHViRGF0ZT4NCgkJPGRjOmNyZWF0b3I%U2FteTwvZGM6Y3JlYXRvcj4NCgkJCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbQWN0dWFsaXTDqXMgR8OpbsOpcmFsZXNdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbQ0VTIDIwMTNdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbR29vZ2xlIFRWXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBWzNEXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW2NlczIwMTNdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbTEddXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbVFZdXT48L2NhdGVnb3J5Pg0KCQk8Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS8:cD0xMjI1NzQ8L2d1aWQ%DQoJCTxkZXNjcmlwdGlvbj48IVtDREFUQVtPbiBlbiBzYXVyYSBwbHVzIGF1IHByb2NoYWluIENFUyAyMDEzIG1haXMgTEcgYSBkJiM4MjE3O29yZXMgZXQgZMOpasOgIGFubm9uY8OpIHVuZSBnYW1tZSBkZSBzZXB0IG5vdXZlYXV4IHTDqWzDqXZpc2V1cnMgcG91ciBsJiM4MjE3O2FubsOpZSDDoCB2ZW5pciwgcXVpIHRvdXJuZXJvbnQgdG91cyBzb3VzIEdvb2dsZSBUVi4gQ2V0dGUgYW5ub25jZSBkw6ltb250cmUgbCYjODIxNztpbnRlbnRpb24gZGUgbGEgZmlybWUgY29yw6llbm5lIGRlIHMmIzgyMTc7aW52ZXN0aXIgZCYjODIxNzthdmFudGFnZSBkYW5zIGwmIzgyMTc7T1MgZGUgR29vZ2xlIHBvdXIgdMOpbMOpdmlzZXVycyBjb25uZWN0w6lzLiBMZXMgdMOpbMOpdmlzZXVycyBlbiBxdWVzdGlvbiBkZXMgZ2FtbWVzIEdBNjQwMCBldCBHQTc5MDAgc2Vyb250IHByb3Bvc8OpcyBkYW5zIGNpbnEgZGlhZ29uYWxlcyBkJiM4MjE3O8OpY3JhbiAoNDIsIDQ3LCA1MCwgNTUgZXQgNjAgcG91Y2VzKS4gTGVzIHByZW1pZXJzIHZpc3VlbHMgbGFpc3NlbnQgZW50cmV2b2lyIHVuIGRlc2lnbiBpbXByZXNzaW9ubmFudCDDoCBiYXNlLi4uIDxhIGNsYXNzPSJtb3JlLWxpbmsiIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjI1NzRfbGctZ29vZ2xlLXR2LTIwMTMvIj5MaXJlIGxhIHN1aXRlLi4uPC9hPl1dPjwvZGVzY3JpcHRpb24%DQoJCQkJPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD48c3Ryb25nPk9uIGVuIHNhdXJhIHBsdXMgYXUgcHJvY2hhaW4gQ0VTIDIwMTMgbWFpcyBMRyBhIGQmcnNxdW87b3JlcyBldCBkw6lqw6AgYW5ub25jw6kgdW5lIGdhbW1lIGRlIHNlcHQgbm91dmVhdXggdMOpbMOpdmlzZXVycyBwb3VyIGwmcnNxdW87YW5uw6llIMOgIHZlbmlyLCBxdWkgdG91cm5lcm9udCB0b3VzIHNvdXMgR29vZ2xlIFRWLiBDZXR0ZSBhbm5vbmNlIGTDqW1vbnRyZSBsJnJzcXVvO2ludGVudGlvbiBkZSBsYSBmaXJtZSBjb3LDqWVubmUgZGUgcyZyc3F1bztpbnZlc3RpciBkJnJzcXVvO2F2YW50YWdlIGRhbnMgbCZyc3F1bztPUyBkZSBHb29nbGUgcG91ciB0w6lsw6l2aXNldXJzIGNvbm5lY3TDqXMuPC9zdHJvbmc%PC9wPg0KPHA%PGltZyBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1tZWRpdW0gd3AtaW1hZ2UtMTIyNTc1IGNvbG9yYm94LTEyMjU3NCIgYWx0PSJnb29nbGUgdHYiIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9sZy1nb29nbGV0di02MzB4Mzk4LmpwZyIgd2lkdGg9IjYzMCIgaGVpZ2h0PSIzOTgiIC8%PC9wPg0KPHA%TGVzIHTDqWzDqXZpc2V1cnMgZW4gcXVlc3Rpb24gZGVzIGdhbW1lcyA8c3Ryb25nPkdBNjQwMDwvc3Ryb25nPiBldCA8c3Ryb25nPkdBNzkwMDwvc3Ryb25nPiBzZXJvbnQgcHJvcG9zw6lzIGRhbnMgPHN0cm9uZz5jaW5xIGRpYWdvbmFsZXMgZCZyc3F1bzvDqWNyYW48L3N0cm9uZz4gKDQyLCA0NywgNTAsIDU1IGV0IDYwIHBvdWNlcykuIExlcyBwcmVtaWVycyB2aXN1ZWxzIGxhaXNzZW50IGVudHJldm9pciB1biBkZXNpZ24gaW1wcmVzc2lvbm5hbnQgw6AgYmFzZSBkZSBwaWVkcyBkJnJzcXVvO3VuZSBncmFuZGUgZmluZXNzZSAoamUgcGFybGUgZGVzIHTDqWzDqXZpc2V1cnMgaGVpbiAhKSBldCBkJnJzcXVvO3VuIGJlemVsIHRyw6hzIGZhaWJsZSwgdm9pcmUgaW5leGlzdGFudC48L3A%DQo8cD48YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vP2F0dGFjaG1lbnRfaWQ9MTIyNTc1IiByZWw9ImF0dGFjaG1lbnQgd3AtYXR0LTEyMjU3NSI%PHNwYW4gaWQ9Im1vcmUtMTIyNTc0Ij48L3NwYW4%PC9hPjwvcD4NCjxwPjxzdHJvbmc%TGEgdMOpbMOpY29tbWFuZGU8L3N0cm9uZz4gYSBlbGxlIGF1c3NpIGZhaXQgbCZyc3F1bztvYmpldCBkJnJzcXVvO3VuZSBncmFuZGUgYXR0ZW50aW9uLCBwdWlzcXUmcnNxdW87aWwgZXN0IGRpdCBxdSZyc3F1bztlbGxlIHBlcm1ldHRyYSBsYSBzYWlzaWUgZmFjaWxpdMOpZSBkZSB0ZXh0ZSB2aWEgdW4gY2xhdmllciBjb21wbGV0LCBsYSByZWNvbm5haXNzYW5jZSB2b2NhbGUgdmlhIHVuIG1pY3JvcGhvbmUgaW5jb3Jwb3LDqSwgYWluc2kgcXVlIGxhIHJlY29ubmFpc3NhbmNlIGRlcyBtb3V2ZW1lbnRzLjwvcD4NCjxwPjxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS8:YXR0YWNobWVudF9pZD0xMjI1NzYiIHJlbD0iYXR0YWNobWVudCB3cC1hdHQtMTIyNTc2Ij48aW1nIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLWZ1bGwgd3AtaW1hZ2UtMTIyNTc2IGNvbG9yYm94LTEyMjU3NCIgYWx0PSJnb29nbGUgdHYiIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9hN2dwLTQ2MC5qcGciIHdpZHRoPSI0NjAiIGhlaWdodD0iMzQ1IiAvPjwvYT48L3A%DQo8cD5MZXMgbW9kw6hsZXMgcHLDqXNlbnTDqXMgZGV2cmFpZW50IGZhaXJlIGwmcnNxdW87b2JqZXQgZCZyc3F1bzt1biBsYW5jZW1lbnQgY29tbWVyY2lhbCBhdXggRXRhdHMtVW5pcyBhdSA8c3Ryb25nPnByZW1pZXIgc2VtZXN0cmUgMjAxMzwvc3Ryb25nPiwgcHVpcyBkJnJzcXVvO3VuZSBkaXNwb25pYmlsaXTDqSBnbG9iYWxlIGRhbnMgbGVzIG1vaXMgc3VpdmFudHMuPC9wPg0KPHA%TCZyc3F1bzthbm7DqWUgMjAxMyBzZXJhIHQmcnNxdW87ZWxsZSBjZWxsZSBkZSBsYSBkw6ltb2NyYXRpc2F0aW9uIGR1IHNlcnZpY2UgPHN0cm9uZz5Hb29nbGUgVFY8L3N0cm9uZz4gZXQgZGVzIHTDqWzDqXMgY29ubmVjdMOpZXMgPyBMZSBwYXJpIG4mcnNxdW87ZXN0IHBhcyBnYWduw6kgZCZyc3F1bzthdmFuY2UgZW4gRnJhbmNlIG:DuSBjZSB0ZXJyYWluIGVzdCBkw6lqw6AgbGFyZ2VtZW50IG9jY3Vww6kgcGFyIGxlcyBib3ggbXV0aS1zZXJ2aWNlcyBkZXMgZGlmZsOpcmVudHMgZm91cm5pc3NldXJzIGQmcnNxdW87YWNjw6hzIMOgIGludGVybmV0LjwvcD4NCl1dPjwvY29udGVudDplbmNvZGVkPg0KCQkJPHdmdzpjb21tZW50UnNzPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjI1NzRfbGctZ29vZ2xlLXR2LTIwMTMvZmVlZC88L3dmdzpjb21tZW50UnNzPg0KCQk8c2xhc2g6Y29tbWVudHM%MTg8L3NsYXNoOmNvbW1lbnRzPg0KCQk8L2l0ZW0%DQoJCTxpdGVtPg0KCQk8dGl0bGU%Vk1LIEVsaWtpYSBldCBXYXktQyA6IHVuIHNtYXJ0cGhvbmUgZXQgdW5lIHRhYmxldHRlIGNvbsOndXMgZW4gQWZyaXF1ZTwvdGl0bGU%DQoJCTxsaW5rPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjI0OTZfdm1rLWVsaWthLXdheS1jLXNtYXJ0cGhvbmUtdGFibGV0dGUtY29uY3VzLWFmcmlxdWUvPC9saW5rPg0KCQk8Y29tbWVudHM%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMjQ5Nl92bWstZWxpa2Etd2F5LWMtc21hcnRwaG9uZS10YWJsZXR0ZS1jb25jdXMtYWZyaXF1ZS8jY29tbWVudHM8L2NvbW1lbnRzPg0KCQk8cHViRGF0ZT5XZWQsIDI2IERlYyAyMDEyIDIzOjE2OjI3ICswMDAwPC9wdWJEYXRlPg0KCQk8ZGM6Y3JlYXRvcj5FZG91YXJkIE1hcnF1ZXo8L2RjOmNyZWF0b3I%DQoJCQkJPGNhdGVnb3J5PjwhW0NEQVRBW0FjdHVhbGl0w6lzIEfDqW7DqXJhbGVzXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW2FmcmlxdWVdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbY29uZ29dXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbUkRDXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW3NtYXJ0cGhvbmVdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbdGFibGV0dGVdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbdm1rXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW3ZtayBlbGlraWFdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbdm1rIHdheS1jXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW3dheS1jXV0%PC9jYXRlZ29yeT4NCgkJPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vP3A9MTIyNDk2PC9ndWlkPg0KCQk8ZGVzY3JpcHRpb24%PCFbQ0RBVEFbTGEgY29uY2VwdGlvbiBhIGxpZXUgZW4gUsOpcHVibGlxdWUgZHUgQ29uZ28sIG1haXMgbGEgcHJvZHVjdGlvbiByZXN0ZSBlbiBDaGluZS4gTG9yc3F1JiM4MjE3O29uIHBlbnNlIGF1eCBjb25zdHJ1Y3RldXJzIGRlIHNtYXJ0cGhvbmVzIG91IGRlIHRhYmxldHRlcywgaWxzIHNvbnQgc2l0dcOpcyBzb2l0IGVuIEFtw6lyaXF1ZSBkdSBOb3JkIChNb3Rvcm9sYSwgQXBwbGUmIzgyMzA7KSwgc29pdCBlbiBFdXJvcGUgKFdpa28sIE5va2lhJiM4MjMwOyksIHNvaXQgZW4gQXNpZSAoU2Ftc3VuZywgSHVhd2VpLCBaVEUsIEhUQyYjODIzMDspLiBNYWlzIGTDqHMgcXUmIzgyMTc7aWwgZXN0IHF1ZXN0aW9uIGRlIGwmIzgyMTc7QWZyaXF1ZSwgYyYjODIxNztlc3QgdW4gZ3JhbmQgdmlkZSYjODIzMDsgZHUgbW9pbnMgYyYjODIxNzvDqXRhaXQgISBDYXIgdW5lIHRvdXRlIGpldW5lIHN0YXJ0dXAgY29uZ29sYWlzZSBub21tw6llIFZNSyBzZSBsYW5jZSBkYW5zIGxlcyBzbWFydHBob25lcyBldCB0YWJsZXR0ZXMuLi4uIDxhIGNsYXNzPSJtb3JlLWxpbmsiIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjI0OTZfdm1rLWVsaWthLXdheS1jLXNtYXJ0cGhvbmUtdGFibGV0dGUtY29uY3VzLWFmcmlxdWUvIj5MaXJlIGxhIHN1aXRlLi4uPC9hPl1dPjwvZGVzY3JpcHRpb24%DQoJCQkJPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD5MYSBjb25jZXB0aW9uIGEgbGlldSBlbiBSw6lwdWJsaXF1ZSBkdSBDb25nbywgbWFpcyBsYSBwcm9kdWN0aW9uIHJlc3RlIGVuIENoaW5lLjwvcD4NCjxwPjxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjI0OTZfdm1rLWVsaWthLXdheS1jLXNtYXJ0cGhvbmUtdGFibGV0dGUtY29uY3VzLWFmcmlxdWUvYXR0YWNobWVudC92bWstZWxpa2lhLyIgcmVsPSJhdHRhY2htZW50IHdwLWF0dC0xMjI1MDEiPjxpbWcgY2xhc3M9ImFsaWduY2VudGVyIHNpemUtbWVkaXVtIHdwLWltYWdlLTEyMjUwMSBjb2xvcmJveC0xMjI0OTYiIGFsdD0iVk1LLUVsaWtpYSIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL1ZNSy1FbGlraWEtNjMweDI5NC5qcGciIHdpZHRoPSI2MzAiIGhlaWdodD0iMjk0IiAvPjwvYT48L3A%DQo8cD5Mb3JzcXUmcnNxdW87b24gcGVuc2UgYXV4IGNvbnN0cnVjdGV1cnMgZGUgc21hcnRwaG9uZXMgb3UgZGUgdGFibGV0dGVzLCBpbHMgc29udCBzaXR1w6lzIHNvaXQgZW4gQW3DqXJpcXVlIGR1IE5vcmQgKE1vdG9yb2xhLCBBcHBsZSYjODIzMDspLCBzb2l0IGVuIEV1cm9wZSAoV2lrbywgTm9raWEmIzgyMzA7KSwgc29pdCBlbiBBc2llIChTYW1zdW5nLCBIdWF3ZWksIFpURSwgSFRDJiM4MjMwOykuIE1haXMgZMOocyBxdSZyc3F1bztpbCBlc3QgcXVlc3Rpb24gZGUgbCZyc3F1bztBZnJpcXVlLCBjJnJzcXVvO2VzdCB1biBncmFuZCB2aWRlJiM4MjMwOyBkdSBtb2lucyBjJnJzcXVvO8OpdGFpdCAhIENhciB1bmUgdG91dGUgamV1bmUgc3RhcnR1cCBjb25nb2xhaXNlIG5vbW3DqWUgVk1LIHNlIGxhbmNlIGRhbnMgbGVzIHNtYXJ0cGhvbmVzIGV0IHRhYmxldHRlcy4gTCZyc3F1bztlbnRyZXByZW5ldXIgw6Agc2EgdMOqdGUsIFZlcm9uZSBNYW5rb3UsIGEgZGUgdHLDqHMgYmVsbGVzIGFtYml0aW9ucyA6PC9wPg0KPGJsb2NrcXVvdGU%PHA%JmxhcXVvOyZuYnNwO0FwcGxlIGVzdCBnw6lhbnQgYXV4IEV0YXRzLVVuaXMsIFNhbXN1bmcgZXN0IMOpbm9ybWUgZW4gQXNpZSBldCBub3VzIHZvdWxvbnMgcXVlIFZNSyBzb2l0IGF1c3NpIGltcG9ydGFudCBlbiBBZnJpcXVlLiZuYnNwOyZyYXF1bzs8L3A%PC9ibG9ja3F1b3RlPg0KPHA%UG91ciBjb21tZW5jZXIgY2V0dGUgYmVsbGUgYXZlbnR1cmUsIHVuIHNtYXJ0cGhvbmUgYWluc2kgcXUmcnNxdW87dW5lIHRhYmxldHRlIHZpZW5uZW50IGQmcnNxdW87w6p0cmUgYW5ub25jw6lzLiBMJnJzcXVvO0VsaWtpYSAocXVpIHNpZ25pZmllIGVzcG9pcikgZXN0IHVuIHNtYXJ0cGhvbmUgZGUgMyw1IHBvdWNlcyBhdmVjIHVuZSBkw6lmaW5pdGlvbiBRVkdBICg0ODAgeCAzMjAgcGl4ZWxzKSwgdW4gcHJvY2Vzc2V1ciBjYWRlbmPDqSDDoCA2NTAgTUh6LCA1MTIgTW8gZGUgbcOpbW9pcmUgdml2ZSBldCBzZXVsZW1lbnQgMTI2IE1vIGRlIG3DqW1vaXJlIGludGVybmUsIG1haXMgcXVpIGVzdCBjb21wZW5zw6kgcGFyIHVuIGxlY3RldXIgZGUgY2FydGUgbWljcm9TREhDIChqdXNxdSZyc3F1bzvDoCAzMiBHbykuPHNwYW4gaWQ9Im1vcmUtMTIyNDk2Ij48L3NwYW4%PC9wPg0KPHA%QW5kcm9pZCAyLjMuNiAoR2luZ2VyYnJlYWQpIGVzdCB1dGlsaXPDqSwgYXZlYyB1bmUgYmF0dGVyaWUgZGUgMTMwMCBtQWggKDYgaGV1cmVzIGQmcnNxdW87YXV0b25vbWllIGVuIG5hdmlnYXRpb24gV2lGaSksIHVuIGNhcHRldXIgcGhvdG8gZGUgNSBtw6lnYXBpeGVscyBzdXIgbCZyc3F1bzthdmFudCwgdW5lIGNhbcOpcmEgZnJvbnRhbGUgVkdBIGV0IHVuZSBjb25uZWN0aXZpdMOpIDJHLzNHLCBCbHVldG9vdGgsIEFHUFMsIFdpRmkgODAyLjExIGIvZy9uLiBMZSB0b3V0IGVzdCB2ZW5kdSBkZXB1aXMgbGUgMjIgZMOpY2VtYnJlIHBvdXIgODUgMDAwIEZDRkEgKH4gMTMwIGV1cm9zKS4gT24gZXN0IGNlcnRlcyBpY2kgdHLDqHMgbG9pbiBkZXMgaGF1dCBkZSBnYW1tZSBhY3R1ZWxzLCBtYWlzIGwmcnNxdW87RWxpa2lhIGVzdCBhZGFwdMOpIGF1IG1hcmNow6kgbG9jYWwuPC9wPg0KPHA%PGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMjQ5Nl92bWstZWxpa2Etd2F5LWMtc21hcnRwaG9uZS10YWJsZXR0ZS1jb25jdXMtYWZyaXF1ZS9hdHRhY2htZW50L3Ztay13YXktYy8iIHJlbD0iYXR0YWNobWVudCB3cC1hdHQtMTIyNTAyIj48aW1nIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLW1lZGl1bSB3cC1pbWFnZS0xMjI1MDIgY29sb3Jib3gtMTIyNDk2IiBhbHQ9IlZNSy13YXktYyIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL1ZNSy13YXktYy02MzB4MjYyLmpwZyIgd2lkdGg9IjYzMCIgaGVpZ2h0PSIyNjIiIC8%PC9hPjwvcD4NCjxwPlZpZW50IGVuc3VpdGUgdW5lIHRhYmxldHRlIGRlIDcgcG91Y2VzIG5vbW3DqWUgV2F5LUMsIHF1aSBlc3NhaWUgZGUgcsOpcG9uZHJlIMOgIHRvdXRlcyBsZXMgdXRpbGlzYXRpb25zIDogw6lkdWNhdGlvbiwgbmF2aWdhdGlvbiBzdXIgSW50ZXJuZXQgb3UgZW5jb3JlIGJvcm5lIG11bHRpbcOpZGlhLiBFbGxlIHV0aWxpc2UgQW5kcm9pZCAyLjMuMyAoR2luZ2VyYnJlYWQpLCBjZSBxdWkgbiZyc3F1bztlc3QgcGFzIGxhIG1laWxsZXVyZSBjaG9zZSBkYW5zIGxhIG1lc3VyZSBvw7kgQW5kcm9pZCAzLjAgKEhvbmV5Y29tYikgYSBwZXJtaXMgZGUgZmFpcmUgdW4gYm9uIGVuIGF2YW50IGVuIG1hdGnDqHJlIGQmcnNxdW87aW50ZXJmYWNlIHV0aWxpc2F0ZXVyLCBtYWlzIHF1aSBlc3QgdW4gcGV1IHBsdXMgZ291cm1hbmQgZW4gdGVybWUgZGUgcmVzc291cmNlcy48L3A%DQo8cD5MZSBwcm9jZXNzZXVyIHV0aWxpc8OpIGVzdCBjYWRlbmPDqSDDoCAxLDIgR0h6IGV0IHMmcnNxdW87YXBwdWllIHN1ciA1MTIgTW8gZGUgbcOpbW9pcmUgdml2ZSwgNCBHbyBkZSBtw6ltb2lyZSBpbnRlcm5lIGV0IHVuIGxlY3RldXIgZGUgY2FydGUgbWljcm9TREhDIChqdXNxdSZyc3F1bzvDoCAzMiBHbykuIEwmcnNxdW87w6ljcmFuIGVzdCBlbiBkw6lmaW5pdGlvbiBXVkdBICg4MDAgeCA0ODAgcGl4ZWxzKSwgbGEgY29ubmVjdGl2aXTDqSBsaW1pdMOpZSDDoCBkdSBXaUZpIDgwMi4xMSBiL2cuIFBvdXIgY2UgcXVpIGVzdCBkZSBsYSBiYXR0ZXJpZSwgZWxsZSBhIHVuZSBjYXBhY2l0w6kgZGUgNDIwMCBtQWguIExlIHByaXggZXN0IDE1MCAwMDAgRkNGQSwgc29pdCAyMzAgZXVyb3MuPC9wPg0KPHA%UG91ciBwbHVzIGQmcnNxdW87aW5mb3JtYXRpb25zLCByZW5kZXotdm91cyBzdXIgbGUgPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHA6Ly93d3cudm1rdGVjaC5jb20vIiB0YXJnZXQ9Il9ibGFuayI%c2l0ZSBvZmZpY2llbCBkZSBWTUs8L2E%LjwvcD4NCl1dPjwvY29udGVudDplbmNvZGVkPg0KCQkJPHdmdzpjb21tZW50UnNzPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjI0OTZfdm1rLWVsaWthLXdheS1jLXNtYXJ0cGhvbmUtdGFibGV0dGUtY29uY3VzLWFmcmlxdWUvZmVlZC88L3dmdzpjb21tZW50UnNzPg0KCQk8c2xhc2g6Y29tbWVudHM%MzY8L3NsYXNoOmNvbW1lbnRzPg0KCQk8L2l0ZW0%DQoJCTxpdGVtPg0KCQk8dGl0bGU%TGUgSHVhd2VpIEFzY2VuZCBEMiBzZSBkw6l2b2lsZSBlbiBwaG90b3MgYXZhbnQgbGUgQ0VTPC90aXRsZT4NCgkJPGxpbms%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL21hdGVyaWVscy1hY2Nlc3NvaXJlcy8xMjI1NDVfcGhvdG9zLWh1YXdlaS1hc2NlbmQtZDIvPC9saW5rPg0KCQk8Y29tbWVudHM%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL21hdGVyaWVscy1hY2Nlc3NvaXJlcy8xMjI1NDVfcGhvdG9zLWh1YXdlaS1hc2NlbmQtZDIvI2NvbW1lbnRzPC9jb21tZW50cz4NCgkJPHB1YkRhdGU%V2VkLCAyNiBEZWMgMjAxMiAxNjowNjoyNCArMDAwMDwvcHViRGF0ZT4NCgkJPGRjOmNyZWF0b3I%RWRvdWFyZCBNYXJxdWV6PC9kYzpjcmVhdG9yPg0KCQkJCTxjYXRlZ29yeT48IVtDREFUQVtNYXTDqXJpZWxzIC8gQWNjZXNzb2lyZXNdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbQXNjZW5kIEQyXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW0NFU11dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtDRVMgMjAxM11dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtIdWF3ZWldXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbSHVhd2VpIEFzY2VuZCBEMl1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtLM1YyXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW1dpbmRvd3MgUGhvbmUgOF1dPjwvY2F0ZWdvcnk%DQoJCTxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tLz9wPTEyMjU0NTwvZ3VpZD4NCgkJPGRlc2NyaXB0aW9uPjwhW0NEQVRBW1BvdXIgcmFwcGVsLCBIdWF3ZWkgcHLDqXNlbnRlcmEgKGF1IG1vaW5zKSBsJiM4MjE3O0FzY2VuZCBEMiBzb3VzIEFuZHJvaWQgZXQgbCYjODIxNztBc2NlbmQgVzEsIHNvbiBwcmVtaWVyIFdpbmRvd3MgUGhvbmUsIHNvdXMgV2luZG93cyBQaG9uZSA4LCBsb3JzIGR1IHNhbG9uIGRlIExhcyBWZWdhcy4gQWxvcnMgcXVlIGxlcyBmw6p0ZXMgZGUgZmluIGQmIzgyMTc7YW5uw6llIHNvbnQgc291dmVudCBzeW5vbnltZXMgZCYjODIxNzthY3R1YWxpdMOpcyBtaW5jZXMsIGxlIGNydSAyMDEyIHRyYW5jaGUgY29tcGzDqHRlbWVudCwgYXZlYyBkZSBub21icmV1c2VzIGFubm9uY2VzIG5vdXMgcGFydmVuYW50LiBMZSBzYWxvbiBpbnRlcm5hdGlvbmFsIENFUyBkZSBMYXMgVmVnYXMgc2UgdGllbmRyYSBkdSA4IGF1IDExIGphbnZpZXIgMjAxMywgZXQgY2VydGFpbmVzIGVudHJlcHJpc2VzIG4mIzgyMTc7YXJyaXZlbnQgcGFzIMOgIGNvbnRlbmlyIGxlcyBmdWl0ZXMgZCYjODIxNztpbmZvcm1hdGlvbnMsLi4uIDxhIGNsYXNzPSJtb3JlLWxpbmsiIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9tYXRlcmllbHMtYWNjZXNzb2lyZXMvMTIyNTQ1X3Bob3Rvcy1odWF3ZWktYXNjZW5kLWQyLyI%TGlyZSBsYSBzdWl0ZS4uLjwvYT5dXT48L2Rlc2NyaXB0aW9uPg0KCQkJCTxjb250ZW50OmVuY29kZWQ%PCFbQ0RBVEFbPHAgc3R5bGU9InRleHQtYWxpZ246IGxlZnQ7Ij5Qb3VyIHJhcHBlbCwgSHVhd2VpIHByw6lzZW50ZXJhIChhdSBtb2lucykgbCZyc3F1bztBc2NlbmQgRDIgc291cyBBbmRyb2lkIGV0IGwmcnNxdW87QXNjZW5kIFcxLCBzb24gcHJlbWllciBXaW5kb3dzIFBob25lLCBzb3VzIFdpbmRvd3MgUGhvbmUgOCwgbG9ycyBkdSBzYWxvbiBkZSBMYXMgVmVnYXMuIDxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9tYXRlcmllbHMtYWNjZXNzb2lyZXMvMTIyNTQ1X3Bob3Rvcy1odWF3ZWktYXNjZW5kLWQyL2F0dGFjaG1lbnQvMjAxMjEyMjZfMTQzNjQ3XzczNy8iIHJlbD0iYXR0YWNobWVudCB3cC1hdHQtMTIyNTQ4Ij48aW1nIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLWZ1bGwgd3AtaW1hZ2UtMTIyNTQ4IGNvbG9yYm94LTEyMjU0NSIgYWx0PSJIdWF3ZWkgQXNjZW5kIEQyIiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvMjAxMjEyMjZfMTQzNjQ3XzczNy5qcGciIHdpZHRoPSI0NTAiIGhlaWdodD0iMjU1IiAvPjwvYT4gQWxvcnMgcXVlIGxlcyBmw6p0ZXMgZGUgZmluIGQmcnNxdW87YW5uw6llIHNvbnQgc291dmVudCBzeW5vbnltZXMgZCZyc3F1bzthY3R1YWxpdMOpcyBtaW5jZXMsIGxlIGNydSAyMDEyIHRyYW5jaGUgY29tcGzDqHRlbWVudCwgYXZlYyBkZSBub21icmV1c2VzIGFubm9uY2VzIG5vdXMgcGFydmVuYW50LiBMZSBzYWxvbiBpbnRlcm5hdGlvbmFsIENFUyBkZSBMYXMgVmVnYXMgc2UgdGllbmRyYSBkdSA4IGF1IDExIGphbnZpZXIgMjAxMywgZXQgY2VydGFpbmVzIGVudHJlcHJpc2VzIG4mcnNxdW87YXJyaXZlbnQgcGFzIMOgIGNvbnRlbmlyIGxlcyBmdWl0ZXMgZCZyc3F1bztpbmZvcm1hdGlvbnMsIHBvdXIgbm90cmUgcGx1cyBncmFuZCBib25oZXVyLCBtw6ptZSBzaSBjZWxhIGVubMOodmUgdW5lIGdyYW5kZSBwYXJ0IGR1IG15c3TDqHJlIGV0IGRlIGxhIGTDqWNvdXZlcnRlLjwvcD4NCjxwPk5vdXMgc2F2b25zIHF1JnJzcXVvO2F1IENFUywgbGUgY29uc3RydWN0ZXVyIGNoaW5vaXMgSHVhd2VpIGFubm9uY2VyYSB1biBub3V2ZWF1IHNtYXJ0cGhvbmUgc291cyBBbmRyb2lkIG5vbW3DqSA8YSB0aXRsZT0iTGUgSHVhd2VpIEFzY2VuZCBEMiBzZXJhIHByw6lzZW50w6kgYXUgQ0VTIDIwMTMiIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjE2ODVfbGUtaHVhd2VpLWFzY2VuZC1kMi1zZXJhLXByZXNlbnRlLWF1LWNlcy0yMDEzLyIgdGFyZ2V0PSJfYmxhbmsiPjxlbT5Bc2NlbmQgRDI8L2VtPjwvYT4uIEFsb3JzIHF1ZSBjZSB0w6lsw6lwaG9uZSBhIGTDqWrDoCBwYXNzw6kgbCZyc3F1bzvDqXRhcGUgZGUgdmFsaWRhdGlvbiBkZXMgYXV0b3JpdMOpcyBjaGlub2lzZXMgZXQgcXUmcnNxdW87aWwgZXN0IHByw6p0IMOgIMOqdHJlIGxhbmPDqSBkYW5zIGxlIHBheXMgZHUgbWlsaWV1LCB2b2lsw6AgcXVlIHBsdXNpZXVycyBwaG90b3MgYXBwYXJhaXNzZW50IHN1ciBkZXMgZm9ydW1zIGNoaW5vaXMuPHNwYW4gaWQ9Im1vcmUtMTIyNTQ1Ij48L3NwYW4%PC9wPg0KPHAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsiPjxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9tYXRlcmllbHMtYWNjZXNzb2lyZXMvMTIyNTQ1X3Bob3Rvcy1odWF3ZWktYXNjZW5kLWQyL2F0dGFjaG1lbnQvMjAxMjEyMjZfMTQzNjUxXzQ3LyIgcmVsPSJhdHRhY2htZW50IHdwLWF0dC0xMjI1NDkiPjxpbWcgY2xhc3M9ImFsaWduY2VudGVyIHNpemUtZnVsbCB3cC1pbWFnZS0xMjI1NDkgY29sb3Jib3gtMTIyNTQ1IiBhbHQ9Ikh1YXdlaSBBc2NlbmQgRDIiIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy8yMDEyMTIyNl8xNDM2NTFfNDcuanBnIiB3aWR0aD0iNDUwIiBoZWlnaHQ9IjI1NSIgLz48L2E%PC9wPg0KPHA%PGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMTY4NV9sZS1odWF3ZWktYXNjZW5kLWQyLXNlcmEtcHJlc2VudGUtYXUtY2VzLTIwMTMvIiB0YXJnZXQ9Il9ibGFuayI%QXByw6hzIGxhIHBob3RvIHByZXNzZSAmbGFxdW87Jm5ic3A7dm9sw6llJm5ic3A7JnJhcXVvOzwvYT4sIGNlcyBjbGljaMOpcyBub3VzIHByb3V2ZW50IHF1JnJzcXVvO2lsIHMmcnNxdW87YWdpdCBiZWwgZXQgYmllbiBkdSBtw6ptZSB0w6lsw6lwaG9uZS4gUG91ciBjZSBxdWkgZXN0IGRlcyBjYXJhY3TDqXJpc3RpcXVlcyB0ZWNobmlxdWVzLCBpbCBlc3QgcXVlc3Rpb24gZCZyc3F1bzt1biDDqWNyYW4gZGUgNSBwb3VjZXMgYXZlYyB1bmUgZMOpZmluaXRpb24gRnVsbCBIRCAoMTkyMCB4IDEwODAgcGl4ZWxzICYjODIxMTsgZGVuc2l0w6kgZGUgcGl4ZWxzIGRlIDQ0MCBwcGkpLiBMZSBwcm9jZXNzZXVyIHV0aWxpc8OpIGVzdCB1biBtb2TDqGxlIG1haXNvbiwgbGUgcXVhZHJ1cGxlLWNvZXVyIEszVjIgY2FkZW5jw6kgw6AgMSw0IEdIei4gTGEgdmVyc2lvbiBkJnJzcXVvO0FuZHJvaWQgZXN0IGxhIDQuMSAoSmVsbHkgQmVhbiksIGxhIGJhdHRlcmllIGEgdW5lIGNhcGFjaXTDqSBkZSAzMDAwIG1BaCAow6lxdWl2YWxlbnQgw6AgdW4gU2Ftc3VuZyBHYWxheHkgTm90ZSAyKSBldCBsZSBjYXB0ZXVyIHBob3RvIHLDqWFsaXNlIGRlcyBjbGljaMOpcyBlbiAxMyBtw6lnYXBpeGVscy48L3A%DQo8cD5JbCBuZSByZXN0ZSBwbHVzIHF1JnJzcXVvO8OgIGF0dGVuZHJlIGxlIDcgamFudmllciBwb3VyIGVuIHNhdm9pciBwbHVzICE8L3A%DQo8cCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyI%PGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL21hdGVyaWVscy1hY2Nlc3NvaXJlcy8xMjI1NDVfcGhvdG9zLWh1YXdlaS1hc2NlbmQtZDIvYXR0YWNobWVudC8yMDEyMTIyNl8xNDM2NTNfODY2LyIgcmVsPSJhdHRhY2htZW50IHdwLWF0dC0xMjI1NTAiPjxpbWcgY2xhc3M9ImFsaWduY2VudGVyIHNpemUtZnVsbCB3cC1pbWFnZS0xMjI1NTAgY29sb3Jib3gtMTIyNTQ1IiBhbHQ9Ikh1YXdlaSBBc2NlbmQgRDIiIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy8yMDEyMTIyNl8xNDM2NTNfODY2LmpwZyIgd2lkdGg9IjQ1MCIgaGVpZ2h0PSIyNTQiIC8%PC9hPiA8YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vbWF0ZXJpZWxzLWFjY2Vzc29pcmVzLzEyMjU0NV9waG90b3MtaHVhd2VpLWFzY2VuZC1kMi9hdHRhY2htZW50LzIwMTIxMjI2XzE0MzY1Nl84NjAvIiByZWw9ImF0dGFjaG1lbnQgd3AtYXR0LTEyMjU1MSI%PGltZyBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1mdWxsIHdwLWltYWdlLTEyMjU1MSBjb2xvcmJveC0xMjI1NDUiIGFsdD0iSHVhd2VpIEFzY2VuZCBEMiIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzLzIwMTIxMjI2XzE0MzY1Nl84NjAuanBnIiB3aWR0aD0iNDUwIiBoZWlnaHQ9IjIyNiIgLz48L2E%PC9wPg0KPHAgc3R5bGU9InRleHQtYWxpZ246IGxlZnQ7Ij48YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cDovL3d3dy5pdGhvbWUuY29tL2h0bWwvZGlnaS8zMzY5OS5odG0iIHRhcmdldD0iX2JsYW5rIj5Tb3VyY2U8L2E%PC9wPg0KXV0%PC9jb250ZW50OmVuY29kZWQ%DQoJCQk8d2Z3OmNvbW1lbnRSc3M%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL21hdGVyaWVscy1hY2Nlc3NvaXJlcy8xMjI1NDVfcGhvdG9zLWh1YXdlaS1hc2NlbmQtZDIvZmVlZC88L3dmdzpjb21tZW50UnNzPg0KCQk8c2xhc2g6Y29tbWVudHM%Mzk8L3NsYXNoOmNvbW1lbnRzPg0KCQk8L2l0ZW0%DQoJCTxpdGVtPg0KCQk8dGl0bGU%WlRFIG9mZmljaWFsaXNlIGxlIE51YmlhIFo1IDogdW4gc21hcnRwaG9uZSAoZGUgcGx1cykgZGUgNSBwb3VjZXMgMTA4MHA8L3RpdGxlPg0KCQk8bGluaz5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTIyNTM4X3p0ZS1udWJpYS16NS88L2xpbms%DQoJCTxjb21tZW50cz5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTIyNTM4X3p0ZS1udWJpYS16NS8jY29tbWVudHM8L2NvbW1lbnRzPg0KCQk8cHViRGF0ZT5XZWQsIDI2IERlYyAyMDEyIDE1OjI1OjM3ICswMDAwPC9wdWJEYXRlPg0KCQk8ZGM6Y3JlYXRvcj5FZG91YXJkIE1hcnF1ZXo8L2RjOmNyZWF0b3I%DQoJCQkJPGNhdGVnb3J5PjwhW0NEQVRBW0FjdHVhbGl0w6lzIEfDqW7DqXJhbGVzXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW01hdMOpcmllbHMgLyBBY2Nlc3NvaXJlc11dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVsxMDgwcF1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtaVEVdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbenRlIG51YmlhIHo1XV0%PC9jYXRlZ29yeT4NCgkJPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vP3A9MTIyNTM4PC9ndWlkPg0KCQk8ZGVzY3JpcHRpb24%PCFbQ0RBVEFbUG91ciBsJiM4MjE3O2luc3RhbnQsIGwmIzgyMTc7YW5ub25jZSBkdSBaVEUgTnViaWEgWjUgbmUgY29uY2VybmUgcXVlIGxhIENoaW5lLiBIVEMgYSDDqXTDqSBsZSBwcmVtaWVyIMOgIHNlIGxhbmNlciBkYW5zIGwmIzgyMTc7YXZlbnR1cmUgZGVzIMOpY3JhbnMgZGl0cyAxMDgwcCAob3UgRnVsbEhEKSBhdmVjIHNvbiBKIEJ1dHRlcmZseSBxdWkgZXN0IGRpc3BvbmlibGUgYXUgSmFwb24sIHN1aXZpIHBhciBkJiM4MjE3O2F1dHJlcyBjb25zdHJ1Y3RldXJzIGRlcHVpcy4gWlRFIGRlIHNvbiBjw7R0w6kgbm91cyBhdmFpdCBqdXNxdSYjODIxNzthbG9ycyBoYWJpdHXDqSDDoCBkZXMgdGVybWluYXV4IHBsdXTDtHQgbWlsaWV1IGRlIGdhbW1lLCBtYWlzIHNlbWJsZSB2b3Vsb2lyIHN1aXZyZSBsYSB2b2llIG91dmVydGUgcGFyIEh1YXdlaSBlbiAyMDEyLCBxdWkgY29uc2lzdGUgw6AgbW9udGVyIGVuIGdhbW1lLiBMZS4uLiA8YSBjbGFzcz0ibW9yZS1saW5rIiBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTIyNTM4X3p0ZS1udWJpYS16NS8iPkxpcmUgbGEgc3VpdGUuLi48L2E%XV0%PC9kZXNjcmlwdGlvbj4NCgkJCQk8Y29udGVudDplbmNvZGVkPjwhW0NEQVRBWzxwPlBvdXIgbCZyc3F1bztpbnN0YW50LCBsJnJzcXVvO2Fubm9uY2UgZHUgWlRFIE51YmlhIFo1IG5lIGNvbmNlcm5lIHF1ZSBsYSBDaGluZS48L3A%DQo8cD48YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTIyNTM4X3p0ZS1udWJpYS16NS9hdHRhY2htZW50L3p0ZS1udWJpYS0yNS8iIHJlbD0iYXR0YWNobWVudCB3cC1hdHQtMTIyNTM5Ij48aW1nIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLW1lZGl1bSB3cC1pbWFnZS0xMjI1MzkgY29sb3Jib3gtMTIyNTM4IiBhbHQ9IlpURSBOdWJpYSBaNSIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL1pURS1OdWJpYS0yNS02MzB4MjUyLmpwZyIgd2lkdGg9IjYzMCIgaGVpZ2h0PSIyNTIiIC8%PC9hPjwvcD4NCjxwPkhUQyBhIMOpdMOpIGxlIHByZW1pZXIgw6Agc2UgbGFuY2VyIGRhbnMgbCZyc3F1bzthdmVudHVyZSBkZXMgw6ljcmFucyBkaXRzIDEwODBwIChvdSBGdWxsSEQpIGF2ZWMgc29uIEogQnV0dGVyZmx5IHF1aSBlc3QgZGlzcG9uaWJsZSBhdSBKYXBvbiwgc3VpdmkgcGFyIGQmcnNxdW87YXV0cmVzIGNvbnN0cnVjdGV1cnMgZGVwdWlzLiBaVEUgZGUgc29uIGPDtHTDqSBub3VzIGF2YWl0IGp1c3F1JnJzcXVvO2Fsb3JzIGhhYml0dcOpIMOgIGRlcyB0ZXJtaW5hdXggcGx1dMO0dCBtaWxpZXUgZGUgZ2FtbWUsIG1haXMgc2VtYmxlIHZvdWxvaXIgc3VpdnJlIGxhIHZvaWUgb3V2ZXJ0ZSBwYXIgSHVhd2VpIGVuIDIwMTIsIHF1aSBjb25zaXN0ZSDDoCBtb250ZXIgZW4gZ2FtbWUuIExlIE51YmlhIFo1IGVuIGVzdCB1biBwYXJmYWl0IGV4ZW1wbGUgZXQgdmllbnQgdG91dCBqdXN0ZSBkJnJzcXVvO8OqdHJlIG9mZmljaWFsaXPDqSAoYWxvcnMgcXVlIG5vdXMgbCZyc3F1bzthdHRlbmRpb25zIHVuIHBldSBwbHVzIHTDtHQpLjwvcD4NCjxwPlpURSBuZSBmYWl0IHZyYWltZW50IHBhcyBkYW5zIGxhIGRlbWllLW1lc3VyZSBhdmVjIGNlIHTDqWzDqXBob25lIHNvdXMgPHN0cm9uZz5BbmRyb2lkIDQuMS4xPC9zdHJvbmc%LCBjYXIgbGVzIGNhcmFjdMOpcmlzdGlxdWVzIHRlY2huaXF1ZXMgc29udCB0csOocyBpbnTDqXJlc3NhbnRlcy4gU29uIMOpY3JhbiA8c3Ryb25nPklQUyBkZSA1IHBvdWNlcyA8L3N0cm9uZz5hZmZpY2hlIHVuZSBkw6lmaW5pdGlvbiA8c3Ryb25nPkZ1bGxIRDwvc3Ryb25nPiAoMTkyMCB4IDEwODAgcGl4ZWxzKSwgbHVpIG9mZnJhbnQgdW5lIGRlbnNpdMOpIGRlIHBpeGVscyBkZSA8c3Ryb25nPjQ0MSBwcGk8L3N0cm9uZz4sIGNlIHF1aSBlc3QgbG9pbiBkZXMgaGF1dHMgZGUgZ2FtbWUgYWN0dWVscyAoU29ueSBYcGVyaWEgUywgU2Ftc3VuZyBHYWxheHkgUzMsIEhUQyBPbmUgWCssIEFjZXIgQ2xvdWRNb2JpbGUmIzgyMzA7KSBxdWkgcGxhZm9ubmVudCDDoCAzNDAgcHBpLiBMJnJzcXVvO29laWwgaHVtYWluIG5lIGZhaXQgcGx1cyBsYSBkaWZmw6lyZW5jZSBsb3JzcXVlIGxlIHBhbGllciBkZXMgfjMwMCBwcGkgZXN0IGTDqXBhc3PDqSwgbWFpcyBzdXIgbGVzIGZvcm1hdHMgNSBwb3VjZXMgZXQgcGx1cywgbGUgNzIwcCDDqXRhaXQgdW4gcGV1IHRyb3AganVzdGUgcG91ciBjZXJ0YWlucyAoc3VyIGxlIEdhbGF4eSBOb3RlIDIgcGFyIGV4ZW1wbGUpLjxzcGFuIGlkPSJtb3JlLTEyMjUzOCI%PC9zcGFuPjwvcD4NCjxwPkxlIHByb2Nlc3NldXIgZXN0IHRhaWxsw6kgcG91ciBjZSB0w6lsw6lwaG9uZSA6IHVuIHF1YWRydXBsZS1jb2V1ciA8c3Ryb25nPlF1YWxjb21tIFNuYXBkcmFnb24gUzQgUHJvPC9zdHJvbmc%IChBUFE4MDY0KSBjYWRlbmPDqSDDoCAxLDUgR0h6IGFjY29tcGFnbsOpIGRlIDxzdHJvbmc%MiBHbyBkZSBtw6ltb2lyZSB2aXZlPC9zdHJvbmc%IGV0IGRlIDxzdHJvbmc%MzIgR28gZGUgbcOpbW9pcmUgaW50ZXJuZTwvc3Ryb25nPi4gUG91ciBjZSBxdWkgZXN0IGRlIGxhIHBob3RvZ3JhcGhpZSwgZGV1eCBjYXB0ZXVycyBzb250IHByw6lzZW50cyA6IDxzdHJvbmc%MTMgbcOpZ2FwaXhlbHM8L3N0cm9uZz4gc3VyIGxlIGRvcyBldCAyIG3DqWdhcGl4ZWxzIGVuIGZhw6dhZGUgIExhIGNvbm5lY3Rpdml0w6kgZXN0IGNvbXBsw6h0ZSwgbWFpcyBuJnJzcXVvO2VzdCBwYXMgTFRFIChzdXIgbGEgdmVyc2lvbiBjaGlub2lzZSksIEhTUEErLCBXaS1GaSA4MDIuMTEgYS9iL2cvbiwgQmx1ZXRvb3RoIDQuMCwgTkZDLiBTaSBsJnJzcXVvO2F1dG9ub21pZSBkJnJzcXVvO3VuIHRlbCBlbmdpbiB2b3VzIGVmZnJhaWUsIHNhY2hleiBxdWUgWlRFIGEgbWlzIHVuZSBiYXR0ZXJpZSBkZSA8c3Ryb25nPjIzMDAgbUFoPC9zdHJvbmc%LCBjZSBxdWkgZGV2cmFpdCBvZmZyaXIgZGUgYm9ucyByw6lzdWx0YXRzLjwvcD4NCjxwIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7Ij48YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTIyNTM4X3p0ZS1udWJpYS16NS9hdHRhY2htZW50L3p0ZS1udWJpYS16NS1hbmRyb2lkLWplbGx5LWJlYW4tMTA4MHAtb2ZmaWNpYWwvIiByZWw9ImF0dGFjaG1lbnQgd3AtYXR0LTEyMjU0MCI%PGltZyBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1mdWxsIHdwLWltYWdlLTEyMjU0MCBjb2xvcmJveC0xMjI1MzgiIGFsdD0iWlRFIE51YmlhIFo1IiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvWlRFLU51YmlhLVo1LUFuZHJvaWQtSmVsbHktQmVhbi0xMDgwcC1vZmZpY2lhbC5qcGciIHdpZHRoPSI0MDAiIGhlaWdodD0iMzk1IiAvPjwvYT48L3A%DQo8cD5RdWkgZGl0IHNtYXJ0cGhvbmUgZGUgNSBwb3VjZXMsIGRpdCBmb3Jjw6ltZW50IGRlcyBkaW1lbnNpb25zIHN1cmh1bWFpbmVzLCBtYWlzIGF1IGZpbmFsIHZvdHJlIGplYW4gc2VyYSBiaWVuICZsYXF1bzsmbmJzcDtOdWJpYSBaNSBjb21wYXRpYmxlJm5ic3A7JnJhcXVvOyA6IDEzOCB4IDY5LjIgeCA3LjYgbW0sIHBvdXIgdW4gcG9pZHMgcGx1bWUgZGUgMTI2IGdyYW1tZXMuIEF1IG5pdmVhdSBkZXMgY29sb3Jpcywgb24gcmV0cm91dmUgZGFucyB1biBwcmVtaWVyIHRlbXBzIGR1IGJsYW5jIGV0IGR1IG5vaXIsIGF2ZWMgcGV1dC3DqnRyZSBwcm9jaGFpbmVtZW50IHVuZSBhdXRyZSB2YXJpYW50ZS4gSWxzIHNlcm9udCBkaXNwb25pYmxlcyBkw6lidXQgamFudmllciBlbiBDaGluZSBwb3VyIDMsNDU2IHl1YW5zLCBzb2l0IGVudmlyb24gNDIwIGV1cm9zLjwvcD4NCjxwPkxlIFpURSBkJnJzcXVvO2lsIHkgYSBxdWVscXVlcyBhbm7DqWVzIHNlbWJsZSB0csOocyBsb2luIGV0IGNlIGNvbnN0cnVjdGV1ciBkZXZyYWl0IGRldmVuaXIgdW4gYWN0ZXVyIG1hamV1ciBkZSBsYSBzY8OobmUgZGUgbGEgbW9iaWxpdMOpIGVuIDIwMTMuIE4mcnNxdW87b3VibGlleiBwYXMgcXVlIGxlIEdyYW5kIFggc2VyYSBwYXIgZXhlbXBsZSBhbm5vbmPDqSBhdSBDRVMuPC9wPg0KPHA%PGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHA6Ly93d3cudW53aXJlZHZpZXcuY29tLzIwMTIvMTIvMjYvenRlLW51YmlhLXo1LW5vdy1vZmZpY2lhbC1hbmRyb2lkLWplbGx5LWJlYW4tMTA4MHAtc2NyZWVuLXByaWNlLTU1NS8:dXRtX3NvdXJjZT1mZWVkYnVybmVyJmFtcDt1dG1fbWVkaXVtPWZlZWQmYW1wO3V0bV9jYW1wYWlnbj1GZWVkJTNBK1Vud2lyZWRWaWV3KyUyOFVud2lyZWQrVmlldyUyOSIgdGFyZ2V0PSJfYmxhbmsiPlNvdXJjZTwvYT48L3A%DQpdXT48L2NvbnRlbnQ6ZW5jb2RlZD4NCgkJCTx3Znc6Y29tbWVudFJzcz5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTIyNTM4X3p0ZS1udWJpYS16NS9mZWVkLzwvd2Z3OmNvbW1lbnRSc3M%DQoJCTxzbGFzaDpjb21tZW50cz42ODwvc2xhc2g6Y29tbWVudHM%DQoJCTwvaXRlbT4NCgkJPGl0ZW0%DQoJCTx0aXRsZT5EZXMgY2FzIGRlIG1vcnQgc3ViaXRlIHJlbGV2w6lzIHBvdXIgbGUgU2Ftc3VuZyBHYWxheHkgUzM8L3RpdGxlPg0KCQk8bGluaz5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTIyNTIzX2dhbGF4eS1zMy1uZS1kZW1hcnJlLXBsdXMvPC9saW5rPg0KCQk8Y29tbWVudHM%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMjUyM19nYWxheHktczMtbmUtZGVtYXJyZS1wbHVzLyNjb21tZW50czwvY29tbWVudHM%DQoJCTxwdWJEYXRlPldlZCwgMjYgRGVjIDIwMTIgMTM6NTI6MzQgKzAwMDA8L3B1YkRhdGU%DQoJCTxkYzpjcmVhdG9yPkVkb3VhcmQgTWFycXVlejwvZGM6Y3JlYXRvcj4NCgkJCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbQWN0dWFsaXTDqXMgR8OpbsOpcmFsZXNdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbY2FydGUgbcOocmVdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbR2FsYXh5IFMzXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW2dzM3N1ZGRlbmRlYXRoXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW2hhcmR3YXJlXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW3Byb2Jsw6htZV1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtzYW1zdW5nIGdhbGF4eSBzM11dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtzYW1zdW5nIGdhdGVdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbc2F2XV0%PC9jYXRlZ29yeT4NCgkJPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vP3A9MTIyNTIzPC9ndWlkPg0KCQk8ZGVzY3JpcHRpb24%PCFbQ0RBVEFbJiM4MjMwOyBsYSBmYXV0ZSDDoCBzYSBjYXJ0ZSBtw6hyZSBxdWkgZXN0IHJlbXBsYWPDqWUgZ3JhdHVpdGVtZW50LCBwYXIgbGUgbcOqbWUgbW9kw6hsZS4gUXVlIGwmIzgyMTc7b24gYWltZSBvdSBwYXMgbGUgU2Ftc3VuZyBHYWxheHkgUzMsIHVuZSBjaG9zZSBlc3Qgc8O7cmUgOiBpbCBzZSB2ZW5kIGNvbW1lIGRlcyBwZXRpdHMgcGFpbnMuIE1hbGhldXJldXNlbWVudCBpbCBuJiM4MjE3O2EgcGFzIGV1IHVuZSB2aWUgYXVzc2kgdHJhbnF1aWxsZSA6IGRhbnMgdW4gcHJlbWllciB0ZW1wcyBsZSBidWcgZGVzIGNvZGVzIFVTU0QgcXVpIHBlcm1ldHRhaXQgdHLDqHMgZmFjaWxlbWVudCBkZSBzdXBwcmltZXIgdG91dGVzIGxlcyBkb25uw6llcyBkdSB0w6lsw6lwaG9uZSBlbiB2aXNpdGFudCBwYXIgZXhlbXBsZSB1bmUgcGFnZSB3ZWIuIElsIHkuLi4gPGEgY2xhc3M9Im1vcmUtbGluayIgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMjUyM19nYWxheHktczMtbmUtZGVtYXJyZS1wbHVzLyI%TGlyZSBsYSBzdWl0ZS4uLjwvYT5dXT48L2Rlc2NyaXB0aW9uPg0KCQkJCTxjb250ZW50OmVuY29kZWQ%PCFbQ0RBVEFbPHA%JiM4MjMwOyBsYSBmYXV0ZSDDoCBzYSBjYXJ0ZSBtw6hyZSBxdWkgZXN0IHJlbXBsYWPDqWUgZ3JhdHVpdGVtZW50LCBwYXIgbGUgbcOqbWUgbW9kw6hsZS48L3A%DQo8cCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyI%PGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMjUyM19nYWxheHktczMtbmUtZGVtYXJyZS1wbHVzL2F0dGFjaG1lbnQvc2dzaWlpLyIgcmVsPSJhdHRhY2htZW50IHdwLWF0dC0xMjI1MjgiPjxpbWcgY2xhc3M9ImFsaWduY2VudGVyIHNpemUtbWVkaXVtIHdwLWltYWdlLTEyMjUyOCBjb2xvcmJveC0xMjI1MjMiIGFsdD0iY2FydGUgbcOocmUgZ2FsYXh5IHMzIiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvU0dTSUlJLTYzMHg0NzIuanBnIiB3aWR0aD0iNjMwIiBoZWlnaHQ9IjQ3MiIgLz48L2E%PC9wPg0KPHA%UXVlIGwmcnNxdW87b24gYWltZSBvdSBwYXMgbGUgU2Ftc3VuZyBHYWxheHkgUzMsIHVuZSBjaG9zZSBlc3Qgc8O7cmUgOiBpbCBzZSB2ZW5kIGNvbW1lIGRlcyBwZXRpdHMgcGFpbnMuIE1hbGhldXJldXNlbWVudCBpbCBuJnJzcXVvO2EgcGFzIGV1IHVuZSB2aWUgYXVzc2kgdHJhbnF1aWxsZSA6IGRhbnMgdW4gcHJlbWllciB0ZW1wcyA8YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTExOTA3X3NhbXN1bmctZGVwbG9pZS11bi1jb3JyZWN0aWYtcG91ci1sYS12dWxuZXJhYmlsaXRlLWR1LWdhbGF4eS1zaWlpLyIgdGFyZ2V0PSJfYmxhbmsiPmxlIGJ1ZyBkZXMgY29kZXMgVVNTRDwvYT4gcXVpIHBlcm1ldHRhaXQgdHLDqHMgZmFjaWxlbWVudCBkZSBzdXBwcmltZXIgdG91dGVzIGxlcyBkb25uw6llcyBkdSB0w6lsw6lwaG9uZSBlbiB2aXNpdGFudCBwYXIgZXhlbXBsZSB1bmUgcGFnZSB3ZWIuIElsIHkgYSBxdWVscXVlcyBqb3VycyB1bmUgZmFpbGxlIG1hamV1cmUgYSDDqXTDqSB0cm91dsOpZSA8YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTIxNzY4X3NhbXN1bmctY29uZmlybWUtbGEtZmFpbGxlLWV0LXByZXBhcmUtdW4tY29ycmVjdGlmLyIgdGFyZ2V0PSJfYmxhbmsiPmRhbnMgbGVzIHByb2Nlc3NldXJzIEV4eW5vczwvYT4gcGVybWV0dGFudCBkZSBsaXJlIGV0IGVmZmFjZXIgbGUgY29udGVudSBkZSBsYSBtw6ltb2lyZSB2aXZlLiBFdCBsYSBsaXN0ZSB2aWVudCBkZSBzJnJzcXVvO2FsbG9uZ2VyIGF2ZWMgdW4gbm91dmVhdSBwcm9ibMOobWUgbWFqZXVyLjwvcD4NCjxwPkFsb3JzIHF1ZSBsZSBzbWFydHBob25lIHBoYXJlIGR1IGNvcsOpZW4gZXN0IHNvcnRpIGlsIHkgYSBlbnZpcm9uIHNpeCBtb2lzLCBsZXMgcHJlbWllcnMgYWNoZXRldXJzIHNlIHBsYWlnbmVudCBxdWUgbGV1ciBtb2TDqGxlIGFpdCByZW5kdSBsJnJzcXVvO8OibWUgYXByw6hzIGVudmlyb24gMjAwIGpvdXJzIGQmcnNxdW87dXRpbGlzYXRpb24uIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwOi8vZm9ydW0ueGRhLWRldmVsb3BlcnMuY29tL3Nob3d0aHJlYWQucGhwP3Q9MTk5MzA0NCZhbXA7cGFnZT0xIiB0YXJnZXQ9Il9ibGFuayI%TGUgdGhyZWFkIG91dmVydCBzdXIgeGRhLWRldmVsb3BlcnM8L2E%IGlsIHkgYSBwbHVzIGQmcnNxdW87dW4gbW9pcyBjb21wdGUgZMOpc29ybWFpcyBwbHVzIGRlIDEwMDAgbWVzc2FnZXMsIHByZXV2ZSBxdSZyc3F1bztpbCBuZSBzJnJzcXVvO2FnaXQgcGFzIGQmcnNxdW87dW4gY2FzIGlzb2zDqS4gSWwgZW4gZXN0IGRlIG3Dqm1lIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwOi8vZm9ydW0uZnJhbmRyb2lkLmNvbS90b3BpYy8xMzE2MTEtZ2FsYXh5LXMzLXZpY3RpbWUtZGUtc2EtbWVtb2lyZS1hdS1ib3V0LWRlLTYtbW9pcy8iIHRhcmdldD0iX2JsYW5rIj5zdXIgbm90cmUgZm9ydW08L2E%LCA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cDovL3d3dy5yZWRkaXQuY29tL3IvQW5kcm9pZC9jb21tZW50cy8xNTV0dzAvZ2FsYXh5X3MzX21haW5ib2FyZHNfZHlpbmdfd2l0aG91dF93YXJuaW5nLyIgdGFyZ2V0PSJfYmxhbmsiPlJlZGRpdDwvYT4gb3UgZW5jb3JlIGxlIGhhc2h0YWcgPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vc2VhcmNoP3E9JTIzZ3Mzc3VkZGVuZGVhdGgmYW1wO3NyYz1oYXNoIiB0YXJnZXQ9Il9ibGFuayI%I2dzM3N1ZGRlbmRlYXRoPC9hPiBzdXIgVHdpdHRlci48c3BhbiBpZD0ibW9yZS0xMjI1MjMiPjwvc3Bhbj48L3A%DQo8cD5MZSBTYW1zdW5nIEdhbGF4eSBTMyByZWZ1c2UgdG91dCDDoCBjb3VwIGRlIHMmcnNxdW87YWxsdW1lciwgbcOqbWUgYXByw6hzIHBsdXNpZXVycyByZWNoYXJnZXMuIENlcnRhaW5lcyBwZXJzb25uZXMgb250IG5vdMOpIGRlcyBnZWxzIGQmcnNxdW87w6ljcmFuIHF1ZWxxdWVzIGpvdXJzIGF2YW50IGNldHRlIG1vcnQgcHLDqW1hdHVyw6llLiBJbCBuZSBzJnJzcXVvO2FnaXJhaXQgcGFzIGQmcnNxdW87dW4gcHJvYmzDqG1lIGxvZ2ljaWVsLCBuaSBkJnJzcXVvO3VuZSBST00gZW4gcGFydGljdWxpZXIsIG5pIGR1IG5veWF1IChrZXJuZWwpIHV0aWxpc8OpLCBtYWlzIGJpZW4gZCZyc3F1bzt1biBwcm9ibMOobWUgZCZyc3F1bztvcmlnaW5lIG1hdMOpcmllbGxlLiBJbCB2aWVuZHJhaXQgZGUgbGEgY2FydGUgbcOocmUsIG1haXMgcGx1c2lldXJzIHNvdXJjZXMgcG9pbnRlbnQgZHUgZG9pZ3QgbGEgbcOpbW9pcmUgZmxhc2ggKE5BTkQpIHF1aSBhbHTDqXJlcmFpdCBwZXUgw6AgcGV1IGwmcnNxdW87w6lsw6ltZW50IGNlbnRyYWwgZHUgdMOpbMOpcGhvbmUuPC9wPg0KPHA%SWwgbiZyc3F1bzt5IGEgcG91ciBsJnJzcXVvO2luc3RhbnQgYXVjdW5lIGluZm9ybWF0aW9uLCBuaSBjb25maXJtYXRpb24gZG9ubsOpZSBwYXIgdm9peCBvZmZpY2llbGxlIGR1IGPDtHTDqSBkZSBjaGV6IFNhbXN1bmcuIEVuIHJldmFuY2hlLCBsZXMgYWNoZXRldXJzIHF1aSBvbnQgcmVuY29udHLDqSBjZSBwcm9ibMOobWUgb250IHRvdXMgZXUgdW4gY2hhbmdlbWVudCBncmF0dWl0IGRlIGNhcnRlIG3DqHJlLCBxdWVsIHF1ZSBzb2l0IGwmcnNxdW87w6l0YXQgZGFucyBsZXF1ZWwgbGUgdMOpbMOpcGhvbmUgw6l0YWl0IHJlbnZvecOpIChyb290LCBST00gcGVyc29ubmFsaXPDqWUmIzgyMzA7KS4gSMOpbGFzLCB1biBtYXTDqXJpZWwgZGUgbcOqbWUgZ8OpbsOpcmF0aW9uIGVzdCBtaXMgw6AgbGEgcGxhY2UsIGNlIHF1aSBsYWlzc2UgcGVuc2VyIHF1ZSBkJnJzcXVvO2ljaSBxdWVscXVlcyBtb2lzLCBsZSBzeW5kcm9tZSBkZSBsYSAmbGFxdW87Jm5ic3A7bW9ydCBzdWJpdGUmbmJzcDsmcmFxdW87IHNlIHByb2R1aXJhIMOgIG5vdXZlYXUuPC9wPg0KPHA%PGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHA6Ly9wb2NrZXRub3cuY29tLzIwMTIvMTIvMjEvc2dzaWlpLWR5aW5nIiB0YXJnZXQ9Il9ibGFuayI%U291cmNlPC9hPjwvcD4NCjxwPiZuYnNwOzwvcD4NCl1dPjwvY29udGVudDplbmNvZGVkPg0KCQkJPHdmdzpjb21tZW50UnNzPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjI1MjNfZ2FsYXh5LXMzLW5lLWRlbWFycmUtcGx1cy9mZWVkLzwvd2Z3OmNvbW1lbnRSc3M%DQoJCTxzbGFzaDpjb21tZW50cz4yNDM8L3NsYXNoOmNvbW1lbnRzPg0KCQk8L2l0ZW0%DQoNCgkJPGl0ZW0%DQoJCTx0aXRsZT5UZXN0IGRlIGxhIFNhbXN1bmcgR2FsYXh5IENhbWVyYTwvdGl0bGU%DQoJCTxsaW5rPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9waG90by8xMjI0MDdfdGVzdC1kZS1sYS1zYW1zdW5nLWdhbGF4eS1jYW1lcmEvPC9saW5rPg0KCQk8Y29tbWVudHM%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL3Bob3RvLzEyMjQwN190ZXN0LWRlLWxhLXNhbXN1bmctZ2FsYXh5LWNhbWVyYS8jY29tbWVudHM8L2NvbW1lbnRzPg0KCQk8cHViRGF0ZT5XZWQsIDI2IERlYyAyMDEyIDEwOjMzOjA2ICswMDAwPC9wdWJEYXRlPg0KCQk8ZGM6Y3JlYXRvcj5VbHJpY2ggUm96aWVyPC9kYzpjcmVhdG9yPg0KCQkJCTxjYXRlZ29yeT48IVtDREFUQVtQaG90b11dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtUZXN0XV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW0FuZHJvaWRdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbY2FtZXJhXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW0dhbGF4eV1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtnYWxheHkgY2FtZXJhXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW3NhbXN1bmddXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbU2Ftc3VuZyBHYWxheHkgQ2FtZXJhXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW1Rlc3QgZGUgbGEgU2Ftc3VuZyBHYWxheHkgQ2FtZXJhXV0%PC9jYXRlZ29yeT4NCgkJPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vP3A9MTIyNDA3PC9ndWlkPg0KCQk8ZGVzY3JpcHRpb24%PCFbQ0RBVEFbTG9uZ3RlbXBzIGVuIHJ1bWV1cnMsIGxlIEdhbGF4eSBDYW1lcmEgKEVLLUdDMTAwKSBhIMOpdMOpIGFubm9uY8OpIHBhciBTYW1zdW5nIGRhbnMgbGVzIHNlbWFpbmVzIHF1aSBvbnQgc3VpdmkgbOKAmWFubm9uY2UgZHUgY29tcGFjdCBkZSBOaWtvbi4gTWFsZ3LDqSBxdWVscXVlcyBwb2ludHMgY29tbXVucyBjb21tZSBsZSBjYXB0ZXVyIDE2TXBpeCwgd2lmaSwgQmx1ZXRvb3RoIGV0IEdQUyBpbnTDqWdyw6lzLCBpbCBlc3QgbWlldXggcG91cnZ1IHRlY2huaXF1ZW1lbnQgYXZlYyB1biB6b29tIDIxeCwgdW5lIGNvbm5lY3Rpdml0w6kgM0csIGV0IHN1cnRvdXQgQW5kcm9pZCA0LjEgOyBwb3VyIHVuIHByaXggY29uc2VpbGzDqSBkZSA1NDnigqwgKG1haXMgZGlzcG9uaWJsZSDDoCA0MzTigqwsIGF1eHF1ZWxzIG9uIHBldXQgZMOpZHVpcmUgdW5lIE9EUiBkZSAxMDDigqwpLiBUZXN0IGR1IE5pa29uIENvb2xwaXggUzgwMGMuLi4gPGEgY2xhc3M9Im1vcmUtbGluayIgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL3Bob3RvLzEyMjQwN190ZXN0LWRlLWxhLXNhbXN1bmctZ2FsYXh5LWNhbWVyYS8iPkxpcmUgbGEgc3VpdGUuLi48L2E%XV0%PC9kZXNjcmlwdGlvbj4NCgkJCQk8Y29udGVudDplbmNvZGVkPjwhW0NEQVRBWzxwPjxiIGlkPSJpbnRlcm5hbC1zb3VyY2UtbWFya2VyXzAuNDkwNjc5MDQzODEwODE0NiI%TG9uZ3RlbXBzIGVuIHJ1bWV1cnMsIGxlIEdhbGF4eSBDYW1lcmEgKEVLLUdDMTAwKSBhIMOpdMOpIGFubm9uY8OpIHBhciBTYW1zdW5nIGRhbnMgbGVzIHNlbWFpbmVzIHF1aSBvbnQgc3VpdmkgbOKAmWFubm9uY2UgZHUgY29tcGFjdCBkZSBOaWtvbi4gPC9iPjwvcD4NCjxwPjxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9waG90by8xMjI0MDdfdGVzdC1kZS1sYS1zYW1zdW5nLWdhbGF4eS1jYW1lcmEvYXR0YWNobWVudC9kc2MwMzYwNy8iIHJlbD0iYXR0YWNobWVudCB3cC1hdHQtMTIyNDIwIj48aW1nIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLW1lZGl1bSB3cC1pbWFnZS0xMjI0MjAgY29sb3Jib3gtMTIyNDA3IiBhbHQ9IkRTQzAzNjA3IiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvRFNDMDM2MDctNjMweDM1My5qcGciIHdpZHRoPSI2MzAiIGhlaWdodD0iMzUzIiAvPjwvYT48L3A%DQo8cD48YiBpZD0iaW50ZXJuYWwtc291cmNlLW1hcmtlcl8wLjQ5MDY3OTA0MzgxMDgxNDYiPk1hbGdyw6kgcXVlbHF1ZXMgcG9pbnRzIGNvbW11bnMgY29tbWUgbGUgY2FwdGV1ciAxNk1waXgsIHdpZmksIEJsdWV0b290aCBldCBHUFMgaW50w6lncsOpcywgaWwgZXN0IG1pZXV4IHBvdXJ2dSB0ZWNobmlxdWVtZW50IGF2ZWMgdW4gem9vbSAyMXgsIHVuZSBjb25uZWN0aXZpdMOpIDNHLCBldCBzdXJ0b3V0IEFuZHJvaWQgNC4xIDsgcG91ciB1biBwcml4IGNvbnNlaWxsw6kgZGUgNTQ54oKsIChtYWlzIGRpc3BvbmlibGUgw6AgNDM04oKsLCBhdXhxdWVscyBvbiBwZXV0IDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwOi8vd3d3LnNhbXN1bmcuY29tL2ZyL3Byb21vdGlvbnMvZGV0YWlsP2V2ZW50SWQ9MTk5NiI%ZMOpZHVpcmUgdW5lIE9EUiBkZSAxMDDigqw8L2E%KS48c3BhbiBpZD0ibW9yZS0xMjI0MDciPjwvc3Bhbj48L2I%PC9wPg0KPHVsPg0KPGxpPjxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9waG90by8xMjIwODRfdGVzdC1kdS1uaWtvbi1jb29scGl4LXM4MDBjLyIgdGFyZ2V0PSJfYmxhbmsiPlRlc3QgZHUgTmlrb24gQ29vbHBpeCBTODAwYzwvYT48L2xpPg0KPGxpPjxzdHJvbmc%PGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL3Bob3RvLzEyMjQwN190ZXN0LWRlLWxhLXNhbXN1bmctZ2FsYXh5LWNhbWVyYS8iIHRhcmdldD0iX2JsYW5rIj5UZXN0IGRlIGxhIFNhbXN1bmcgR2FsYXh5IENhbWVyYTwvYT48L3N0cm9uZz48L2xpPg0KPGxpPjxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9waG90by8xMjI0MzdfZmFjZS1hLWZhY2Utbmlrb24tY29vbHBpeC1zODAwYy12cy1zYW1zdW5nLWdhbGF4eS1jYW1lcmEvIiB0YXJnZXQ9Il9ibGFuayI%RmFjZSDDoCBmYWNlIDogTmlrb24gQ29vbHBpeCBTODAwYyB2cyBTYW1zdW5nIEdhbGF4eSBDYW1lcmE8L2E%PC9saT4NCjwvdWw%DQo8aDE%QXNwZWN0IGfDqW7DqXJhbDwvaDE%DQo8cD5BdmVjIHVuIMOpY3JhbiBkZSA0LDggcG91Y2VzLCBsZSBTYW1zdW5nIEdhbGF4eSBDYW1lcmEgZXN0IGFzc2V6IG1hc3NpZiAoZXQgcMOoc2UgNDgwIGdyYW1tZXMpIHRvdXQgZW4gbuKAmWF0dGVpZ25hbnQgcGFzIGxhIHRhaWxsZSBk4oCZdW4gR2FsYXh5IE5vdGUuPC9wPg0KPHA%PGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL3Bob3RvLzEyMjQwN190ZXN0LWRlLWxhLXNhbXN1bmctZ2FsYXh5LWNhbWVyYS9hdHRhY2htZW50L2RzYzAzNTc4LTIvIiByZWw9ImF0dGFjaG1lbnQgd3AtYXR0LTEyMjQxMyI%PGltZyBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1tZWRpdW0gd3AtaW1hZ2UtMTIyNDEzIGNvbG9yYm94LTEyMjQwNyIgYWx0PSJEU0MwMzU3OCIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL0RTQzAzNTc4LTYzMHgzNTMuanBnIiB3aWR0aD0iNjMwIiBoZWlnaHQ9IjM1MyIgLz48L2E%IDxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9waG90by8xMjI0MDdfdGVzdC1kZS1sYS1zYW1zdW5nLWdhbGF4eS1jYW1lcmEvYXR0YWNobWVudC9kc2MwMzU4NC8iIHJlbD0iYXR0YWNobWVudCB3cC1hdHQtMTIyNDE0Ij48aW1nIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLW1lZGl1bSB3cC1pbWFnZS0xMjI0MTQgY29sb3Jib3gtMTIyNDA3IiBhbHQ9IkRTQzAzNTg0IiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvRFNDMDM1ODQtNjMweDM1My5qcGciIHdpZHRoPSI2MzAiIGhlaWdodD0iMzUzIiAvPjwvYT4gPGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL3Bob3RvLzEyMjQwN190ZXN0LWRlLWxhLXNhbXN1bmctZ2FsYXh5LWNhbWVyYS9hdHRhY2htZW50L2RzYzAzNTg1LyIgcmVsPSJhdHRhY2htZW50IHdwLWF0dC0xMjI0MTUiPjxpbWcgY2xhc3M9ImFsaWduY2VudGVyIHNpemUtbWVkaXVtIHdwLWltYWdlLTEyMjQxNSBjb2xvcmJveC0xMjI0MDciIGFsdD0iRFNDMDM1ODUiIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9EU0MwMzU4NS02MzB4MzUzLmpwZyIgd2lkdGg9IjYzMCIgaGVpZ2h0PSIzNTMiIC8%PC9hPiA8YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vcGhvdG8vMTIyNDA3X3Rlc3QtZGUtbGEtc2Ftc3VuZy1nYWxheHktY2FtZXJhL2F0dGFjaG1lbnQvZHNjMDM1ODYvIiByZWw9ImF0dGFjaG1lbnQgd3AtYXR0LTEyMjQxNiI%PGltZyBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1tZWRpdW0gd3AtaW1hZ2UtMTIyNDE2IGNvbG9yYm94LTEyMjQwNyIgYWx0PSJEU0MwMzU4NiIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL0RTQzAzNTg2LTYzMHgzNTMuanBnIiB3aWR0aD0iNjMwIiBoZWlnaHQ9IjM1MyIgLz48L2E%IDxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9waG90by8xMjI0MDdfdGVzdC1kZS1sYS1zYW1zdW5nLWdhbGF4eS1jYW1lcmEvYXR0YWNobWVudC9kc2MwMzU4Ny8iIHJlbD0iYXR0YWNobWVudCB3cC1hdHQtMTIyNDE3Ij48aW1nIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLW1lZGl1bSB3cC1pbWFnZS0xMjI0MTcgY29sb3Jib3gtMTIyNDA3IiBhbHQ9IkRTQzAzNTg3IiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvRFNDMDM1ODctNjMweDM1My5qcGciIHdpZHRoPSI2MzAiIGhlaWdodD0iMzUzIiAvPjwvYT48L3A%DQo8cD48YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vcGhvdG8vMTIyNDA3X3Rlc3QtZGUtbGEtc2Ftc3VuZy1nYWxheHktY2FtZXJhL2F0dGFjaG1lbnQvY29tcGFyYWlzb24tZGUtdGFpbGxlLWR1LXNhbXN1bmctZ2FsYXh5LWNhbWVyYS8iIHJlbD0iYXR0YWNobWVudCB3cC1hdHQtMTIyNDE4Ij48aW1nIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLW1lZGl1bSB3cC1pbWFnZS0xMjI0MTggY29sb3Jib3gtMTIyNDA3IiBhbHQ9IkNvbXBhcmFpc29uIGRlIHRhaWxsZSBkdSBTYW1zdW5nIEdhbGF4eSBDYW1lcmEiIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9QaG90b19Db21wYXJhaXNvbi1kZS10YWlsbGUtZHUtU2Ftc3VuZy1HYWxheHkuanBnIiB3aWR0aD0iNjMwIiBoZWlnaHQ9IjQyMCIgLz48L2E%PC9wPg0KPHAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsiPkRlIGdhdWNoZSDDoCBkcm9pdGUgJiM4MjExOyB1biBTYW1zdW5nIEdhbGF4eSBTLCB1biBpUG9kIFRvdWNoICg1ZSBnw6luw6lyYXRpb24pLCB1biBTYW1zdW5nIEdhbGF4eSBDYW1lcmEsIHVuIFNhbXN1bmcgR2FsYXh5IE5vdGU8L3A%DQo8cD5DZXR0ZSB0YWlsbGUgbHVpIHBlcm1ldCBk4oCZaMOpcml0ZXIgZOKAmXVuZSBwb2lnbsOpZSBhbnRpZMOpcmFwYW50ZSBzdXIgc29uIGPDtHTDqSBkcm9pdC4gVHLDqHMgcHJhdGlxdWUgZW4gdXRpbGlzYXRpb24gcGhvdG8sIGNldHRlIGZvcm1lIGNvbnZpZW50IG1vaW5zIHNpIGzigJlvbiBhIHVuIHVzYWdlIGJhbGFkZXVyIG51bcOpcmlxdWXigKY8L3A%DQo8cD48YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vcGhvdG8vMTIyNDA3X3Rlc3QtZGUtbGEtc2Ftc3VuZy1nYWxheHktY2FtZXJhL2F0dGFjaG1lbnQvYXZhbnQtZHUtc2Ftc3VuZy1nYWxheHktY2FtZXJhLTIvIiByZWw9ImF0dGFjaG1lbnQgd3AtYXR0LTEyMjQxOSI%PGltZyBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1tZWRpdW0gd3AtaW1hZ2UtMTIyNDE5IGNvbG9yYm94LTEyMjQwNyIgYWx0PSJBdmFudCBkdSBTYW1zdW5nIEdhbGF4eSBDYW1lcmEiIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9QaG90b19BdmFudC1kdS1TYW1zdW5nLUdhbGF4eS1DYW1lcmFfMS02MzB4NDIwLmpwZyIgd2lkdGg9IjYzMCIgaGVpZ2h0PSI0MjAiIC8%PC9hPjwvcD4NCjxwPlNvbiBvYmplY3RpZiByZXN0ZSBwcm90dWLDqXJhbnQsIG3Dqm1lIHJlcGxpw6ksIGNlIHF1aSBkb25uZSDDoCBs4oCZZW5zZW1ibGUgdW5lIGJvbm5lIMOpcGFpc3NldXIgOiBs4oCZYXBwYXJlaWwgbmUgc2VyYSBwYXMgZGlzY3JldCBkYW5zIHVuZSBwb2NoZSBldCBsYSBjb3VsZXVyIGJsYW5jaGUgZHUgYm:DrnRpZXIgdm91cyBmZXJhIHBhc3NlciBlbmNvcmUgbW9pbnMgaW5hcGVyw6d14oCmPC9wPg0KPGgxPkludGVyZmFjZXM8L2gxPg0KPHA%R3LDomNlIMOgIHNhIHRhaWxsZSAob2NjdXBhbnQgcHJlc3F1ZSB0b3V0IGxlIGRvcyksIGxhIHBsdXBhcnQgZGVzIGludGVyYWN0aW9ucyBzZSBmb250IHBhciBs4oCZw6ljcmFuIHRhY3RpbGUgZHUgR2FsYXh5IENhbWVyYS4gUGh5c2lxdWVtZW50LCBzZXVscyBzdWJzaXN0ZW50IHVuIGJvdXRvbiBtYXJjaGUvYXJyw6p0LCB1biBkw6ljbGVuY2hldXIgZXQgdW4gc8OpbGVjdGV1ciBkZSB6b29tL2TDqXpvb20uPC9wPg0KPHA%PGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL3Bob3RvLzEyMjQwN190ZXN0LWRlLWxhLXNhbXN1bmctZ2FsYXh5LWNhbWVyYS9hdHRhY2htZW50L2Rlc3N1cy1kdS1zYW1zdW5nLWdhbGF4eS1jYW1lcmEvIiByZWw9ImF0dGFjaG1lbnQgd3AtYXR0LTEyMjQyMSI%PGltZyBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1tZWRpdW0gd3AtaW1hZ2UtMTIyNDIxIGNvbG9yYm94LTEyMjQwNyIgYWx0PSJEZXNzdXMgZHUgU2Ftc3VuZyBHYWxheHkgQ2FtZXJhIiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvUGhvdG9fRGVzc3VzLWR1LVNhbXN1bmctR2FsYXh5LmpwZyIgd2lkdGg9IjYzMCIgaGVpZ2h0PSI0MjAiIC8%PC9hPjwvcD4NCjxwIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7Ij48ZW0%Rmxhc2ggcsOpdHJhY3RhYmxlLCBCb3V0b24gT24vT2ZmLCBEw6ljbGVuY2hldXIgZXQgU8OpbGVjdGV1ciBkZSB6b29tLjwvZW0%PC9wPg0KPHA%RXF1aXDDqSBk4oCZQW5kcm9pZCA0LjEsIGzigJlhcHBhcmVpbCBhIGFpbnNpIHNlcyBib3V0b25zIEFjY3VlaWwsIFJldG91ciBldCBNZW51IGludMOpZ3LDqXMgw6AgbOKAmcOpY3Jhbi4gTOKAmWludGVyZmFjZSBlc3QgZmFjaWxlIMOgIGFwcHLDqWhlbmRlciBtYWlzIG9uIHBldXQgcmVncmV0dGVyIHF14oCZZW4gbW9kZSBwaG90by92aWTDqW8sIGxlIGJvdXRvbiBBY2N1ZWlsIChxdWkgc2VydCBkZSBib3V0b24gUmV0b3VyKSBjaGFuZ2UgY29uc3RhbW1lbnQgZOKAmWVtcGxhY2VtZW50IGTigJl1biDDqWNyYW4gw6AgbOKAmWF1dHJlLjwvcD4NCjxwPjxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9waG90by8xMjI0MDdfdGVzdC1kZS1sYS1zYW1zdW5nLWdhbGF4eS1jYW1lcmEvYXR0YWNobWVudC9lY3Jhbi1waG90by1zYW1zdW5nLTIvIiByZWw9ImF0dGFjaG1lbnQgd3AtYXR0LTEyMjQyMiI%PGltZyBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1tZWRpdW0gd3AtaW1hZ2UtMTIyNDIyIGNvbG9yYm94LTEyMjQwNyIgYWx0PSJFY3JhbiBwaG90byBTYW1zdW5nIiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvRWNyYW4tcGhvdG8tU2Ftc3VuZzEtNjMweDM1NC5qcGciIHdpZHRoPSI2MzAiIGhlaWdodD0iMzU0IiAvPjwvYT48L3A%DQo8cD5Ub3Vqb3VycyBlbiBtb2RlIHBob3RvLCBsZXMgcsOpZ2xhZ2VzIG1hbnVlbHMgc2UgZm9udCBncsOiY2Ugw6AgZGVzIG1vbGV0dGVzIHZpcnR1ZWxsZXMsIHRyw6hzIGZhY2lsZXMgZOKAmXV0aWxpc2F0aW9uLjwvcD4NCjxwPjxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9waG90by8xMjI0MDdfdGVzdC1kZS1sYS1zYW1zdW5nLWdhbGF4eS1jYW1lcmEvYXR0YWNobWVudC9kc2MwMzU5My8iIHJlbD0iYXR0YWNobWVudCB3cC1hdHQtMTIyNDIzIj48aW1nIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLW1lZGl1bSB3cC1pbWFnZS0xMjI0MjMgY29sb3Jib3gtMTIyNDA3IiBhbHQ9Ik1vZGUgbWFudWVsIiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvRFNDMDM1OTMtNjMweDM1My5qcGciIHdpZHRoPSI2MzAiIGhlaWdodD0iMzUzIiAvPjwvYT48L3A%DQo8aDE%T3B0aXF1ZTwvaDE%DQo8cD5Db21tZSBOaWtvbiwgU2Ftc3VuZyBwcm9wb3NlIHVuIGNhcHRldXIgQ01PUyAxLzIsMyBwb3VjZSBk4oCZZW52aXJvbiAxN01waXggKGF2ZWMgMTZNcGl4IGVmZmVjdGlmcyBzb2l0IDQ2MDggcGFyIDM0NTYgcGl4ZWxzKS48L3A%DQo8cD5MZSB6b29tIDIxeCBlc3QgZGUgY29uY2VwdGlvbiBtYWlzb24gYXZlYyB1bmUgZm9jYWxlIHZhcmlhbnQgZGUgNC4xIMOgIDg2LjFtbSAow6lxdWl2YWxlbnQgZW4gMzVtbSDDoCB1biBvYmplY3RpZiAyMy00ODNtbSksIGV0IHVuZSBvdXZlcnR1cmUgbWF4aW1hbGUgxpIvMi44LTUuOS48YnIgLz4NCkNldHRlIGxvbmd1ZSBmb2NhbGUgZGUgNDgzbW0gbHVpIHBlcm1ldCBkZSByaXZhbGlzZXIgYXZlYyBkZXMgdMOpbMOpb2JqZWN0aWZzLCBzdXJ0b3V0IGF2ZWMgdW5lIG91dmVydHVyZSBkZSDGki81LjkgcXVpIHJlc3RlIHJhaXNvbm5hYmxlLCBtYWlzIGzigJlhdXRvZm9jdXMgYSBhbG9ycyB1biBwZXUgZGUgbWFsIHBvdXIgYXZvaXIgdW5lIGJvbm5lIG1pc2UgYXUgcG9pbnQuPC9wPg0KPHA%PGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL3Bob3RvLzEyMjQwN190ZXN0LWRlLWxhLXNhbXN1bmctZ2FsYXh5LWNhbWVyYS9hdHRhY2htZW50L3pvb20tYS00MW1tLTIvIiByZWw9ImF0dGFjaG1lbnQgd3AtYXR0LTEyMjQyNCI%PGltZyBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1tZWRpdW0gd3AtaW1hZ2UtMTIyNDI0IGNvbG9yYm94LTEyMjQwNyIgYWx0PSJab29tIMOgIDQsMW1tIiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvRUstR0MxMDBfWm9vbS1hLTQxbW1fMS02MzB4NDcyLmpwZyIgd2lkdGg9IjYzMCIgaGVpZ2h0PSI0NzIiIC8%PC9hPjwvcD4NCjxwIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7Ij5ab29tIMOgIDQsMSBtbTwvcD4NCjxwIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7Ij48YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vcGhvdG8vMTIyNDA3X3Rlc3QtZGUtbGEtc2Ftc3VuZy1nYWxheHktY2FtZXJhL2F0dGFjaG1lbnQvem9vbS1hLTg2MW1tLTIvIiByZWw9ImF0dGFjaG1lbnQgd3AtYXR0LTEyMjQyNSI%PGltZyBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1tZWRpdW0gd3AtaW1hZ2UtMTIyNDI1IGNvbG9yYm94LTEyMjQwNyIgYWx0PSJab29tIMOgIDg2LDFtbSIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL0VLLUdDMTAwX1pvb20tYS04NjFtbV8xLTYzMHg0NzIuanBnIiB3aWR0aD0iNjMwIiBoZWlnaHQ9IjQ3MiIgLz48L2E%PC9wPg0KPHAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsiPlpvb20gw6AgODYsMW1tPC9wPg0KPGgxIHN0eWxlPSJ0ZXh0LWFsaWduOiBsZWZ0OyI%RWNyYW48L2gxPg0KPHAgc3R5bGU9InRleHQtYWxpZ246IGxlZnQ7Ij5M4oCZw6ljcmFuIExDRCBkdSBHYWxheHkgQ2FtZXJhIGVzdCBk4oCZdW5lIHRhaWxsZSBjb25mb3J0YWJsZSBhdmVjIHNhIGRpYWdvbmFsZSBkZSAxMmNtICg0LjggcG91Y2VzKS4gSWwgcHJvcG9zZSB1bmUgcsOpc29sdXRpb24gSEQgZGUgMTI4MCYjMjE1OzcyMCBhdmVjIHVuZSBwcm9mb25kZXVyIGRlIDE2IG1pbGxpb25zIGRlIGJpdC48L3A%DQo8cD48YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vcGhvdG8vMTIyNDA3X3Rlc3QtZGUtbGEtc2Ftc3VuZy1nYWxheHktY2FtZXJhL2F0dGFjaG1lbnQvZG9zLWR1LXNhbXN1bmctZ2FsYXh5LWNhbWVyYS8iIHJlbD0iYXR0YWNobWVudCB3cC1hdHQtMTIyNDI2Ij48aW1nIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLW1lZGl1bSB3cC1pbWFnZS0xMjI0MjYgY29sb3Jib3gtMTIyNDA3IiBhbHQ9IkRvcyBkdSBTYW1zdW5nIEdhbGF4eSBDYW1lcmEiIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9QaG90b19Eb3MtZHUtU2Ftc3VuZy1HYWxheHktQ2FtZXJhXy02MzB4NDIwLmpwZyIgd2lkdGg9IjYzMCIgaGVpZ2h0PSI0MjAiIC8%PC9hPjwvcD4NCjxwPkRvdMOpIGTigJl1biB0cmFpdGVtZW50IGJyaWxsYW50ICjigJxnbG9zc3nigJ0pLCBpbCBvZmZyZSB1bmUgYXBwYXJlbmNlIGF2YW50YWdldXNlIMOgIHZvcyBpbWFnZXMgZXQgZXN0IChyZWxhdGl2ZW1lbnQpIGZpZMOobGUgYXUgcmVuZHUgZmluYWwsIGxhIGNvbnRyZXBhcnRpZSDDqXRhbnQgcXVlIGxlcyB0cmFjZXMgZGUgZG9pZ3RzIGRldmllbm5lbnQgaW1tw6lkaWF0ZW1lbnQgcGx1cyB2aXNpYmxlc%KApjwvcD4NCjxoMT5TdG9ja2FnZTwvaDE%DQo8cD5EZSBiYXNlLCBs4oCZYXBwYXJlaWwgZGlzcG9zZSBkZSA4R28gZGUgbcOpbW9pcmUgaW50ZXJuZSAoNEdvIHN5c3TDqG1lIGV0IDRHbyB1dGlsaXNhdGV1cikgLiBJbCBkaXNwb3NlIMOgIGPDtHTDqSBkZSBjZWxhIGTigJl1biBzbG90IHBvdXIgY2FydGUgbWljcm8tU0QgKGNvbXBhdGlibGUgbWljcm8tU0RIQyBldCBtaWNyby1TRFhDIGRhbnMgbGEgbGltaXRlIGRlIDY0R28pLjwvcD4NCjxwPjxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9waG90by8xMjI0MDdfdGVzdC1kZS1sYS1zYW1zdW5nLWdhbGF4eS1jYW1lcmEvYXR0YWNobWVudC9kZXNzb3VzLWR1LXNhbXN1bmctZ2FsYXh5LWNhbWVyYS8iIHJlbD0iYXR0YWNobWVudCB3cC1hdHQtMTIyNDI3Ij48aW1nIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLW1lZGl1bSB3cC1pbWFnZS0xMjI0MjcgY29sb3Jib3gtMTIyNDA3IiBhbHQ9IkRlc3NvdXMgZHUgU2Ftc3VuZyBHYWxheHkgQ2FtZXJhIiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvUGhvdG9fRGVzc291cy1kdS1TYW1zdW5nLUdhbGF4eS5qcGciIHdpZHRoPSI2MzAiIGhlaWdodD0iMTU3IiAvPjwvYT48L3A%DQo8cD5DZSBjaG9peCBkdSBmb3JtYXQgbWljcm8tU0QgZXN0IHJlZ3JldHRhYmxlIDogbcOqbWUgc%KAmWlsIHBlcm1ldCBkZSBnYWduZXIgZW4gdm9sdW1lLCDDoCBwcml4IMOpcXVpdmFsZW50LCBvbiBwZXJkIGVuIHZpdGVzc2UgZOKAmcOpY3JpdHVyZSBldCBlbiBjYXBhY2l0w6kgw6AgbW9pbnMgZGUgc29ydGlyIGxlIHBvcnRlZmV1aWxsZS4gTGEgcGx1cGFydCBkZXMgcG9zc2Vzc2V1cnMgZOKAmWFwcGFyZWlscyBBbmRyb2lkIHNlcm9udCBjZXBlbmRhbnQgaGV1cmV1eCBkZSBwb3V2b2lyIHLDqXV0aWxpc2VyIGxlcyBjYXJ0ZXMgYWNxdWlzZXMgZW4gY29tcGzDqW1lbnQgZGUgbGV1ciBtb2JpbGUgb3UgdGFibGV0dGUuPC9wPg0KPGgxPkNvbm5lY3Rpdml0w6k8L2gxPg0KPHA%TOKAmXVuIGRlcyBwb2ludHMgZm9ydHMgZHUgR2FsYXh5IENhbWVyYSBlc3Qgc2EgY29ubmVjdGl2aXTDqSB2YXJpw6llIHF1aSBwZXJtZXQgZGUgbOKAmXV0aWxpc2VyIGRhbnMgZGUgbm9tYnJldXNlcyBzaXR1YXRpb25zLjwvcD4NCjxwPkRvdMOpIGRlIGxhIDNHIChIU1BBKzIxKSB2aWEgdW5lIG1pY3JvLVNJTSwgY2UgcXVpIGxlIHPDqXBhcmVyYWl0IGTigJl1biBzbWFydHBob25lIG5lIHNlcmFpdCBxdWUgbOKAmWFwdGl0dWRlIMOgIMOpbWV0dHJlIGV0IHJlY2V2b2lyIGRlcyBhcHBlbHMgKGV0IGRlcyBTTVMvTU1TKS48YnIgLz4NCklsIHByb3Bvc2Ugw6AgY8O0dMOpIGxlcyBpbmNvbnRvdXJuYWJsZXMgV2lmaSAoYS9iL2cvbiksIEJsdWV0b290aCAoNC4wKSwgSERNSSAoZm9ybWF0IG1pY3JvKSwgbWljcm8tVVNC4oCmPC9wPg0KPHA%PGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL3Bob3RvLzEyMjQwN190ZXN0LWRlLWxhLXNhbXN1bmctZ2FsYXh5LWNhbWVyYS9hdHRhY2htZW50L3Byb2ZpbC1kcm9pdC1kdS1zYW1zdW5nLWdhbGF4eS1jYW1lcmEvIiByZWw9ImF0dGFjaG1lbnQgd3AtYXR0LTEyMjQyOCI%PGltZyBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1tZWRpdW0gd3AtaW1hZ2UtMTIyNDI4IGNvbG9yYm94LTEyMjQwNyIgYWx0PSJQcm9maWwgZHJvaXQgZHUgU2Ftc3VuZyBHYWxheHkgQ2FtZXJhIiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvUGhvdG9fUHJvZmlsLWRyb2l0LWR1LVNhbXN1bmctR2FsYXh5LmpwZyIgd2lkdGg9IjYzMCIgaGVpZ2h0PSIzMTUiIC8%PC9hPjwvcD4NCjxwPkJvbnVzIDogdW5lIHByaXNlIGphY2sgZGVzdGluw6llIMOgIHJlY2V2b2lyIHVuIGNhc3F1ZSAobWFpcyBhIHByaW9yaSBwYXMgZGUgbWljcm8gZXh0ZXJuZSksIGludXRpbGUgcG91ciBmaWxtZXIgKHZ1ZSBsYSBxdWFsaXTDqSBtw6lkaW9jcmUgZGVzIG1pY3JvcyBpbnTDqWdyw6kpIG1haXMgYmllbnZlbnVlIHNpIGzigJlvbiB1dGlsaXNlIHNvbiBHYWxheHkgQ2FtZXJhIGNvbW1lIGJhbGFkZXVyIG91IG1pbmktdGFibGV0dGUuPC9wPg0KPGgxPk1vZGVzIHBob3RvIGV0IHZpZMOpbzwvaDE%DQo8cD5MZSBHYWxheHkgQ2FtZXJhIHByb3Bvc2UgYXUgcHJlbWllciBsYW5jZW1lbnQgZGUgcHJlbmRyZSBkZXMgcGhvdG9zIGVuIG1vZGUg4oCcU21hcnQgQXV0b%KAnSBxdWkgZXN0IHNpbXBsZW1lbnQgdW4gbW9kZSBBdXRvbWF0aXF1ZS48L3A%DQo8cD5TZXMgbW9kZXMgZGl0cyDigJxJbnRlbGxpZ2VudHPigJ0gY29ycmVzcG9uZGVudCDDoCBkZXMgc2PDqG5lcyBldCBlZmZldHMgKEJlYXV0w6ksIE1laWxsZXVyZSBpbWFnZSwgUmFmYWxlLCBNZWlsbGV1cmVzIHBvc2VzLCBOdWl0LCBQYW5vcmFtYSwgUGF5c2FnZSwgQ291Y2hlciBkZSBzb2xlaWwsIEZldSBk4oCZYXJ0aWZpY2UsIE1hY3JvLCBBY3Rpb24sIENhc2NhZGUsIEx1bWnDqHJlLCBTaWxob3VldHRlLCBUb24gcmljaGUpLjwvcD4NCjxwPkRlcyBmaWx0cmVzIHNvbnQgYXVzc2kgcHJvcG9zw6lzLCBzb3VzIGzigJlhcHBlbGxhdGlvbiDigJxlZmZldHPigJ0gOiBTw6lwaWEsIE5vaXIgZXQgQmxhbmMsIE7DqWdhdGlmLCBFZmZldCB2aWVpbGxlIGltYWdlLCBTb2xlaWwsIENsYXNzaXF1ZSwgUsOpdHJvLCBDb3VsZXVycyBBdHTDqW51w6llcywgTm9zdGFsZ2llLCBCYW5kZSBkZXNzaW7DqWUsIEVzcXVpc3NlIHBhc3RlbCwgTm9pciBHb3RoaXF1ZSwgSW1wcmVzc2lvbm5pc3RlLjwvcD4NCjxwPkNvbnRyYWlyZW1lbnQgYXUgQ29vbHBpeCBTODAwYywgZGVzIG1vZGVzIEV4cGVydCBhdmVjIHBsdXMgZGUgY29udHLDtGxlcyBzb250IGRpc3BvbmlibGVzIDogUCAoUHJvZ3JhbSA6IGF1dG8gYXZlYyBwYXJhbcOodHJlcyBzdXBwbMOpbWVudGFpcmVzKSwgQSAoQXBlcnR1cmUgOiBwcmlvcml0w6kgw6AgbOKAmW91dmVydHVyZSksIFMgKFNwZWVkIDogcHJpb3JpdMOpIMOgIGxhIHZpdGVzc2UpLE0gKE1hbnVlbCkuIExlcyByw6lnbGFnZXMgZGlzcG9uaWJsZXMgZGV2aWVubmVudCBhbG9ycyB0csOocyBjb21wbGV0cy48L3A%DQo8cD48YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vcGhvdG8vMTIyNDA3X3Rlc3QtZGUtbGEtc2Ftc3VuZy1nYWxheHktY2FtZXJhL2F0dGFjaG1lbnQvZWNyYW4tcGhvdG8tc2Ftc3VuZy0zLyIgcmVsPSJhdHRhY2htZW50IHdwLWF0dC0xMjI0MjkiPjxpbWcgY2xhc3M9ImFsaWduY2VudGVyIHNpemUtbWVkaXVtIHdwLWltYWdlLTEyMjQyOSBjb2xvcmJveC0xMjI0MDciIGFsdD0iRWNyYW4gcGhvdG8gU2Ftc3VuZyIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL0VjcmFuLXBob3RvLVNhbXN1bmcyLTYzMHgzNTQuanBnIiB3aWR0aD0iNjMwIiBoZWlnaHQ9IjM1NCIgLz48L2E%PC9wPg0KPHA%QXZlYyB1bmUgbW9udMOpZSBlbiBwcml4IChldCBlbiBnYW1tZSwgbuKAmWF5YW50IHBhcyBwZXVyIGRlcyBtb3RzKSBwYXIgcmFwcG9ydCBhdSBDb29scGl4IFM4MDBjLCBsZSBHYWxheHkgQ2FtZXJhIGF1cmFpdCBwdSBwcm9wb3NlciBsZXMgZmljaGllcnMgUkFXLCBtYWlzIG5vbiwgbGVzIHBob3RvcyBzb250IGRpcmVjdGVtZW50IGVucmVnaXN0csOpZXMgZW4gSlBFRy48L3A%DQo8cD5FbiB2aWTDqW8sIGlsIHByb3Bvc2UgbGUgRnVsbEhEIDE5MjB4MTA4MHB4IMOgIDMwaXBzLCBkZSBsYSBoYXV0ZSBmcsOpcXVlbmNlIDEyODB4NzIwcHggw6AgNjBpcHMgdm9pcmUgZHUgc2xvdyBtb3Rpb24gZ3LDomNlIMOgIHVuIG1vZGUgZOKAmWVucmVnaXN0cmVtZW50IGVuIDc2OHg1MTJweCDDoCAxMjBpcHMuIERlIG5vbWJyZXV4IGZvcm1hdHMgdmlkw6lvIGV0IGF1ZGlvIHNvbnQgcHJvcG9zw6lzIDogQVZJLCBNUDQvM0dQLCBXTVYsIEZMViwgTUtWLCBXRUJNLCBNUDMsIEFBQywgQU1SLCBXTUEsIE9HRywgRkxBQywgM0dBL000QSwgV0FWLjwvcD4NCjxoMT5RdWFsaXTDqSBwaG90bzwvaDE%DQo8cD5MZSBwaXF1w6kgZHUgR2FsYXh5IENhbWVyYSBlc3QgcGx1dMO0dCBtb3llbi4gUGFzIGRlIHN1cGVyIG5ldHRldMOpLCBj4oCZZXN0IG3Dqm1lIG1vdSBlbiBncmFuZCBhbmdsZSBvw7kgbGVzIGVmZmV0cyBkZSBmbGFyZSBldCBkZSBkaWZmcmFjdGlvbiBzb250IGZyw6lxdWVudHMgZXQgcHJvbm9uY8OpcyBkw6hzIHF14oCZdW5lIHNvdXJjZSBsdW1pbmV1c2UgYXBwcm9jaGUgb3UgZXN0IGRhbnMgbGUgY2hhbXAuPC9wPg0KPHA%Q%KAmWVzdCBlbiB1c2FnZSB0w6lsw6lvYmplY3RpZiBxdWUgbGUgR2FsYXh5IENhbWVyYSBzZSByw6l2w6hsZSBkZSBib25uZSBmYWN0dXJlIGVuIHByb3Bvc2FudCBkZXMgaW1hZ2VzIGF2ZWMgZGUgbm9tYnJldXggZMOpdGFpbHMgbcOqbWUgw6AgYm9ubmUgZGlzdGFuY2UgZHUgc3VqZXQuPC9wPg0KPHA%PGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL3Bob3RvLzEyMjQwN190ZXN0LWRlLWxhLXNhbXN1bmctZ2FsYXh5LWNhbWVyYS9hdHRhY2htZW50L2VjcmFuLXBob3RvLXpvb20tc2Ftc3VuZy0yLyIgcmVsPSJhdHRhY2htZW50IHdwLWF0dC0xMjI0MzAiPjxpbWcgY2xhc3M9ImFsaWduY2VudGVyIHNpemUtbWVkaXVtIHdwLWltYWdlLTEyMjQzMCBjb2xvcmJveC0xMjI0MDciIGFsdD0iRWNyYW4gcGhvdG8gem9vbSBTYW1zdW5nIiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvRWNyYW4tcGhvdG8tem9vbS1TYW1zdW5nMS02MzB4MzU0LmpwZyIgd2lkdGg9IjYzMCIgaGVpZ2h0PSIzNTQiIC8%PC9hPjwvcD4NCjxwPkVuIHRlcm1lIGRlIGJydWl0LCBpbCByZXN0ZSByYWlzb25uYWJsZSBqdXNxdWUgSVNPODAwIGNlIHF1aSBwZXJtZXQgYXUgR2FsYXh5IENhbWVyYSBkZSBjYXB0dXJlciBkZXMgaW1hZ2VzIGRlIHN1amV0cyBzZSBkw6lwbGHDp2FudCB1biBwZXUgKHBhciBleGVtcGxlIHBhcm9sZSBvdSBtYXJjaGUpIG3Dqm1lIHPigJlpbCBmYWl0IHNvbWJyZS4gRW4gcmV2YW5jaGUsIGlsIHZhdXQgbWlldXggw6l2aXRlciBkZSBz4oCZYXZlbnR1cmVyIGF1LWRlbMOgIGRlIElTTzE2MDAsIGzigJlJU08zMjAwIMOpdGFudCB2cmFpbWVudCB1biBkZXJuaWVyIHJlY291cnMuPGJyIC8%DQpMYSBzdGFiaWxpc2F0aW9uIG9wdGlxdWUgZmFpdCBzb24gdHJhdmFpbCwgbWFpcyB0cm91dmUgc2VzIGxpbWl0ZXMuIERlIG51aXQgZXQgZW4gbW9kZSBhdXRvLCBsZSBTYW1zdW5nIHByaXZpbMOpZ2llIHVuZSBleHBvc2l0aW9uIGxvbmd1ZSDDoCBs4oCZYXVnbWVudGF0aW9uIGRlIGxhIHNlbnNpYmlsaXTDqSBldCBsZSBzeXN0w6htZSBPSVMgZXN0IGFsb3JzIGluZWZmaWNhY2UuIEF1dGFudCBkaXJlIGF1c3NpIHF14oCZYXZlYyBsZSB6b29tIDIxeCwgbGUgbW9pbmRyZSB0cmVtYmxlbWVudCBzZXJhIHRyb3AgaW1wb3J0YW50IHBvdXIgw6p0cmUgY29tcGVuc8OpLjwvcD4NCjxwPjxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9waG90by8xMjI0MDdfdGVzdC1kZS1sYS1zYW1zdW5nLWdhbGF4eS1jYW1lcmEvYXR0YWNobWVudC9udWl0LWF1dG8tNC8iIHJlbD0iYXR0YWNobWVudCB3cC1hdHQtMTIyNDMxIj48aW1nIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLW1lZGl1bSB3cC1pbWFnZS0xMjI0MzEgY29sb3Jib3gtMTIyNDA3IiBhbHQ9Ik51aXQgQXV0byIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL0VLLUdDMTAwX051aXQtQXV0b18xLTYzMHg0NzIuanBnIiB3aWR0aD0iNjMwIiBoZWlnaHQ9IjQ3MiIgLz48L2E%PC9wPg0KPHA%Jm5ic3A7PC9wPg0KPHA%Jm5ic3A7PC9wPg0KPGgxPlJhcGlkaXTDqSBldCByw6lhY3Rpdml0w6k8L2gxPg0KPHA%Q%KAmWVzdCBhdmVjIHVuZSBjZXJ0YWluZSBsb3VyZGV1ciBxdWUgbGUgR2FsYXh5IENhbWVyYSBkw6ltYXJyZS4gTWFsZ3LDqSB1bmUgY29uZmlndXJhdGlvbiB0csOocyDDoCBzb24gYXZhbnRhZ2UgKHByb2Nlc3NldXIgcXVhZGNvcmUgRXh5bm9zIDEuNEdIeiBldCAxIEdvIGRlIFJBTSksIGlsIHNlIHRyYcOubmUgZXQgc2UgbGFuY2UgcHJlc3F1ZSAyIGZvaXMgcGx1cyBsZW50ZW1lbnQgcXVlIGxlIE5pa29uIGVuIHByZW5hbnQganVzcXXigJnDoCAyNyBzZWNvbmRlcy48L3A%DQo8cD5IZXVyZXVzZW1lbnQsIGlsIHNlIG1ldCBhdXNzaSBlbiB2ZWlsbGUgZXQgcGVybWV0IGVuc3VpdGUgZGUgcmVwcmVuZHJlIGRlcyBwaG90b3MgZW4gMyBzZWNvbmRlcywgbGUgdGVtcHMgcXVlIHNvcnRlIGzigJlvYmplY3RpZi48L3A%DQo8cD5HbG9iYWxlbWVudCwgbGUgR2FsYXh5IENhbWVyYSBlc3QgcsOpYWN0aWYgZXQgcmFwaWRlLCBtYWlzIGlsIGVzdCBwYXJmb2lzIG3Dqm1lIHVuIHBldSB0cm9wIHNlbnNpYmxlIDogbGEgbWFpbiBhZ3JpcHBhbnQgbOKAmWFwcGFyZWlsIHBhciBsYSBkcm9pdGUsIGzigJnDqWNyYW4gZXN0IHBhcmZvaXMgZW4gY29udGFjdCBhdmVjIGxlIHBvdWNlLCBhY3RpdmFudCBpbm9waW7DqW1lbnQgbGUgYm91dG9uIFJldG91ciBvdSBBY2N1ZWlsLjwvcD4NCjxoMT5BdXRvbm9taWU8L2gxPg0KPHA%QXZlYyB1bmUgYmF0dGVyaWUgZGUgMTY1MG1BaCwgbGUgR2FsYXh5IENhbWVyYSBwZXJtZXQgZGUgZmFpcmUgMzQwIHBob3RvcyBlbiBub3JtZSBDSVBBLjwvcD4NCjxwPkVuIHV0aWxpc2F0aW9uIHRvdXJpc3RlLCBtZXMgdGVzdHMgbW9udHJlbnQgdW5lIGF1dG9ub21pZSBk4oCZZW52aXJvbiAxMWguIFN1ciB3aWZpIGVudmlyb24gN2gsIHBhciBjb250cmUgbmUgcGFzIGNvbXB0ZXIgc3VyIHBsdXMgZGUgM2ggYXZlYyBsZSBnw6lvdGFnZ2FnZSBHUFMgYWN0aXbDqS4gQWN0aXZlciBsYSAzRyBwZXJtZXQgZGUgcsOpZHVpcmUgZOKAmXVuIHRpZXJzIGxlcyBkdXLDqWVzIG1lbnRpb25uw6llc%KApjwvcD4NCjxoMT5FbiByw6lzdW3DqTwvaDE%DQo8cD5FbiBhcHBhcmVuY2Ugc29saWRlIGV0IHRyw6hzIG1vZGVybmUsIGxlIFNhbXN1bmcgR2FsYXh5IENhbWVyYSBkb25uZSBkZXMgcsOpc3VsdGF0cyBhc3NleiBjb3JyZWN0cyBlbiBwaG90bywgbWFpcyB0csOocyB2YXJpYWJsZXMgc2Vsb24gbGVzIHNpdHVhdGlvbnMuIExlIHpvb20gJiM4MjExOyBwcmF0aXF1ZSBkw6hzIHF14oCZaWwgZmF1dCBwcmVuZHJlIGRlcyBzdWpldHMgbG9pbnRhaW5zICYjODIxMTsgbmUgZG9ubmUgZW4gZWZmZXQgcGFzIGRlcyByw6lzdWx0YXRzIGhvbW9nw6huZXMgc3VyIHRvdXRlcyBsZXMgZm9jYWxlcyBldCBsYSBkw6l0ZWN0aW9uIGF1dG9mb2N1cyBwZXV0IMOqdHJlIGFsw6lhdG9pcmUuIElsIHJlc3RlIHRvdXRlZm9pcyBhdS1kZXNzdXMgZGVzIHBob3RvcGhvbmVzIGdyw6JjZSDDoCB1bmUgZm9ybXVsYXRpb24gb3B0aXF1ZSBwbHVzIGNvbXBsZXhlIGV0IMOgIGxhIHRhaWxsZSBkZSBzb24gY2FwdGV1ci48L3A%DQo8cD5JbCBlc3QgZW4gcmV2YW5jaGUgdHLDqHMgYmllbiBjb25uZWN0w6kgYXZlYyBs4oCZYWxsaWFuY2UgZGUgbGEgM0cgYXUgd2lmaS4gQXR0ZW50aW9uIHRvdXRlZm9pcyDDoCBs4oCZYXV0b25vbWllLCBjYXIgbGEgbXV0bGlwbGljYXRpb24gZGVzIGxpYWlzb25zIHNhbnMtZmlsIGV0IGxlIEdQUyByw6lkdWlzZW50IHRyw6hzIHJhcGlkZW1lbnQgbGUgbml2ZWF1IGRlIGJhdHRlcmllLjwvcD4NCjxwPkF1IGZpbmFsLCB1biBhcHBhcmVpbCBwb2x5dmFsZW50ICYjODIxMTsgcXVpIHBldXQgc2VydmlyIGRlIGJhbGFkZXVyIG91IGRlIG1pbmktdGFibGV0dGUgJiM4MjExOyBtYWlzIHBhcyBkaXNjcmV0IGNhciB2aXNpYmxlIHBhciBzYSBjb3VsZXVyIGJsYW5jaGUsIGV0IHZvbHVtaW5ldXggZGFucyBsZXMgcG9jaGVzLjxiciAvPg0KUGFyIHNlcyBpbXBlcmZlY3Rpb25zLCBsZSBwcml4IHB1YmxpYyBjb25zZWlsbMOpIGR1IEdhbGF4eSBDYW1lcmEgc2VtYmxlIGdvbmZsw6kgKHBsdXMgY2hlciBxdeKAmXVuZSB0YWJsZXR0ZSAhKSwgbWFpcyBs4oCZb2ZmcmUgZGUgcmVtYm91cnNlbWVudCBlbiBjb3VycyAocG91cnZ1IHF14oCZZWxsZSBkdXJlICEpIGxhIHJhbcOobmUgw6AgdW4gcHJpeCByYWlzb25uYWJsZS48L3A%DQo8cD5MZXMgcGx1czwvcD4NCjx1bD4NCjxsaT5ab29tIGRlIGdyYW5kZSBhbXBsaXR1ZGU8L2xpPg0KPGxpPlZlcnNpb24gcsOpY2VudGUgZOKAmUFuZHJvaWQ8L2xpPg0KPGxpPkVjcmFuIGNvbmZvcnRhYmxlPC9saT4NCjxsaT5Db25zb21tYXRpb24gb3B0aW1pc8OpZTwvbGk%DQo8L3VsPg0KPHA%TGVzIG1vaW5zPC9wPg0KPHVsPg0KPGxpPkVuY29tYnJhbnQgZXQgdm95YW50PC9saT4NCjxsaT5TdGFiaWxpc2F0aW9uIGTigJlpbWFnZSBlZmZpY2FjZSBxdWUgc3VyIGxlcyBwbGFnZXMgZ3JhbmQgYW5nbGU8L2xpPg0KPGxpPkdQUyDDqW5lcmdpdm9yZTwvbGk%DQo8L3VsPg0KPHA%Jm5ic3A7PC9wPg0KPHRhYmxlIHdpZHRoPSIxMDAlIj4NCjx0Ym9keT4NCjx0cj4NCjx0ZD48c3Ryb25nPkVyZ29ub21pZTwvc3Ryb25nPiA6PC90ZD4NCjx0ZCBzdHlsZT0idGV4dC1hbGlnbjogcmlnaHQ7Ij48ZGl2IGNsYXNzPSJocmV2aWV3LWFnZ3JlZ2F0ZSI%PHN0cm9uZz5Ob3RlIDo8L3N0cm9uZz4gNCBvdXQgb2YgNSBzdGFyczwvZGl2PjwvdGQ%DQo8L3RyPg0KPC90Ym9keT4NCjwvdGFibGU%DQo8cD48ZW0%VW4gw6ljcmFuIGxhcmdlLCB1bmUgcG9pZ27DqWUsIGRlcyBzb3VzLW1lbnVzIGJpZW4gY29uw6d1cyBkYW5zIGzigJllbnNlbWJsZSBldCBsZSByZWNvdXJzIMOgIEplbGx5IEJlYW4gKDQuMS4xKSBjb25mw6hyZW50IGF1IFNhbXN1bmcgR2FsYXh5IENhbcOpcmEgdW4gYXBwYXJlaWwgYWdyw6lhYmxlIMOgIHV0aWxpc2VyLjwvZW0%PC9wPg0KPHRhYmxlIHdpZHRoPSIxMDAlIj4NCjx0Ym9keT4NCjx0cj4NCjx0ZD48c3Ryb25nPlF1YWxpdMOpIG9wdGlxdWU8L3N0cm9uZz4gOjwvdGQ%DQo8dGQgc3R5bGU9InRleHQtYWxpZ246IHJpZ2h0OyI%PGRpdiBjbGFzcz0iaHJldmlldy1hZ2dyZWdhdGUiPjxzdHJvbmc%Tm90ZSA6PC9zdHJvbmc%IDMgb3V0IG9mIDUgc3RhcnM8L2Rpdj48L3RkPg0KPC90cj4NCjwvdGJvZHk%DQo8L3RhYmxlPg0KPHA%PGVtPkzigJlvYmplY3RpZiBkZSBTYW1zdW5nIGEgdW5lIGdyYW5kZSBhbXBsaXR1ZGUgZGUgem9vbSwgbWFpcyBsZSDigJwyMXjigJ0gbmUgZmFpdCBwYXMgdG91dCBldCBsYSBxdWFsaXTDqSBlc3QgdmFyaWFibGUuIERhbnMgbOKAmWVuc2VtYmxlLCBsZXMgZMOpdGFpbHMgcmVzc29ydGVudCBtb2xsZW1lbnQuIExhIHN0YWJpbGlzYXRpb24gZXN0IGVmZmljYWNlIG1haXMgY29ubmFpdCBzZXMgbGltaXRlcyBkw6hzIHF14oCZb24gem9vbWUuPC9lbT48L3A%DQo8dGFibGUgd2lkdGg9IjEwMCUiPg0KPHRib2R5Pg0KPHRyPg0KPHRkPjxiPlF1YWxpdMOpIGQmcnNxdW87aW1hZ2U8L2I%IDo8L3RkPg0KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiByaWdodDsiPjxkaXYgY2xhc3M9ImhyZXZpZXctYWdncmVnYXRlIj48c3Ryb25nPk5vdGUgOjwvc3Ryb25nPiA0IG91dCBvZiA1IHN0YXJzPC9kaXY%PC90ZD4NCjwvdHI%DQo8L3Rib2R5Pg0KPC90YWJsZT4NCjxwPjxlbT5MZXMgaW1hZ2VzIHByb2R1aXRlcyBwYXIgbGUgU2Ftc3VuZyBu4oCZb250IHBhcyB1biB0csOocyBib24gcGlxdcOpIDogbGVzIGTDqXRhaWxzIHJlc3NvcnRlbnQgbMOpZ8OocmVtZW50IGZsb3V0w6lzLiBMZXMgYXV0cmVzIGTDqWZhdXRzIDogdW4gZmxhcmUgc3VyIGxlcyBzb3VyY2VzIGx1bWluZXVzZXMgZXQgZGVzIGNvdWxldXJzIHJhcGlkZW1lbnQgZMOpbGF2w6llcyBz4oCZaWwgZmFpdCBzb21icmUuPC9lbT48L3A%DQo8dGFibGUgd2lkdGg9IjEwMCUiPg0KPHRib2R5Pg0KPHRyPg0KPHRkPjxzdHJvbmc%TG9naWNpZWw8L3N0cm9uZz4gOjwvdGQ%DQo8dGQgc3R5bGU9InRleHQtYWxpZ246IHJpZ2h0OyI%PGRpdiBjbGFzcz0iaHJldmlldy1hZ2dyZWdhdGUiPjxzdHJvbmc%Tm90ZSA6PC9zdHJvbmc%IDQgb3V0IG9mIDUgc3RhcnM8L2Rpdj48L3RkPg0KPC90cj4NCjwvdGJvZHk%DQo8L3RhYmxlPg0KPHA%PGVtPkVxdWlww6kgZOKAmUFuZHJvaWQgNC4xIGV0IGRpc3Bvc2FudCBk4oCZdW4gZ3JhbmQgw6ljcmFuIGRlIDQsOCBwb3VjZXMsIGxlIFNhbXN1bmcgR2FsYXh5IENhbWVyYSBwZXJtZXQgbGEgcGx1cGFydCBkZXMgdXNhZ2VzIGRlIHNtYXJ0cGhvbmVzLiBMYSBjb25uZWN0aXZpdMOpIDNHIOKAkyBzaSB2b3VzIGF2ZXogdW5lIG1pY3JvLVNJTSBkaXNwb25pYmxlIOKAkyBwZXJtZXQgZOKAmcOpdGVuZHJlIGxlcyBwb3NzaWJpbGl0w6kgZGUgcGFydGFnZSBlbiBkaXJlYzwvZW0%dC48L3A%DQo8dGFibGUgd2lkdGg9IjEwMCUiPg0KPHRib2R5Pg0KPHRyPg0KPHRkPjxzdHJvbmc%UGVyZm9ybWFuY2VzPC9zdHJvbmc%IDo8L3RkPg0KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiByaWdodDsiPjxkaXYgY2xhc3M9ImhyZXZpZXctYWdncmVnYXRlIj48c3Ryb25nPk5vdGUgOjwvc3Ryb25nPiAzLjUgb3V0IG9mIDUgc3RhcnM8L2Rpdj48L3RkPg0KPC90cj4NCjwvdGJvZHk%DQo8L3RhYmxlPg0KPHA%PGVtPlRyw6hzIHLDqWFjdGlmIHN1ciBsZXMgdXRpbGlzYXRpb25zIGJhbGFkZXVyIG51bcOpcmlxdWUsIGxlIEdhbGF4eSBDYW1lcmEgc2UgdHJhaW5lIGF1IGxhbmNlbWVudCBhdmVjIDI3IHNlY29uZGVzIGRlIHRlbXBzIGRlIGTDqW1hcnJhZ2UgISBMYSBzb3J0aWUgZGUgbW9kZSB2ZWlsbGUgZmFpdCBhdXNzaSBwcmVuZHJlIGR1IHRlbXBzIGF2ZWMgbOKAmWluaXRpYWxpc2F0aW9uIGV0IGxhIHNvcnRpZSBkZSBs4oCZb2JqZWN0aWYuIE7DqWFubW9pbnMsIGNldHRlIGFyY2hpdGVjdHVyZSBFeHlub3MgcXVhZHJ1cGxlIGNvZXVyIGVzdCB1biBkZXMgcHJvY2Vzc2V1cnMgbW9iaWxlcyBsZXMgcGx1cyBwdWlzc2FudHMgZHUgbWFyY2jDqS48L2VtPjwvcD4NCjx0YWJsZSB3aWR0aD0iMTAwJSI%DQo8dGJvZHk%DQo8dHI%DQo8dGQ%PHN0cm9uZz5BdXRvbm9taWU8L3N0cm9uZz4gOjwvdGQ%DQo8dGQgc3R5bGU9InRleHQtYWxpZ246IHJpZ2h0OyI%PGRpdiBjbGFzcz0iaHJldmlldy1hZ2dyZWdhdGUiPjxzdHJvbmc%Tm90ZSA6PC9zdHJvbmc%IDIuNSBvdXQgb2YgNSBzdGFyczwvZGl2PjwvdGQ%DQo8L3RyPg0KPC90Ym9keT4NCjwvdGFibGU%DQo8cD48ZW0%U2Ftc3VuZyBhIHJlbGF0aXZlbWVudCBiaWVuIG9wdGltaXPDqSBs4oCZYXV0b25vbWllIGR1IEdhbGF4eSBDYW1lcmEgcG91ciBkZXMgdXRpbGlzYXRpb25zIGVuIGFwcGFyZWlsIHBob3RvIHNpbXBsZSBvdSBlbiBiYWxhZGV1ciBudW3DqXJpcXVlLiBNYWlzIGRlcyB1dGlsaXNhdGlvbnMgY29tYmluw6llcywgb3UgcmVxdcOpcmFudCBsYSAzRyBvdSBsZSBHUFMsIHZpZGVudCByYXBpZGVtZW50IGxhIGJhdHRlcmllLjwvZW0%PC9wPg0KPGgxPjwvaDE%DQo8aDE%Tm90ZSBmaW5hbGU8L2gxPg0KPGgzPjxkaXYgY2xhc3M9ImhyZXZpZXctYWdncmVnYXRlIj48c3Ryb25nPk5vdGUgOjwvc3Ryb25nPiAzLjUgb3V0IG9mIDUgc3RhcnM8L2Rpdj48L2gzPg0KPHA%Jm5ic3A7PC9wPg0KPHA%PHN0cm9uZz5UZXN0IHLDqWFsaXTDqSBwYXIgUmljaGFyZCBZaW5nICg8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly9mci50d2l0dGVyLmNvbS9yaWNoYXJkeWluZyIgdGFyZ2V0PSJfYmxhbmsiPnR3aXR0ZXI8L2E%KTwvc3Ryb25nPjwvcD4NCjxwPlJpY2hhcmQgWWluZyB0cmF2YWlsbGUgc3VyIGxlcyBwcm9qZXRzIHdlYiBldCBhcHBsaWNhdGlvbnMgbW9iaWxlIGQmcnNxdW87dW4gZ3JvdXBlIG3DqWRpYS4gQmxvZ3VldXIgdsOpdMOpcmFuIChtYWlzIHJldHJhaXTDqSksIGMmcnNxdW87ZXN0IHVuIGFtYXRldXIgZGUgcGhvdG9ncmFwaGllIGV0IGRlIHZveWFnZXMsIG1haXMgYXVzc2kgZGUgZ2Vla2VyaWVzIHNjaWZpK2hpZ2h0ZWNoLjwvcD4NCl1dPjwvY29udGVudDplbmNvZGVkPg0KCQkJPHdmdzpjb21tZW50UnNzPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9waG90by8xMjI0MDdfdGVzdC1kZS1sYS1zYW1zdW5nLWdhbGF4eS1jYW1lcmEvZmVlZC88L3dmdzpjb21tZW50UnNzPg0KCQk8c2xhc2g6Y29tbWVudHM%MjY8L3NsYXNoOmNvbW1lbnRzPg0KCQk8L2l0ZW0%DQoJCTxpdGVtPg0KCQk8dGl0bGU%VGVzdCBkdSBOaWtvbiBDb29scGl4IFM4MDBjPC90aXRsZT4NCgkJPGxpbms%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL3Bob3RvLzEyMjA4NF90ZXN0LWR1LW5pa29uLWNvb2xwaXgtczgwMGMvPC9saW5rPg0KCQk8Y29tbWVudHM%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL3Bob3RvLzEyMjA4NF90ZXN0LWR1LW5pa29uLWNvb2xwaXgtczgwMGMvI2NvbW1lbnRzPC9jb21tZW50cz4NCgkJPHB1YkRhdGU%V2VkLCAyNiBEZWMgMjAxMiAxMDoxMzo0MSArMDAwMDwvcHViRGF0ZT4NCgkJPGRjOmNyZWF0b3I%VWxyaWNoIFJvemllcjwvZGM6Y3JlYXRvcj4NCgkJCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbUGhvdG9dXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbVGVzdF1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtBbmRyb2lkXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW2FwcGFyZWlsIHBob3RvXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW2NhbWVyYV1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtDb21wYWN0XV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW0Nvb2xwaXhdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbQ29vbHBpeCBTODAwQ11dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtOaWtvbl1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtOaWtvbiBDT09MUElYIFM4MDBjXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW1M4MDBjXV0%PC9jYXRlZ29yeT4NCgkJPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vP3A9MTIyMDg0PC9ndWlkPg0KCQk8ZGVzY3JpcHRpb24%PCFbQ0RBVEFbTmlrb24gYSDDqXTDqSBsZSBwcmVtaWVyIMOgIGxhbmNlciB1biBhcHBhcmVpbCBwaG90byBzb3VzIEFuZHJvaWQgYXZlYyBsZSBDb29scGl4IFM4MDBjLCBtYWlzIHF1aSByZXN0ZSBhdmFudCB0b3V0IHVuIGNvbXBhY3QgcGFyIHNhIHRhaWxsZSBldCBzZXMgZm9uY3Rpb25uYWxpdMOpcyBwcmluY2lwYWxlcy4gRXF1aXDDqSBk4oCZQW5kcm9pZCAyLjMgKEdpbmdlcmJyZWFkIGRhdGFudCBkZSBmw6l2cmllciAyMDExKSwgaWwgcHJvcG9zZSB1biBjYXB0ZXVyIDE2IG3DqWdhcGl4ZWxzIGFsbGnDqSDDoCB1biB6b29tIDEweCwgdW5lIGNvbm5lY3Rpdml0w6kgV2lGaSwgQmx1ZXRvb3RoIGV0IHVuIEdQUyA7IGxlIHRvdXQgcG91ciB1biBwcml4IHB1YmxpYyBjb25zZWlsbMOpIGRlIDM3OSBldXJvcyAoYXUgbW9tZW50IG:DuSBq4oCZw6ljcmlzLCBpbCBwZXV0IHNlIHRyb3V2ZXIuLi4gPGEgY2xhc3M9Im1vcmUtbGluayIgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL3Bob3RvLzEyMjA4NF90ZXN0LWR1LW5pa29uLWNvb2xwaXgtczgwMGMvIj5MaXJlIGxhIHN1aXRlLi4uPC9hPl1dPjwvZGVzY3JpcHRpb24%DQoJCQkJPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD48YiBpZD0iaW50ZXJuYWwtc291cmNlLW1hcmtlcl8wLjA0ODczMjYzODEyNjIzOTE4Ij5OaWtvbiBhIMOpdMOpIGxlIHByZW1pZXIgw6AgbGFuY2VyIHVuIGFwcGFyZWlsIHBob3RvIHNvdXMgQW5kcm9pZCBhdmVjIGxlIENvb2xwaXggUzgwMGMsIG1haXMgcXVpIHJlc3RlIGF2YW50IHRvdXQgdW4gY29tcGFjdCBwYXIgc2EgdGFpbGxlIGV0IHNlcyBmb25jdGlvbm5hbGl0w6lzIHByaW5jaXBhbGVzLjwvYj48L3A%DQo8cD48YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vcGhvdG8vMTIyMDg0X3Rlc3QtZHUtbmlrb24tY29vbHBpeC1zODAwYy9hdHRhY2htZW50L2RzYzAzNTcwLyIgcmVsPSJhdHRhY2htZW50IHdwLWF0dC0xMjIzOTIiPjxpbWcgY2xhc3M9ImFsaWduY2VudGVyIHNpemUtbWVkaXVtIHdwLWltYWdlLTEyMjM5MiBjb2xvcmJveC0xMjIwODQiIGFsdD0iTmlrb24gQ29vbHBpeCBTODAwYyIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL0RTQzAzNTcwLTYzMHgzNTMuanBnIiB3aWR0aD0iNjMwIiBoZWlnaHQ9IjM1MyIgLz48L2E%PC9wPg0KPHA%PGIgaWQ9ImludGVybmFsLXNvdXJjZS1tYXJrZXJfMC4wNDg3MzI2MzgxMjYyMzkxOCI%RXF1aXDDqSBk4oCZQW5kcm9pZCAyLjMgKEdpbmdlcmJyZWFkIGRhdGFudCBkZSBmw6l2cmllciAyMDExKSwgaWwgcHJvcG9zZSB1biBjYXB0ZXVyIDE2IG3DqWdhcGl4ZWxzIGFsbGnDqSDDoCB1biB6b29tIDEweCwgdW5lIGNvbm5lY3Rpdml0w6kgV2lGaSwgQmx1ZXRvb3RoIGV0IHVuIEdQUyA7IGxlIHRvdXQgcG91ciB1biBwcml4IHB1YmxpYyBjb25zZWlsbMOpIGRlIDM3OSBldXJvcyAoYXUgbW9tZW50IG:DuSBq4oCZw6ljcmlzLCBpbCBwZXV0IHNlIHRyb3V2ZXIgw6AgMzA5IGV1cm9zKS48c3BhbiBpZD0ibW9yZS0xMjIwODQiPjwvc3Bhbj48L2I%IDxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9waG90by8xMjIwODRfdGVzdC1kdS1uaWtvbi1jb29scGl4LXM4MDBjL2F0dGFjaG1lbnQvZHNjMDM1ODEvIiByZWw9ImF0dGFjaG1lbnQgd3AtYXR0LTEyMjM5NiI%PGltZyBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1tZWRpdW0gd3AtaW1hZ2UtMTIyMzk2IGNvbG9yYm94LTEyMjA4NCIgYWx0PSJOaWtvbiBDb29scGl4IFM4MDBjIiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvRFNDMDM1ODEtNjMweDM1My5qcGciIHdpZHRoPSI2MzAiIGhlaWdodD0iMzUzIiAvPjwvYT48L3A%DQo8cD5KZSBu4oCZYWkgbWFsaGV1cmV1c2VtZW50IHBhcyB0cm91dsOpIGNvbW1lbnQgZmFpcmUgZGVzIGNhcHR1cmVzIGTigJnDqWNyYW4gZGVzc3VzLCBuaSBjb21tZW50IGFjdGl2ZXIgbGUgbW9kZSBkw6l2ZWxvcHBldXIsIGV0IHZvdXMgZGV2cmV6IGRvbmMgdm91cyBjb250ZW50ZXIgZGUgdnVlcyBk4oCZw6ljcmFuIG1hbCBwaG90b2dyYXBoacOpZXMgKGlsIG1lIG1hbnF1ZSBkZXV4IGJyYXMgc3VwcGzDqW1lbnRhaXJlcykuPC9wPg0KPHA%PGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL3Bob3RvLzEyMjA4NF90ZXN0LWR1LW5pa29uLWNvb2xwaXgtczgwMGMvYXR0YWNobWVudC9kc2MwMzU2OS8iIHJlbD0iYXR0YWNobWVudCB3cC1hdHQtMTIyNDM1Ij48aW1nIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLW1lZGl1bSB3cC1pbWFnZS0xMjI0MzUgY29sb3Jib3gtMTIyMDg0IiBhbHQ9IkJvaXRlIENvb2xwaXgiIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9EU0MwMzU2OS02MzB4MzUzLmpwZyIgd2lkdGg9IjYzMCIgaGVpZ2h0PSIzNTMiIC8%PC9hPjwvcD4NCjxoMT48YiBpZD0iaW50ZXJuYWwtc291cmNlLW1hcmtlcl8wLjA0ODczMjYzODEyNjIzOTE4Ij4gQXNwZWN0IGfDqW7DqXJhbDwvYj48L2gxPg0KPHA%RGlzcG9uaWJsZSBlbiBub2lyIGV0IGVuIGJsYW5jLCBsZSBDb29scGl4IFM4MDBjIHJlc3NlbWJsZSDDoCBs4oCZYXZhbnQgw6AgdW4gY29tcGFjdCBldCDDoCBs4oCZYXJyacOocmUgw6AgdW4gcGV0aXQgc21hcnRwaG9uZSBBbmRyb2lkLjwvcD4NCjxwPjxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9waG90by8xMjIwODRfdGVzdC1kdS1uaWtvbi1jb29scGl4LXM4MDBjL2F0dGFjaG1lbnQvZHNjMDM1ODMvIiByZWw9ImF0dGFjaG1lbnQgd3AtYXR0LTEyMjM5MCI%PGltZyBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1tZWRpdW0gd3AtaW1hZ2UtMTIyMzkwIGNvbG9yYm94LTEyMjA4NCIgYWx0PSJDb29scGl4IEFuZHJvaWQiIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9EU0MwMzU4My02MzB4MzUzLmpwZyIgd2lkdGg9IjYzMCIgaGVpZ2h0PSIzNTMiIC8%PC9hPjwvcD4NCjxwPklsIGVuIGEgZOKAmWFpbGxldXJzIHVuZSB0YWlsbGUgY29tcGFyYWJsZS48L3A%DQo8cD48YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vcGhvdG8vMTIyMDg0X3Rlc3QtZHUtbmlrb24tY29vbHBpeC1zODAwYy9hdHRhY2htZW50L2NvbXBhcmFpc29uLWRlLXRhaWxsZS1kdS1uaWtvbi1jb29scGl4LXM4MDBjLTIvIiByZWw9ImF0dGFjaG1lbnQgd3AtYXR0LTEyMjM5MSI%PGltZyBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1tZWRpdW0gd3AtaW1hZ2UtMTIyMzkxIGNvbG9yYm94LTEyMjA4NCIgYWx0PSJDb21wYXJhaXNvbiBkZSB0YWlsbGUgZHUgTmlrb24gQ29vbHBpeCBTODAwYyIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL1Bob3RvX0NvbXBhcmFpc29uLWRlLXRhaWxsZS1kdS1OaWtvbi1Db29scGl4LmpwZyIgd2lkdGg9IjYzMCIgaGVpZ2h0PSI0MjAiIC8%PC9hPjwvcD4NCjxwIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7Ij5EZSBnYXVjaGUgw6AgZHJvaXRlOiB1biBTYW1zdW5nIFdCNTUwLCB1biBOaWtvbiBDb29scGl4IFM4MDBjLCB1biBTYW1zdW5nIEdhbGF4eSBTLCB1biBpUG9kIFRvdWNoICg1ZSBnw6luw6lyYXRpb24pPC9wPg0KPHA%RGUgcGFyIHNvbiBmb3JtYXQgcsOpZHVpdCBldCBzYSBjb25zdHJ1Y3Rpb24gcGxhc3RpcXVlLCBsZSBDb29scGl4IFM4MDBjIGVzdCBsw6lnZXIgKDE4NCBncmFtbWVzIGF2ZWMgY2FydGUgbcOpbW9pcmUgZXQgYmF0dGVyaWUpLCBtYWlzIG7igJlhIHBhcyB1bmUgYm9ubmUgcHJpc2UgZW4gbWFpbiBjYXIgZMOpbXVuaSBkZSBwYXJ0aWUgYW50aWTDqXJhcGFudGUgb3UgZGUgc3VyZmFjZSBzdWZmaXNhbW1lbnQgbGFyZ2UgcG91ciBsZSB0ZW5pciBzYW5zIGfDqm5lciBsYSBwcmlzZSBkZSB2dWUuIFNhbnMgZHJhZ29ubmUgKGZvdXJuaWUpLCB1biBpbmNpZGVudCBwb3VycmFpdCBmYWNpbGVtZW50IGFycml2ZXIuIDxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9waG90by8xMjIwODRfdGVzdC1kdS1uaWtvbi1jb29scGl4LXM4MDBjL2F0dGFjaG1lbnQvcGhvdG9fdGFpbGxlLWV0LWVjcmFuLWR1LW5pa29uLWNvb2xwaXgtczgwMGNfLyIgcmVsPSJhdHRhY2htZW50IHdwLWF0dC0xMjIzOTQiPjxpbWcgY2xhc3M9ImFsaWduY2VudGVyIHNpemUtbWVkaXVtIHdwLWltYWdlLTEyMjM5NCBjb2xvcmJveC0xMjIwODQiIGFsdD0iUGhvdG9fVGFpbGxlIGV0IMOpY3JhbiBkdSBOaWtvbiBDb29scGl4IFM4MDBjXyIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL1Bob3RvX1RhaWxsZS1ldC1lY3Jhbi1kdS1OaWtvbi1Db29scGl4LVM4MDBjXy02MzB4NDcyLmpwZyIgd2lkdGg9IjYzMCIgaGVpZ2h0PSI0NzIiIC8%PC9hPjwvcD4NCjxoMT5JbnRlcmZhY2VzPC9oMT4NCjxwPkzigJlhcHBhcmVpbCBlc3QgcG91cnZ1IGRlIGJvdXRvbnMgcGh5c2lxdWVzIOKAkyBBY2N1ZWlsLCBSZXRvdXIgZXQgTWVudSDigJMgc2l0dcOpcyBzdXIgbGEgZHJvaXRlIGRlIGzigJnDqWNyYW4sIGTigJl1biBib3V0b24gbWFyY2hlL2FycsOqdCwgZOKAmXVuIGTDqWNsZW5jaGV1ciBldCBk4oCZdW4gc8OpbGVjdGV1ciBkZSB6b29tL2TDqXpvb20uIDxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9waG90by8xMjIwODRfdGVzdC1kdS1uaWtvbi1jb29scGl4LXM4MDBjL2F0dGFjaG1lbnQvZHNjMDM1NzcvIiByZWw9ImF0dGFjaG1lbnQgd3AtYXR0LTEyMjM5MyI%PGltZyBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1tZWRpdW0gd3AtaW1hZ2UtMTIyMzkzIGNvbG9yYm94LTEyMjA4NCIgYWx0PSJEU0MwMzU3NyIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL0RTQzAzNTc3LTYzMHgzNTMuanBnIiB3aWR0aD0iNjMwIiBoZWlnaHQ9IjM1MyIgLz48L2E%ICAgUG91ciBsZSByZXN0ZSB0b3V0IHNlIHBhc3NlIHN1ciBs4oCZw6ljcmFuIGV0IGxlcyBwb3NzZXNzZXVycyBk4oCZYXBwYXJlaWxzIEFuZHJvaWQgbmUgZGV2cmFpZW50IHBhcyDDqnRyZSBkw6lwYXlzw6lzLiBDZXBlbmRhbnQgbGUgc3lzdMOobWUgZW1iYXJxdcOpIMOpdGFudCB1bmUgdmVyc2lvbiBkYXTDqWUgKDIuMykgZOKAmUFuZHJvaWQsIGxlcyBwZXJzb25uZXMgbuKAmWF5YW50IGNvbm51IHF1ZSBBbmRyb2lkIDQueCByaXNxdWVudCBk4oCZw6p0cmUgbMOpZ8OocmVtZW50IGTDqXBhc3PDqWVzLiBOaWtvbiBwcm9wb3NlcmEgcGV1dC3DqnRyZSB1bmUgbWlzZSDDoCBqb3VyIGR1IHN5c3TDqG1lLCBtYWlzIHJpZW4gZGUgc8O7cuKApiA8YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vcGhvdG8vMTIyMDg0X3Rlc3QtZHUtbmlrb24tY29vbHBpeC1zODAwYy9hdHRhY2htZW50L2VjcmFuLWNvb2xwaXgtMi8iIHJlbD0iYXR0YWNobWVudCB3cC1hdHQtMTIyMzk1Ij48aW1nIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLW1lZGl1bSB3cC1pbWFnZS0xMjIzOTUgY29sb3Jib3gtMTIyMDg0IiBhbHQ9IkVjcmFuIENvb2xwaXgiIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9FY3Jhbi1Db29scGl4MS02MzB4MzUzLmpwZyIgd2lkdGg9IjYzMCIgaGVpZ2h0PSIzNTMiIC8%PC9hPjwvcD4NCjxoMT5PcHRpcXVlPC9oMT4NCjxwPk5pa29uIHByb3Bvc2UgdW4gY2FwdGV1ciBDTU9TIGRlIDEvMiwzIHBvdWNlIGF2ZWMgMTYsNzkgbcOpZ2FwaXhlbHMgKDQ2MDggcGFyIDM0NTYgcGl4ZWxzIGVmZmVjdGlmcykuIElsIGVzdCBhc3NvY2nDqSDDoCB1biB6b29tIG9wdGlxdWUgTklLS09SIDEweCBkb250IGxhIGZvY2FsZSB2YXJpZSBkZSA0LDUgw6AgNDVtbSAow6lxdWl2YWxlbnQgZW4gMzVtbSBk4oCZdW4gb2JqZWN0aWYgMjUtMjUwbW0pIHBvdXIgdW5lIG91dmVydHVyZSBtYXhpbWFsZSBkZSDGki8zLjItNS44LjwvcD4NCjxwIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7Ij48YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vcGhvdG8vMTIyMDg0X3Rlc3QtZHUtbmlrb24tY29vbHBpeC1zODAwYy9hdHRhY2htZW50L3pvb20tYS00NW1tLTQvIiByZWw9ImF0dGFjaG1lbnQgd3AtYXR0LTEyMjM5OCI%PGltZyBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1tZWRpdW0gd3AtaW1hZ2UtMTIyMzk4IGNvbG9yYm94LTEyMjA4NCIgYWx0PSJab29tIMOgIDQsNW1tIiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvQ09PTFBJWC1TODAwY19ab29tLWEtNDVtbV8zLTYzMHg0NzIuanBnIiB3aWR0aD0iNjMwIiBoZWlnaHQ9IjQ3MiIgLz48L2E%ICBDT09MUElYIFM4MDBjIC0gWm9vbSDDoCA0LDVtbTwvcD4NCjxwPiAgPGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL3Bob3RvLzEyMjA4NF90ZXN0LWR1LW5pa29uLWNvb2xwaXgtczgwMGMvYXR0YWNobWVudC96b29tLWEtNDVtbS0zLyIgcmVsPSJhdHRhY2htZW50IHdwLWF0dC0xMjIzOTciPjxpbWcgY2xhc3M9ImFsaWduY2VudGVyIGNvbG9yYm94LTEyMjA4NCIgYWx0PSJab29tIMOgIDQ1bW0iIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9DT09MUElYLVM4MDBjX1pvb20tYS00NW1tXzItNjMweDQ3Mi5qcGciIHdpZHRoPSI2MzAiIGhlaWdodD0iNDcyIiAvPjwvYT48L3A%DQo8cCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyI%Q09PTFBJWCBTODAwYyAmIzgyMTE7IFpvb20gw6AgNDVtbTwvcD4NCjxwPiZuYnNwOzwvcD4NCjxoMT5FY3JhbjwvaDE%DQo8cD5FeHTDqXJpZXVyZW1lbnQsIGzigJnDqWNyYW4gZHUgQ29vbHBpeCBTODAwYyBtZXN1cmUgOCw3IGNtICgzLDUgcG91Y2VzKSBldCBzZW1ibGUgc2UgcmF5ZXIgZmFjaWxlbWVudCAobOKAmWV4ZW1wbGFpcmUgZGUgdGVzdCBxdWUgauKAmWF2YWlzIGzigJnDqXRhaXQgZOKAmWFpbGxldXJzIHF1YW5kIGplIGzigJlhaSBkw6ljb3V2ZXJ0KS4gPGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL3Bob3RvLzEyMjA4NF90ZXN0LWR1LW5pa29uLWNvb2xwaXgtczgwMGMvYXR0YWNobWVudC9kb3MtZHUtbmlrb24tY29vbHBpeC1zODAwYy8iIHJlbD0iYXR0YWNobWVudCB3cC1hdHQtMTIyMzk5Ij48aW1nIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLW1lZGl1bSB3cC1pbWFnZS0xMjIzOTkgY29sb3Jib3gtMTIyMDg0IiBhbHQ9IkRvcyBkdSBOaWtvbiBDb29scGl4IFM4MDBjIiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvUGhvdG9fRG9zLWR1LU5pa29uLUNvb2xwaXgtUzgwMGNfLTYzMHg0MjAuanBnIiB3aWR0aD0iNjMwIiBoZWlnaHQ9IjQyMCIgLz48L2E%PC9wPg0KPHA%VW5lIGZvaXMgYWxsdW3DqSwgbOKAmcOpY3JhbiBPTEVEIHRhY3RpbGUgKDgxOTAwMCBwaXhlbHMgZW52aXJvbikgc2VtYmxlIGRvbm5lciBkZXMgY291bGV1cnMgbMOpZ8OocmVtZW50IGTDqWxhdsOpZXMuIEzigJnDqWNyYW4gbuKAmWVzdCBwYXMgdW4gUlZCIG1haXMgdW4gw6ljcmFuIFBlblRpbGUgKGF2ZWMgdW5lIGFwcGFyZW5jZSBibGV1dMOpZSBjYXJhY3TDqXJpc3RpcXVlKSBxdWkgZG9ubmUgdW4gYWdlbmNlbWVudCBSVkJWIGRlcyBwaXhlbHMsIGlsIHkgYSBwbHVzIGRlIHBvaW50cywgbWFpcyBsYSBkw6lmaW5pdGlvbiBlc3QgbW9pbmRyZS48L3A%DQo8cD5BdXRyZSBleHBsaWNhdGlvbiBkZSBjZXMgY291bGV1cnMgOiBsZSB0cmFpdGVtZW50IGFudGktcmVmbGV0LCBxdWkgZG9ubmVudCB1bmUgaW1wcmVzc2lvbiBkw6lmYXZvcmFibGUgc3VyIGzigJlhZmZpY2hhZ2UgYWxvcnMgcXXigJlhdSBmaW5hbCBsZXMgaW1hZ2VzIGVucmVnaXN0csOpZXMgc29udCB0b3V0IMOgIGZhaXQgY29udmVuYWJsZXMuIFVuIHRyYWl0ZW1lbnQgZ2xvc3N5ICjDoCBsYSBwbGFjZSBkZSBs4oCZYW50aS1yZWZsZXQpIGF1cmFpdCBwZXV0LcOqdHJlIGxpbWl0w6kgY2V0dGUgaW1wcmVzc2lvbi48L3A%DQo8aDE%U3RvY2thZ2U8L2gxPg0KPHAgc3R5bGU9InRleHQtYWxpZ246IGxlZnQ7Ij5EZSBiYXNlLCBs4oCZYXBwYXJlaWwgZGlzcG9zZSBk4oCZZW52aXJvbiAxLDdHbyBkZSBtw6ltb2lyZSBpbnRlcm5lIGRpc3BvbmlibGUgcG91ciBs4oCZdXRpbGlzYXRldXIgKHN1ciB1biB0b3RhbCBkZSA0R28pLiBJbCBkaXNwb3NlIMOgIGPDtHTDqSBkZSBjZWxhIGTigJl1biBzbG90IHBvdXIgY2FydGUgU0QgKGNvbXBhdGlibGUgU0RIQyBtYWlzIHBhcyBNTUMpLjwvcD4NCjxwIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7Ij48YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vcGhvdG8vMTIyMDg0X3Rlc3QtZHUtbmlrb24tY29vbHBpeC1zODAwYy9hdHRhY2htZW50L2Rlc3NvdXMtZHUtbmlrb24tY29vbHBpeC1zODAwYy8iIHJlbD0iYXR0YWNobWVudCB3cC1hdHQtMTIyNDAwIj48aW1nIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLW1lZGl1bSB3cC1pbWFnZS0xMjI0MDAgY29sb3Jib3gtMTIyMDg0IiBhbHQ9IkRlc3NvdXMgZHUgTmlrb24gQ29vbHBpeCBTODAwYyIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL1Bob3RvX0Rlc3NvdXMtZHUtTmlrb24tQ29vbHBpeC5qcGciIHdpZHRoPSI2MzAiIGhlaWdodD0iMTU3IiAvPjwvYT4gVmlzIGRlcnJpw6hyZSBsYSB0cmFwcGUsIHNsb3QgU0QsIGJhdHRlcmllPC9wPg0KPGgxPkNvbm5lY3Rpdml0w6k8L2gxPg0KPHA%TGUgQ29vbHBpeCBTODAwYyBwcm9wb3NlIGRldXggcHJpc2VzIDogdW5lIHByaXNlIG1pbmkgSERNSSBldCB1bmUgcHJpc2UgVVNCICgzLjApLiBMYSBwcmlzZSBVU0IgZXN0IHRvdXRlZm9pcyB1biBtb2TDqGxlIFVDLUU2LCBub24gc3RhbmRhcmQgcXVhbmQgbGEgcGx1cGFydCBkZXMgYXBwYXJlaWxzIHJlY291cmVudCBhdSBtaWNyby1VU0IuPC9wPg0KPHA%PGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL3Bob3RvLzEyMjA4NF90ZXN0LWR1LW5pa29uLWNvb2xwaXgtczgwMGMvYXR0YWNobWVudC9wcm9maWwtZHJvaXQtZHUtbmlrb24tY29vbHBpeC1zODAwYy8iIHJlbD0iYXR0YWNobWVudCB3cC1hdHQtMTIyNDAyIj48aW1nIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLW1lZGl1bSB3cC1pbWFnZS0xMjI0MDIgY29sb3Jib3gtMTIyMDg0IiBhbHQ9IlByb2ZpbCBkcm9pdCBkdSBOaWtvbiBDb29scGl4IFM4MDBjIiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvUGhvdG9fUHJvZmlsLWRyb2l0LWR1LU5pa29uLUNvb2xwaXguanBnIiB3aWR0aD0iNjMwIiBoZWlnaHQ9IjMxNSIgLz48L2E%PC9wPg0KPHA%Jm5ic3A7PC9wPg0KPHAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsiPkVtcGxhY2VtZW50IGRlIGxhIHByaXNlIFVTQiB0eXBlIFVDLUU2LCBmaXhhdGlvbiBkZSBsYSBkcmFnb25uZSwgZW1wbGFjZW1lbnQgZGUgbGEgcHJpc2UgbWluaS1IRE1JPC9wPg0KPHA%RW4gY29ubmVjdGl2aXTDqSBzYW5zLWZpbCwgbOKAmWFwcGFyZWlsIGRpc3Bvc2UgZHUgV2lGaSBiL2cvbiBldCBkdSBCbHVldG9vdGggMi4xK0VEUi4gTWFsaGV1cmV1c2VtZW50LCBs4oCZYXBwYXJlaWwgbmUgZGlzcG9zZSBwYXMgZOKAmXVuZSBwcmlzZSBtaWNybyBvdSBk4oCZdW5lIHByaXNlIGNhc3F1ZS4gUGFzIG5vbiBwbHVzIGRlIDNHIGludMOpZ3LDqWUsIE5pa29uIGV4cGxpcXVlIGV0IGNvbnNpZMOocmUgcXVlIGzigJlvbiBwZXV0IHRyw6hzIGJpZW4gcGFydGFnZXIgbGEgY29ubmV4aW9uIGR1IHNtYXJ0cGhvbmUgZW4gV2lGaSBldCBhaW5zaSDDqXZpdGVyIGRlIHBheWVyIGRldXggZm9yZmFpdHMgZGF0YSwgY2UgcXVpIGVzdCB1biBib24gYXJndW1lbnQuPC9wPg0KPGgxPk1vZGVzIHBob3RvIGV0IHZpZMOpbzwvaDE%DQo8cD5QYXIgZMOpZmF1dCwgbGUgQ29vbHBpeCBTODAwYyBwcm9wb3NlIGRlcyBwcmlzZXMgZGUgdnVlIGVuIG1vZGUgQXV0byBzaW1wbGlmacOpIG:DuSBmbGFzaCBpbnTDqWdyw6kgZXQgZXhwb3NpdGlvbiBwZXV2ZW50IGZhY2lsZW1lbnQgw6p0cmUgbW9kaWZpw6lzLiBMZSBtb2RlIEF1dG8gcGVybWV0IGRlIGNob2lzaXIgcXVlbHF1ZXMgb3B0aW9ucyBzdXBwbMOpbWVudGFpcmVzIDogc2Vuc2liaWxpdMOpcywgYmFsYW5jZXMgZGVzIGJsYW5jcywgY2FkZW5jZSAoanVzcXXigJnDoCA4IGltYWdlcyBwYXIgc2Vjb25kZSkuPC9wPg0KPHA%PGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL3Bob3RvLzEyMjA4NF90ZXN0LWR1LW5pa29uLWNvb2xwaXgtczgwMGMvYXR0YWNobWVudC9lY3Jhbi1wcmlzZS1kZS12dWUtY29vbHBpeC0yLyIgcmVsPSJhdHRhY2htZW50IHdwLWF0dC0xMjI0MDgiPjxpbWcgY2xhc3M9ImFsaWduY2VudGVyIHNpemUtbWVkaXVtIHdwLWltYWdlLTEyMjQwOCBjb2xvcmJveC0xMjIwODQiIGFsdD0iRWNyYW4gcHJpc2UgZGUgdnVlIENvb2xwaXgiIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9FY3Jhbi1wcmlzZS1kZS12dWUtQ29vbHBpeDEtNjMweDM1My5qcGciIHdpZHRoPSI2MzAiIGhlaWdodD0iMzUzIiAvPjwvYT48L3A%DQo8cD5JbCBwcm9wb3NlIMOgIGPDtHTDqSBkZSBjZWxhIGRlIG5vbWJyZXV4IG1vZGVzIHNjw6huZXMgKFBvcnRyYWl0LCBQYXlzYWdlLCBTcG9ydCwgUG9ydHJhaXQgZGUgbnVpdCwgRsOqdGUvaW50w6lyaWV1ciwgUGxhZ2UsIE5laWdlLCBDb3VjaGVyIGRlIHNvbGVpbCwgQXVyb3JlL2Nyw6lwdXNjdWxlLCBQYXlzYWdlIGRlIG51aXQsIEdyb3MgcGxhbiwgQWxpbWVudHMsIEZldXggZCZyc3F1bzthcnRpZmljZSwgUmVwcm9kdWN0aW9uIE4mYW1wO0IsIENvbnRyZS1qb3VyLCBQYW5vcmFtaXF1ZSBzaW1wbGlmacOpLCBBbmltYXV4IGRvbWVzdGlxdWVzKSBldCBkZXMgZWZmZXRzIChxdWkgc29udCBlbiBmYWl0IGRlcyBmaWx0cmVzKS48L3A%DQo8cD48YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vcGhvdG8vMTIyMDg0X3Rlc3QtZHUtbmlrb24tY29vbHBpeC1zODAwYy9hdHRhY2htZW50L2VjcmFuLWVmZmV0cy1jb29scGl4LTIvIiByZWw9ImF0dGFjaG1lbnQgd3AtYXR0LTEyMjQwOSI%PGltZyBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1tZWRpdW0gd3AtaW1hZ2UtMTIyNDA5IGNvbG9yYm94LTEyMjA4NCIgYWx0PSJFY3JhbiBlZmZldHMgQ29vbHBpeCIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL0VjcmFuLWVmZmV0cy1Db29scGl4MS02MzB4MzUzLmpwZyIgd2lkdGg9IjYzMCIgaGVpZ2h0PSIzNTMiIC8%PC9hPjwvcD4NCjxwPlBvdXIgbGUgbWFsaGV1ciBkZSBjZXV4IHF1aSB2b3VkcmFpZW50IMOpZGl0ZXIgbGV1cnMgaW1hZ2VzIHN1ciBsZXVyIG9yZGluYXRldXIsIGxlcyBwaG90b3Mgc29udCBkaXJlY3RlbWVudCBjb21wcmVzc8OpZXMgZW4gSlBFRyBldCBsZXMgZm9ybWF0cyBSQVcgKGRvbm7DqWVzIGJydXRlcyBkdSBjYXB0ZXVyIHBlcm1ldHRhbnQgZGUgcmV0cmF2YWlsbGVyIGRhdmFudGFnZSBkZXMgaW1hZ2VzKSBuZSBzb250IHBhcyBwcm9wb3PDqXMuPC9wPg0KPHA%RW4gdmlkw6lvLCBsZSBDb29scGl4IHBlcm1ldCBk4oCZYXZvaXIgZHUgRnVsbCBIRCAoMTkyMCB4IDEwODAgcGl4ZWxzIGVuIEguMjY0L01QRUctNCBBVkMpIGVuIDMwaXBzIGF2ZWMgZHUgc29uIGNhcHR1csOpIGVuIHN0w6lyw6lvIHBhciBsZXMgbWljcm9zIGludMOpZ3LDqXMgKGZvcm1hdCBBQUMgc3TDqXLDqW8pLjwvcD4NCjxwPjxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9waG90by8xMjIwODRfdGVzdC1kdS1uaWtvbi1jb29scGl4LXM4MDBjL2F0dGFjaG1lbnQvZWNyYW4tdmlkZW8tY29vbHBpeC0yLyIgcmVsPSJhdHRhY2htZW50IHdwLWF0dC0xMjI0MTEiPjxpbWcgY2xhc3M9ImFsaWduY2VudGVyIHNpemUtbWVkaXVtIHdwLWltYWdlLTEyMjQxMSBjb2xvcmJveC0xMjIwODQiIGFsdD0iRWNyYW4gdmlkw6lvIENvb2xwaXgiIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9FY3Jhbi12aWTDqW8tQ29vbHBpeDEtNjMweDM1My5qcGciIHdpZHRoPSI2MzAiIGhlaWdodD0iMzUzIiAvPjwvYT48L3A%DQo8cD5JbCBwcm9wb3NlIHVuIGF1dG9mb2N1cyBlbiBjb250aW51IHBlbmRhbnQgbGEgY2FwdHVyZSwgbWFpcyBsZSBtw6ljYW5pc21lIGTigJlhdXRvZm9jdXMgcGV1dCBz4oCZZW50ZW5kcmUgZGFucyBsYSBzw6lxdWVuY2UsIG1haXMgY2VsYSBuZSBnw6puZXJhIHF1ZSBwZXUgZGUgZ2VucyAodW4gY29tcGFjdCBu4oCZw6l0YW50IHBhcyBkZXN0aW7DqSDDoCBmaWxtZXIgZGVzIHZpZMOpb3MgZGUgcXVhbGl0w6kgcHJvKS48L3A%DQo8aDE%UXVhbGl0w6kgcGhvdG88L2gxPg0KPHA%QXZlYyB1biDDqWNyYW4gYXVzc2kgcGV1IGZsYXR0ZXVyLCBsZSBDb29scGl4IFM4MDBjIGZhaXQgc%KAmWF0dGVuZHJlIGF1IHBpcmUuIEF1IGZpbmFsLCBpbCBlc3QgZGFucyBsYSBtb3llbm5lIGRlcyBhcHBhcmVpbHMgcGhvdG9zIGNvbXBhY3RzIGRlIGNldHRlIHRhaWxsZS4gTGVzIHNlbnNpYmlsaXTDqXMgcHJvcG9zw6llcyB2YXJpZW50IGRlIElTTzEyNSDDoCBJU08zMjAwLCBtYWlzIGxlcyBpbWFnZXMgc2UgZMOpZ3JhZGVudCBkw6hzIElTTzQwMC4gTOKAmWFwcGFyZWlsIHPigJl1dGlsaXNlIGFpbnNpIGRlIGZhw6dvbiBvcHRpbWFsZSBkYW5zIGRlcyBlbnZpcm9ubmVtZW50IGJpZW4gw6ljbGFpcsOpcyBldCByZXN0aXR1ZSBkZXMgaW1hZ2VzIGFzc2V6IGZpZMOobGVzLCBk4oCZYXV0YW50IHBsdXMgcXVlIGxhIGJhbGFuY2UgZGVzIGJsYW5jcyBlc3QgYmllbiBkw6l0ZWN0w6llLjwvcD4NCjxwPkxlIGJsb2Mgb3B0aXF1ZSBkZSBjb25jZXB0aW9uIE5pa29uIGZhaXQgdW4gdHJhdmFpbCBmb3J0IGNvcnJlY3QgZXQgcmVzdGl0dWUgdW4gcGlxdcOpIGNvcnJlY3QgZGFucyBjZXMgY29uZGl0aW9ucy4gTGVzIElTTyDDqWxldsOpcyBzb250IGVuIHJldmFuY2hlIMOgIMOpdml0ZXIgY2FyIGRvbm5hbnQgZGVzIGltYWdlcyBkw6lsYXbDqWVzIGV0IHBlcmRhbnQgZ3JhbmRlbWVudCBlbiBuZXR0ZXTDqS4gRG90w6kgZOKAmXVuZSBzdGFiaWxpc2F0aW9uIG9wdGlxdWUgKHF1aSByw6lkdWl0IGxlcyBlZmZldHMgZGVzIHRyZW1ibGVtZW50cyBkdSBwaG90b2dyYXBoZSksIGxlIENvb2xwaXggUzgwMGMgbGFpc3NlIGhldXJldXNlbWVudCBsYSBwb3NzaWJpbGl0w6kgZGUgc2UgbGltaXRlciDDoCBJU084MDAgKG:DuSBsZSBicnVpdCBlc3QgcGVyY2VwdGlibGUgbWFpcyByYWlzb25uYWJsZSksIGxpbWl0YW50IGFpbnNpIGxhIHBlcnRlIGRlIGNvdWxldXJzIHF1YW5kIGxhIGx1bWnDqHJlIGTDqWNsaW5lLiBJbCBmYXVkcmEgcXVhbmQgbcOqbWUgw6l2aXRlciBsZXMgZmxvdXMgZGUgbW91dmVtZW50IGV0IHJldGVuaXIgbGVzIGVuZmFudHMgZW4gcGxhY2UgcG91ciBsZXMgcGhvdG9zIGRlIGZhbWlsbGUgZW4gaW50w6lyaWV1ci48L3A%DQo8cD48YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vcGhvdG8vMTIyMDg0X3Rlc3QtZHUtbmlrb24tY29vbHBpeC1zODAwYy9hdHRhY2htZW50L251aXQtYXV0by0zLyIgcmVsPSJhdHRhY2htZW50IHdwLWF0dC0xMjI0MDEiPjxpbWcgY2xhc3M9ImFsaWduY2VudGVyIHNpemUtbWVkaXVtIHdwLWltYWdlLTEyMjQwMSBjb2xvcmJveC0xMjIwODQiIGFsdD0iTnVpdCBBdXRvIiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvQ09PTFBJWC1TODAwY19OdWl0LUF1dG9fMS02MzB4NDcyLmpwZyIgd2lkdGg9IjYzMCIgaGVpZ2h0PSI0NzIiIC8%PC9hPjwvcD4NCjxwIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7Ij5OdWl0IGVuIGF1dG9tYXRpcXVlPC9wPg0KPGgxPlJhcGlkaXTDqSBldCByw6lhY3Rpdml0w6k8L2gxPg0KPHA%TG9yc3F1ZSBs4oCZb24gYWxsdW1lIGxlIENvb2xwaXggUzgwMGMgKGNlIHF1aSBwcmVuZCAxNSBzZWNvbmRlcyksIGlsIG5lIGZhdXQgcGFzIHPigJlhdHRlbmRyZSDDoCBwcmVuZHJlIGxhIHBob3RvIGRhbnMgbGEgZm91bMOpZS4gTm9ybWFsIGNhciBjZSBu4oCZZXN0IHBhcyB1biByZWZsZXgsIG1haXMgaWwgZXN0IHZyYWkgcXXigJl1bmUgY29uZmlndXJhdGlvbiB1biBwZXUgZmFpYmxlIChwcm9jZXNzZXVyIENvcnRleC1BOSAxR0h6IGV0IDUxMiBNbyBkZSBSQU0pIG7igJlhY2PDqWzDqHJlbnQgcGFzIGxlIGTDqW1hcnJhZ2UgZOKAmUFuZHJvaWQuIEhldXJldXNlbWVudCwgdW5lIGZvaXMgYWxsdW3DqSwgbOKAmWFwcGFyZWlsIHNlIG1ldCBlbiB2ZWlsbGUgZXQgbOKAmWF0dGVudGUgZXN0IGJlYXVjb3VwIHBsdXMgY291cnRlIGF2ZWMgZW52aXJvbiAyIHNlY29uZGVzIGRlIGTDqWxhaS4gRGFucyBs4oCZZW5zZW1ibGUsIGzigJlhcHBhcmVpbCBzdWJpdCBkZXMgbGVudGV1cnMgYXZlYyBkZSBub21icmV1eCBtZXNzYWdlcyDigJxWZXVpbGxleiBwYXRpZW50ZXLigKbigJ0sIHF1ZWxxdWVzIGNyYXNocyBk4oCZYXBwbGlzIHN5c3TDqG1lIHNvbnQgbcOqbWUgw6Agc2lnbmFsZXIuIEVuIG1vZGUgcGhvdG8sIGFwcsOocyB1biBjZXJ0YWluIHRlbXBzIGTigJl1dGlsaXNhdGlvbiwgbGVzIGFjdGlvbnMgKHF1ZSBjZSBzb2l0IHN1ciBib3V0b25zIG91IHN1ciDDqWNyYW4pIG7DqWNlc3NpdGVudCBwYXJmb2lzIGTigJnDqnRyZSByw6lww6l0w6llcyBwbHVzaWV1cnMgZm9pcyBhdmFudCBk4oCZw6p0cmUgcHJpc2VzIGVuIGNvbXB0ZS48L3A%DQo8aDE%QXV0b25vbWllPC9oMT4NCjxwPkzigJlhdXRvbm9taWUgZHUgTmlrb24gQ29vbHBpeCBTODAwYyBlc3QgcmVsYXRpdmVtZW50IGZhaWJsZSwgbGEgYmF0dGVyaWUgRU4tRUwxMiAoMTA1MCBtQWgpIGZvdXJuaWUgbmUgcGVybWV0IHNlbG9uIGxhIG5vcm1lIENJUEEgcXVlIGRlIHByZW5kcmUgMTQwIHBob3Rvcy4gRW4gdXRpbGlzYXRpb24gdG91cmlzdGUgKHByaXNlcyBmcsOpcXVlbnRlcyBtYWlzIHBhcyBlbiBjb250aW51KSwgauKAmWFpIGV1IGVudmlyb24gOSBoZXVyZXMgZGUgcGhvdG9zLiBBdHRlbnRpb24sIGF2ZWMgbGUgV2lGaSBlbiB1dGlsaXNhdGlvbiBjZWxhIGJhaXNzZSDDoCA1aDMwIGV0IGF2ZWMgbGUgZ8Opb3RhZ2dhZ2UgR1BTIGFjdGl2w6kgdm91cyBlbiBhdXJleiDDoCBwZWluZSBwb3VyIDIgaGV1cmVzICE8L3A%DQo8aDE%RW4gcsOpc3Vtw6k8L2gxPg0KPHA%VW4gZm9ybWF0IHLDqWR1aXQgbWFpcyB1bmUgZmluaXRpb24gaW1wYXJmYWl0ZSwgdW5lIG9wdGlxdWUgZGUgcXVhbGl0w6kgbWFpcyBhbGxpw6llIMOgIGRlcyByw6lnbGFnZXMgcmVzdHJlaW50cyBkZSBwcmlzZSBkZSB2dWUsIHVuZSBleHBsb2l0YXRpb24gZOKAmUFuZHJvaWQgcsOpZHVpdGUgw6AgY2F1c2UgZOKAmXVuZSB2ZXJzaW9uIGRhdMOpZSBldCBk4oCZdW4gw6ljcmFuIHRyb3AgcGV0aXQsIHVuZSBpbnTDqWdyYXRpb24gw6luZXJnaXZvcmXigKYgTGUgTmlrb24gQ29vbHBpeCBTODAwYyBlc3QgYXNzZXogY2hlciBhbG9ycyBxdWUgZGVzIGNvbXBhY3RzIHNpbWlsYWlyZXMgbWFpcyBzYW5zIEFuZHJvaWQgc29udCBkaXNwb25pYmxlcyBwb3VyIHVuZSBjZW50YWluZSBk4oCZZXVyb3MgZGUgbW9pbnMuPC9wPg0KPHA%TOKAmWludMOpZ3JhdGlvbiBkdSBzeXN0w6htZSBsdWkgdmF1dCBkb25jIHVuZSBpbmZsYXRpb24gZHUgY2:Du3QsIHF1aSBuZSBwb3VycmFpdCBzZSBqdXN0aWZpZXIgcXVlIHN1ciBsZXMgc3VjY2Vzc2V1cnMgZGUgY2UgbW9kw6hsZS4gQSBwYXJ0IHNvbiBjYXB0ZXVyIGV0IHNvbiB6b29tIHBsdXMgcXVhbGl0YXRpZnMsIGlsIG5lIGp1c3RpZmllIHBhcyBub24gcGx1cyBkZSBzZSBzdWJzdGl0dWVyIMOgIHVuIHBob3RvcGhvbmUgcsOpY2VudC4gRGUgbm9tYnJldXggcG9pbnRzIHNvbnQgYWluc2kgZW5jb3JlIMOgIGFtw6lsaW9yZXIgc3VyIGNlIHByZW1pZXIgTmlrb24gc291cyBBbmRyb2lkIGV0IGxlcyBzdWNjZXNzZXVycyBkZSBjZSBtb2TDqGxlIGRldnJhaWVudCDDqnRyZSBmb3J0IGNvbnZlbmFibGVzLjwvcD4NCjxwPiZuYnNwOzwvcD4NCjxwPjxzdHJvbmc%TGVzIHBsdXM8L3N0cm9uZz48L3A%DQo8dWw%DQo8bGk%T3B0aXF1ZSBkZSBib25uZSBxdWFsaXTDqTwvbGk%DQo8bGk%Rmlkw6lsaXTDqSBkZXMgaW1hZ2VzPC9saT4NCjwvdWw%DQo8cD48c3Ryb25nPkxlcyBtb2luczwvc3Ryb25nPjwvcD4NCjx1bD4NCjxsaT5WZXJzaW9uIGTigJlBbmRyb2lkIGRhdMOpZTwvbGk%DQo8bGk%RWNyYW4gbcOpZGlvY3JlPC9saT4NCjxsaT5NYW5xdWUgZGUgcsOpYWN0aXZpdMOpPC9saT4NCjxsaT5BdXRvbm9taWUgdHLDqHMgcsOpZHVpdGU8L2xpPg0KPGxpPlByaXggcmVsYXRpdmVtZW50IMOpbGV2w6k8L2xpPg0KPC91bD4NCjxwPiZuYnNwOzwvcD4NCjx0YWJsZSB3aWR0aD0iMTAwJSI%DQo8dGJvZHk%DQo8dHI%DQo8dGQ%PHN0cm9uZz5EZXNpZ248L3N0cm9uZz4gOjwvdGQ%DQo8dGQgc3R5bGU9InRleHQtYWxpZ246IHJpZ2h0OyI%PGRpdiBjbGFzcz0iaHJldmlldy1hZ2dyZWdhdGUiPjxzdHJvbmc%Tm90ZSA6PC9zdHJvbmc%IDIgb3V0IG9mIDUgc3RhcnM8L2Rpdj48L3RkPg0KPC90cj4NCjwvdGJvZHk%DQo8L3RhYmxlPg0KPHA%PGVtPkxlIE5pa29uIENvb2xwaXggUzgwMGMgZXN0IHVuIGNvbXBhY3QgZGUgdGFpbGxlIHVuIHBldSBqdXN0ZSBwb3VyIHVuZSB1dGlsaXNhdGlvbiBhaXPDqWUgZOKAmUFuZHJvaWQsIGxlcyBjb21tYW5kZXMgbmUgc29udCBwYXMgZGVzIHBsdXMgaW50dWl0aXZlcyBhdmVjIGRlcyBwYXJhbcOodHJlcyByZWdyb3Vww6lzIGRhbnMgbGVzIG1lbnVzLCBs4oCZw6ljcmFuIG5lIHJlbmQgcGFzIGNvcnJlY3RlbWVudCBsZXMgaW1hZ2VzLjwvZW0%PC9wPg0KPHRhYmxlIHdpZHRoPSIxMDAlIj4NCjx0Ym9keT4NCjx0cj4NCjx0ZD48c3Ryb25nPlF1YWxpdMOpIG9wdGlxdWU8L3N0cm9uZz4gOjwvdGQ%DQo8dGQgc3R5bGU9InRleHQtYWxpZ246IHJpZ2h0OyI%PGRpdiBjbGFzcz0iaHJldmlldy1hZ2dyZWdhdGUiPjxzdHJvbmc%Tm90ZSA6PC9zdHJvbmc%IDMuNSBvdXQgb2YgNSBzdGFyczwvZGl2PjwvdGQ%DQo8L3RyPg0KPC90Ym9keT4NCjwvdGFibGU%DQo8cD48ZW0%TGUgem9vbSBpbnTDqWdyw6kgcGFyIE5pa29uIGRvbm5lIGRhbnMgbOKAmWVuc2VtYmxlIGRlcyBwZXJmb3JtYW5jZXMgY29udmVuYWJsZXMgc3VyIHRvdXRlcyBsZXMgZm9jYWxlcywgbGUgc3lzdMOobWUgZGUgc3RhYmlsaXNhdGlvbiBlc3QgdW4gcGV1IGzDqWdlci48L2VtPjwvcD4NCjx0YWJsZSB3aWR0aD0iMTAwJSI%DQo8dGJvZHk%DQo8dHI%DQo8dGQ%PGI%UXVhbGl0w6kgZCZyc3F1bztpbWFnZTwvYj4gOjwvdGQ%DQo8dGQgc3R5bGU9InRleHQtYWxpZ246IHJpZ2h0OyI%PGRpdiBjbGFzcz0iaHJldmlldy1hZ2dyZWdhdGUiPjxzdHJvbmc%Tm90ZSA6PC9zdHJvbmc%IDMuNSBvdXQgb2YgNSBzdGFyczwvZGl2PjwvdGQ%DQo8L3RyPg0KPC90Ym9keT4NCjwvdGFibGU%DQo8cD48ZW0%QXZlYyB1bmUgb3B0aXF1ZSBkZSBxdWFsaXTDqSwgbGVzIGltYWdlcyBkdSBDb29scGl4IFM4MDBjIHJlc3RpdHVlbnQgZGUgZmHDp29uIHBsdXTDtHQgZmlkw6hsZSBsYSByw6lhbGl0w6kuIElsIGEgdG91dGVmb2lzIHRlbmRhbmNlIMOgIHRpcmVyIHN1ciBsZXMgY291bGV1cnMgY2hhdWRlcyBkw6hzIHF1ZSBsYSBzZW5zaWJpbGl0w6kgYXVnbWVudGUgbcOqbWUgc2kgbGEgYmFsYW5jZSBkZXMgYmxhbmNzIGVzdCByZWxhdGl2ZW1lbnQgYmllbiBmYWl0ZS48L2VtPjwvcD4NCjx0YWJsZSB3aWR0aD0iMTAwJSI%DQo8dGJvZHk%DQo8dHI%DQo8dGQ%PHN0cm9uZz5Mb2dpY2llbDwvc3Ryb25nPiA6PC90ZD4NCjx0ZCBzdHlsZT0idGV4dC1hbGlnbjogcmlnaHQ7Ij48ZGl2IGNsYXNzPSJocmV2aWV3LWFnZ3JlZ2F0ZSI%PHN0cm9uZz5Ob3RlIDo8L3N0cm9uZz4gMS41IG91dCBvZiA1IHN0YXJzPC9kaXY%PC90ZD4NCjwvdHI%DQo8L3Rib2R5Pg0KPC90YWJsZT4NCjxwPjxlbT5FY3JhbiB0cm9wIHBldGl0IGV0IHJlY291cnMgw6AgR2luZ2VyYnJlYWQgbGltaXRlbnQgbGVzIHBvc3NpYmlsaXTDqXMgZOKAmXVzYWdlcyBkdSBzeXN0w6htZSBBbmRyb2lkLiBOaWtvbiBtYW5xdWUgZCZyc3F1bztleHDDqXJpZW5jZSBhdmVjIEFuZHJvaWQuPC9lbT48L3A%DQo8dGFibGUgd2lkdGg9IjEwMCUiPg0KPHRib2R5Pg0KPHRyPg0KPHRkPjxzdHJvbmc%UGVyZm9ybWFuY2VzPC9zdHJvbmc%IDo8L3RkPg0KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiByaWdodDsiPjxkaXYgY2xhc3M9ImhyZXZpZXctYWdncmVnYXRlIj48c3Ryb25nPk5vdGUgOjwvc3Ryb25nPiAyIG91dCBvZiA1IHN0YXJzPC9kaXY%PC90ZD4NCjwvdHI%DQo8L3Rib2R5Pg0KPC90YWJsZT4NCjxwPjxlbT5NYWxncsOpIHVuIG1vZGUgZGUgbWlzZSBlbiB2ZWlsbGUsIGxlIHRlbXBzIGRlIGTDqW1hcnJhZ2UgZXN0IHJlbGF0aXZlbWVudCBsb25nLiBMZXMgY29tbWFuZGVzIG5lIHNvbnQgcGFzIGRlcyBwbHVzIHLDqWFjdGl2ZXMuPC9lbT48L3A%DQo8dGFibGUgd2lkdGg9IjEwMCUiPg0KPHRib2R5Pg0KPHRyPg0KPHRkPjxzdHJvbmc%QXV0b25vbWllPC9zdHJvbmc%IDo8L3RkPg0KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiByaWdodDsiPjxkaXYgY2xhc3M9ImhyZXZpZXctYWdncmVnYXRlIj48c3Ryb25nPk5vdGUgOjwvc3Ryb25nPiAxIG91dCBvZiA1IHN0YXJzPC9kaXY%PC90ZD4NCjwvdHI%DQo8L3Rib2R5Pg0KPC90YWJsZT4NCjxwPjxlbT5MZSBOaWtvbiBDb29scGl4IFM4MDBjIGEgdW5lIGF1dG9ub21pZSBmYWlibGUgcG91ciBkZXMgY29tcG9zYW50cyBzb21tZSB0b3V0ZSBwZXUgcHVpc3NhbnRzLiBMZXMgY29ubmV4aW9ucyBzYW5zLWZpbCBldCBzdXJ0b3V0IGxlIEdQUyBzb250IGRlIHbDqXJpdGFibGVzIGdsb3V0b25zIGV0IHZpZGVudCB0cm9wIHJhcGlkZW1lbnQgbGEgYmF0dGVyaWUuPC9lbT48L3A%DQo8aDE%PC9oMT4NCjxoMT5Ob3RlIGZpbmFsZTwvaDE%DQo8aDM%PGRpdiBjbGFzcz0iaHJldmlldy1hZ2dyZWdhdGUiPjxzdHJvbmc%Tm90ZSA6PC9zdHJvbmc%IDIgb3V0IG9mIDUgc3RhcnM8L2Rpdj48L2gzPg0KPHA%Jm5ic3A7PC9wPg0KPHA%PHN0cm9uZz5UZXN0IHLDqWFsaXTDqSBwYXIgUmljaGFyZCBZaW5nICg8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly9mci50d2l0dGVyLmNvbS9yaWNoYXJkeWluZyIgdGFyZ2V0PSJfYmxhbmsiPnR3aXR0ZXI8L2E%KTwvc3Ryb25nPjwvcD4NCjxwPlJpY2hhcmQgWWluZyB0cmF2YWlsbGUgc3VyIGxlcyBwcm9qZXRzIHdlYiBldCBhcHBsaWNhdGlvbnMgbW9iaWxlIGQmcnNxdW87dW4gZ3JvdXBlIG3DqWRpYS4gQmxvZ3VldXIgdsOpdMOpcmFuIChtYWlzIHJldHJhaXTDqSksIGMmcnNxdW87ZXN0IHVuIGFtYXRldXIgZGUgcGhvdG9ncmFwaGllIGV0IGRlIHZveWFnZXMsIG1haXMgYXVzc2kgZGUgZ2Vla2VyaWVzIHNjaWZpK2hpZ2h0ZWNoLjwvcD4NCl1dPjwvY29udGVudDplbmNvZGVkPg0KCQkJPHdmdzpjb21tZW50UnNzPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9waG90by8xMjIwODRfdGVzdC1kdS1uaWtvbi1jb29scGl4LXM4MDBjL2ZlZWQvPC93Znc6Y29tbWVudFJzcz4NCgkJPHNsYXNoOmNvbW1lbnRzPjI8L3NsYXNoOmNvbW1lbnRzPg0KCQk8L2l0ZW0%DQoJCTxpdGVtPg0KCQk8dGl0bGU%V29ybGQgb2YgR29vIGVzdCBncmF0dWl0IGF1am91cmQmIzgyMTc7aHVpIHN1ciBsJiM4MjE3O0FtYXpvbiBBcHAtU2hvcDwvdGl0bGU%DQoJCTxsaW5rPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hcHBsaWNhdGlvbnMvamV1eC1hbmRyb2lkLWFwcGxpY2F0aW9ucy8xMjI0OTFfd29ybGQtb2YtZ29vLWdyYXR1aXRhbWF6b24tYXBwLXNob3AvPC9saW5rPg0KCQk8Y29tbWVudHM%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FwcGxpY2F0aW9ucy9qZXV4LWFuZHJvaWQtYXBwbGljYXRpb25zLzEyMjQ5MV93b3JsZC1vZi1nb28tZ3JhdHVpdGFtYXpvbi1hcHAtc2hvcC8jY29tbWVudHM8L2NvbW1lbnRzPg0KCQk8cHViRGF0ZT5XZWQsIDI2IERlYyAyMDEyIDEwOjEzOjI2ICswMDAwPC9wdWJEYXRlPg0KCQk8ZGM6Y3JlYXRvcj5FZG91YXJkIE1hcnF1ZXo8L2RjOmNyZWF0b3I%DQoJCQkJPGNhdGVnb3J5PjwhW0NEQVRBW0JvbnMgcGxhbnNdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbSmV1eF1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtBbWF6b25dXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbYW1hem9uIGFwcCBzaG9wXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW0FtYXpvbiBBcHAgU3RvcmVdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbYW1hem9uIGFwcHNob3BdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbQW1hem9uIEFwcHN0b3JlXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW0FwcCBTaG9wXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW2JvbiBwbGFuXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW0pldV1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtXb3JsZCBvZiBHb29dXT48L2NhdGVnb3J5Pg0KCQk8Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS8:cD0xMjI0OTE8L2d1aWQ%DQoJCTxkZXNjcmlwdGlvbj48IVtDREFUQVtVbiBib24gcGxhbiB0b3Vqb3VycyBpbmltYWdpbmFibGUgc3VyIGxlIFBsYXkgU3RvcmUuIExlIFBsYXkgU3RvcmUgZXN0IGF1am91cmQmIzgyMTc7aHVpIGxhIGJvdXRpcXVlIGQmIzgyMTc7YXBwbGljYXRpb25zIGxhIHBsdXMgY29tcGzDqHRlIHN1ciBBbmRyb2lkLiBVbiBwcm9ibMOobWUgbCYjODIxNztlbnRhY2hlIHZyYWltZW50IDogdW5lIGFwcGxpY2F0aW9uIHF1aSBkZXZpZW50IGdyYXR1aXRlLCBuZSBwZXV0IHBsdXMgZGV2ZW5pciBwYXlhbnRlLiBDJiM4MjE3O2VzdCBhaW5zaSBxdSYjODIxNztpbCBuJiM4MjE3O2VzdCBwYXMgcG9zc2libGUgZCYjODIxNzthdm9pciBkZXMgYmFpc3NlcyBkZSBwcml4IHRlbXBvcmFpcmVzIGF1c3NpIGFnZ3Jlc3NpdmVzIHF1ZSBzdXIgbCYjODIxNztBcHAgU3RvcmUgZCYjODIxNztBcHBsZS4gTWFpcyBncsOiY2Ugw6AgbCYjODIxNztvdXZlcnR1cmUgZHUgc3lzdMOobWUgZCYjODIxNztleHBsb2l0YXRpb24sIGlsIGV4aXN0ZSBkZSB0csOocyBub21icmV1eCBtYXJrZXRzIHRpZXJzLCBkb250IGxlIHBsdXMgaW1wb3J0YW50IGVzdC4uLiA8YSBjbGFzcz0ibW9yZS1saW5rIiBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYXBwbGljYXRpb25zL2pldXgtYW5kcm9pZC1hcHBsaWNhdGlvbnMvMTIyNDkxX3dvcmxkLW9mLWdvby1ncmF0dWl0YW1hem9uLWFwcC1zaG9wLyI%TGlyZSBsYSBzdWl0ZS4uLjwvYT5dXT48L2Rlc2NyaXB0aW9uPg0KCQkJCTxjb250ZW50OmVuY29kZWQ%PCFbQ0RBVEFbPHA%PHN0cm9uZz5VbiBib24gcGxhbiB0b3Vqb3VycyBpbmltYWdpbmFibGUgc3VyIGxlIFBsYXkgU3RvcmUuPC9zdHJvbmc%PC9wPg0KPHAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsiPjxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hcHBsaWNhdGlvbnMvamV1eC1hbmRyb2lkLWFwcGxpY2F0aW9ucy8xMjI0OTFfd29ybGQtb2YtZ29vLWdyYXR1aXRhbWF6b24tYXBwLXNob3AvYXR0YWNobWVudC9mcmFtZWRfc2NyZWVuc2hvdF8yMDEyLTEyLTI2LTEwLTQzLTQ3LyIgcmVsPSJhdHRhY2htZW50IHdwLWF0dC0xMjI0OTIiPjxpbWcgY2xhc3M9ImFsaWduY2VudGVyICB3cC1pbWFnZS0xMjI0OTIgY29sb3Jib3gtMTIyNDkxIiBhbHQ9ImZyYW1lZF9TY3JlZW5zaG90XzIwMTItMTItMjYtMTAtNDMtNDciIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9mcmFtZWRfU2NyZWVuc2hvdF8yMDEyLTEyLTI2LTEwLTQzLTQ3LTYzMHgxMDk0LmpwZyIgd2lkdGg9IjMwMiIgaGVpZ2h0PSI1MjUiIC8%PC9hPjwvcD4NCjxwPkxlIFBsYXkgU3RvcmUgZXN0IGF1am91cmQmcnNxdW87aHVpIGxhIGJvdXRpcXVlIGQmcnNxdW87YXBwbGljYXRpb25zIGxhIHBsdXMgY29tcGzDqHRlIHN1ciBBbmRyb2lkLiBVbiBwcm9ibMOobWUgbCZyc3F1bztlbnRhY2hlIHZyYWltZW50IDogdW5lIGFwcGxpY2F0aW9uIHF1aSBkZXZpZW50IGdyYXR1aXRlLCBuZSBwZXV0IHBsdXMgZGV2ZW5pciBwYXlhbnRlLiBDJnJzcXVvO2VzdCBhaW5zaSBxdSZyc3F1bztpbCBuJnJzcXVvO2VzdCBwYXMgcG9zc2libGUgZCZyc3F1bzthdm9pciBkZXMgYmFpc3NlcyBkZSBwcml4IHRlbXBvcmFpcmVzIGF1c3NpIGFnZ3Jlc3NpdmVzIHF1ZSBzdXIgbCZyc3F1bztBcHAgU3RvcmUgZCZyc3F1bztBcHBsZS4gTWFpcyBncsOiY2Ugw6AgbCZyc3F1bztvdXZlcnR1cmUgZHUgc3lzdMOobWUgZCZyc3F1bztleHBsb2l0YXRpb24sIGlsIGV4aXN0ZSBkZSB0csOocyBub21icmV1eCBtYXJrZXRzIHRpZXJzLCBkb250IGxlIHBsdXMgaW1wb3J0YW50IGVzdCB0ZW51IHBhciBBbWF6b24gOiBsJnJzcXVvO0FwcCBTaG9wIChvdSBBbWF6b24gQXBwU3RvcmUgZW4gZGVob3JzIGRlcyBmcm9udGnDqHJlcyBmcmFuw6dhaXNlcykuPHNwYW4gaWQ9Im1vcmUtMTIyNDkxIj48L3NwYW4%PC9wPg0KPHA%Q2hhcXVlIGpvdXIsIHVuZSBhcHBsaWNhdGlvbiBkZXZpZW50IGdyYXR1aXRlLCB2aWEgJmxhcXVvOyZuYnNwO2wmcnNxdW87QXBwbGljYXRpb24gZ3JhdHVpdGUgZHUgam91ciZuYnNwOyZyYXF1bzsuIEF1am91cmQmcnNxdW87aHVpLCBjJnJzcXVvO2VzdCBhdSB0b3VyIGR1IGPDqWzDqGJyZSBqZXUgV29ybGQgb2YgR29vIGRlIHBhc3NlciBncmF0dWl0ICgzLDk5IOKCrCBzdXIgbGUgUGxheSBTdG9yZSkuIFNpIHZvdXMgbmUgY29ubmFpc3NleiBwYXMgY2UgamV1IGluZMOpcGVuZGFudCwgaWwgcyZyc3F1bzthZ2l0IGQmcnNxdW87dW4gcHV6emxlLWdhbWUgZGFucyBsZXF1ZWwgdm91cyBhbGxleiBkZXZvaXIgYW1lbmVyIHVuIGNlcnRhaW4gbm9tYnJlIGRlIGJvdWxlcyBub2lyZXMgKGxlcyBHb29zKSB2ZXJzIHVuIHR1eWF1IHF1aSB2YSBsZXMgYXNwaXJlci4gTGVzIEdvb3Mgb250IHVuZSBwYXJ0aWN1bGFyaXTDqSA6IGlscyBwZXV2ZW50IGNyw6llciBkZXMgbGlhaXNvbnMgZW50cmUgZXV4LCBwZXJtZXR0YW50IGFpbnNpIGRlIGNyw6llciBkZXMgc3RydWN0dXJlcyBxdWkgdm9udCBwZXJtZXR0cm9udCBkJnJzcXVvO2FsbGVyIGp1c3F1JnJzcXVvO2F1IHR1eWF1LiBEZSBuaXZlYXUgZW4gbml2ZWF1LCBsYSBkaWZmaWN1bHTDqSBzZSBjb3JzZSwgbWFpcyByZXN0ZSB0b3Vqb3VycyB0csOocyBhY2Nlc3NpYmxlIDo8L3A%DQo8cD48YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYXBwbGljYXRpb25zL2pldXgtYW5kcm9pZC1hcHBsaWNhdGlvbnMvMTIyNDkxX3dvcmxkLW9mLWdvby1ncmF0dWl0YW1hem9uLWFwcC1zaG9wL2F0dGFjaG1lbnQvZnJhbWVkX3NjcmVlbnNob3RfMjAxMi0xMi0yNi0xMC01My0yNy8iIHJlbD0iYXR0YWNobWVudCB3cC1hdHQtMTIyNDkzIj48aW1nIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLW1lZGl1bSB3cC1pbWFnZS0xMjI0OTMgY29sb3Jib3gtMTIyNDkxIiBhbHQ9ImZyYW1lZF9TY3JlZW5zaG90XzIwMTItMTItMjYtMTAtNTMtMjciIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9mcmFtZWRfU2NyZWVuc2hvdF8yMDEyLTEyLTI2LTEwLTUzLTI3LTYzMHgzNjIuanBnIiB3aWR0aD0iNjMwIiBoZWlnaHQ9IjM2MiIgLz48L2E%PC9wPg0KXV0%PC9jb250ZW50OmVuY29kZWQ%DQoJCQk8d2Z3OmNvbW1lbnRSc3M%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FwcGxpY2F0aW9ucy9qZXV4LWFuZHJvaWQtYXBwbGljYXRpb25zLzEyMjQ5MV93b3JsZC1vZi1nb28tZ3JhdHVpdGFtYXpvbi1hcHAtc2hvcC9mZWVkLzwvd2Z3OmNvbW1lbnRSc3M%DQoJCTxzbGFzaDpjb21tZW50cz4yMzwvc2xhc2g6Y29tbWVudHM%DQoJCTwvaXRlbT4NCgkJPGl0ZW0%DQoJCTx0aXRsZT5GaW5hbGVtZW50LCBsZSBPcHBvIEZpbmQgNSBzb3J0aXJhIGVuIEV1cm9wZSAhPC90aXRsZT4NCgkJPGxpbms%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMjQ4MV9maW5hbGVtZW50LWxlLW9wcG8tZmluZC01LXNvcnQtZW4tZXVyb3BlLzwvbGluaz4NCgkJPGNvbW1lbnRzPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjI0ODFfZmluYWxlbWVudC1sZS1vcHBvLWZpbmQtNS1zb3J0LWVuLWV1cm9wZS8jY29tbWVudHM8L2NvbW1lbnRzPg0KCQk8cHViRGF0ZT5XZWQsIDI2IERlYyAyMDEyIDAxOjQyOjE0ICswMDAwPC9wdWJEYXRlPg0KCQk8ZGM6Y3JlYXRvcj5Ub255IEJhbHQ8L2RjOmNyZWF0b3I%DQoJCQkJPGNhdGVnb3J5PjwhW0NEQVRBW0FjdHVhbGl0w6lzIEfDqW7DqXJhbGVzXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW0FuZHJvaWRdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbRXVyb3BlXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW2ZpbmQgNV1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtvcHBvXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW09wcG8gRmluZCA1XV0%PC9jYXRlZ29yeT4NCgkJPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vP3A9MTIyNDgxPC9ndWlkPg0KCQk8ZGVzY3JpcHRpb24%PCFbQ0RBVEFbT3BwbyBsJiM4MjE3O2EgYW5ub25jw6kgb2ZmaWNpZWxsZW1lbnQsIGxlIEZpbmQgNSBzb3J0aXJhIGVuIEV1cm9wZS4gRmluYWxlbWVudCBpbCBzZW1ibGVyYWl0IHF1ZSBPcHBvIGFpdCBwbHVzIGQmIzgyMTc7dW5lIGNvcmRlIMOgIHNvbiBhcmMsIGxlIGNvbnN0cnVjdGV1ciB2aWVudCBkJiM4MjE3O2Fubm9uY2VyIHF1JiM4MjE3O2lsIGFsbGFpdCBmaW5hbGVtZW50IGF1c3NpIGludmVzdGlyIGxlIG1hcmNow6kgZXVyb3DDqWVuIGF2ZWMgc29uIHNtYXJ0cGhvbmUgc291cyBsYSBmb3JtZSBkJiM4MjE3O3VuIG5vdXZlYXUgbW9kw6hsZSAzMiBHby4gTm91dmVhdSA:IE91aSBpbCBzJiM4MjE3O2FnaXQgZCYjODIxNzt1biB0b3V0IGF1dHJlIG1vZMOobGUsIMOpdGFudCBkb25uw6kgcXVlIE9wcG8gYXZhaXQgw6l2b3F1w6kgbmUgcGFzIHBvdXZvaXIgcsOpcG9uZHJlIMOgIGxhIGRlbWFuZGUgZCYjODIxNzt1bmUgY29tbWVyY2lhbGlzYXRpb24gbW9uZGlhbGUgcG91ciBzYSB2ZXJzaW9uIDE2IEdvLCBuw6lhbm1vaW5zLi4uIDxhIGNsYXNzPSJtb3JlLWxpbmsiIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjI0ODFfZmluYWxlbWVudC1sZS1vcHBvLWZpbmQtNS1zb3J0LWVuLWV1cm9wZS8iPkxpcmUgbGEgc3VpdGUuLi48L2E%XV0%PC9kZXNjcmlwdGlvbj4NCgkJCQk8Y29udGVudDplbmNvZGVkPjwhW0NEQVRBWzxwPk9wcG8gbCZyc3F1bzthIGFubm9uY8OpIG9mZmljaWVsbGVtZW50LCBsZSA8YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTIwOTk1X29wcG8tbGUtZmluZC01LWVzdC1vZmZpY2llbC1ldC1hcnJpdmVyYS1lbi1qYW52aWVyLWVuLWNoaW5lLyI%RmluZCA1PC9hPiBzb3J0aXJhIGVuIEV1cm9wZS48L3A%DQo8cCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyI%PGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9ImFzc2V0cy9mZWVkc19pbWFnZXMvYW5kcm9pZC1vcHBvLWZpbmQtNS0zMi1nby1ldXJvcGUtaW1hZ2UtMS5qcGciPjxpbWcgY2xhc3M9IiB3cC1pbWFnZS0xMjI0ODMgYWxpZ25jZW50ZXIgY29sb3Jib3gtMTIyNDgxIiBhbHQ9ImFuZHJvaWQtb3Bwby1maW5kLTUtMzItZ28tZXVyb3BlLWltYWdlLTEiIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9hbmRyb2lkLW9wcG8tZmluZC01LTMyLWdvLWV1cm9wZS1pbWFnZS0xLTYzMHgzNjQuanBnIiB3aWR0aD0iNTY3IiBoZWlnaHQ9IjMyOCIgLz48L2E%PC9wPg0KPHA%RmluYWxlbWVudCBpbCBzZW1ibGVyYWl0IHF1ZSBPcHBvIGFpdCBwbHVzIGQmcnNxdW87dW5lIGNvcmRlIMOgIHNvbiBhcmMsIGxlIGNvbnN0cnVjdGV1ciB2aWVudCBkJnJzcXVvO2Fubm9uY2VyIHF1JnJzcXVvO2lsIGFsbGFpdCBmaW5hbGVtZW50IGF1c3NpIGludmVzdGlyIGxlIG1hcmNow6kgZXVyb3DDqWVuIGF2ZWMgc29uIHNtYXJ0cGhvbmUgc291cyBsYSBmb3JtZSBkJnJzcXVvO3VuIG5vdXZlYXUgbW9kw6hsZSAzMiBHby4gTm91dmVhdSA:IE91aSBpbCBzJnJzcXVvO2FnaXQgZCZyc3F1bzt1biB0b3V0IGF1dHJlIG1vZMOobGUsIMOpdGFudCBkb25uw6kgcXVlIE9wcG8gYXZhaXQgw6l2b3F1w6kgPGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMTgyNl9vcHBvLWZpbmQtNS1sZXVyb3BlLW5lLXNlcmEtcGFzLXNlcnZpZS8iPm5lIHBhcyBwb3V2b2lyIHLDqXBvbmRyZSDDoCBsYSBkZW1hbmRlPC9hPiBkJnJzcXVvO3VuZSBjb21tZXJjaWFsaXNhdGlvbiBtb25kaWFsZSBwb3VyIHNhIHZlcnNpb24gMTYgR28sIG7DqWFubW9pbnMgY2UgbW9kw6hsZSAzMiBHbyBjaGFuZ2UgbGEgZG9ubmUuPC9wPg0KPHA%TGEgdG90YWxpdMOpIGRlcyBwYXlzIGNvbmNlcm7DqXMgc29udCBsZSBDYW5hZGEsIGxlIFJveWF1bWUtVW5pLCBsJnJzcXVvO0VzcGFnbmUsIGwmcnNxdW87QXVzdHJhbGllLCBsJnJzcXVvO0FsbGVtYWduZSwgbGEgRnJhbmNlLCBsYSBCZWxnaXF1ZSwgbGEgTWFsYWlzaWUsIGxhIFN1w6hkZSwgU2luZ2Fwb3VyLCBsYSBGaW5sYW5kZSwgbGEgR3LDqGNlLCBsZSBEYW5lbWFyaywgbGEgTm91dmVsbGUtWsOpbGFuZGUsIGxhIE5vcnbDqGdlLCBsZSBKYXBvbiBldCBIb25nIEtvbmcuIE9wcG8gYXVyYWl0IMOpZ2FsZW1lbnQgZMOpY2xhcsOpIHF1JnJzcXVvO2lsIHMmcnNxdW87YWdpdCBkJnJzcXVvO3VuZSBsaXN0ZSBwYXJ0aWVsbGUgZXQgcXUmcnNxdW87ZWxsZSBwb3VycmFpdCBzJnJzcXVvO2FncmFuZGlyIGRhbnMgbGVzIHByb2NoYWluZXMgc2VtYWluZXMsIGFpbnNpIG9uIGltYWdpbmUgcXUmcnNxdW87ZWxsZSDDqXZvbHVlcmEgZW4gZm9uY3Rpb24gZGVzIHN0b2NrcyBkaXNwb25pYmxlcy48c3BhbiBpZD0ibW9yZS0xMjI0ODEiPjwvc3Bhbj48L3A%DQo8cD48c3BhbiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7Ij5SZXRvdXIgc3VyIGxhIGZpY2hlIHRlY2huaXF1ZSA6PC9zcGFuPjwvcD4NCjx1bD4NCjxsaT5BbmRyb2lkIDQuMS4yIEplbGx5IEJlYW48L2xpPg0KPGxpPkVjcmFuIHRhY3RpbGUgSVBTIGRlIDUgcG91Y2VzPC9saT4NCjxsaT5Sw6lzb2x1dGlvbiBGdWxsIEhEICgxMDgwIHggMTkyMCBwaXhlbHMpPC9saT4NCjxsaT5BcmNoaXRlY3R1cmUgcXVhZHJ1cGxlLWNvZXVyIFNuYXBkcmFnb24gUzQgUHJvIChBUFE4MDY0KTwvbGk%DQo8bGk%UHVjZSBncmFwaGlxdWUgQWRyZW5vIDMyMCBldCAyIEdvIGRlIG3DqW1vaXJlIHZpdmUgKFJBTSk8L2xpPg0KPGxpPkFwcGFyZWlsIHBob3RvIChIRFIgZXQgRi8yLjIgbGVucykgZGUgMTMgbcOpZ2FwaXhlbHM8L2xpPg0KPGxpPk5GQywgV2lGaSwgQmx1ZXRvb3RoLCBHUFMvQS1HUFMsIDNHIChIU1BBKykgZXQgNEcgKExURSk8L2xpPg0KPGxpPkRpbWVuc2lvbnMgMTQxLjggeCA2OC44IHggOC44Nm1tPC9saT4NCjxsaT5CYXR0ZXJpZSBkZSAyNTAwIG1BaDwvbGk%DQo8L3VsPg0KPHA%TGEgZGF0ZSBkZSBzb3J0aWUgbiZyc3F1bzthIHBhcyBleGFjdGVtZW50IMOpdMOpIHByw6ljaXPDqWUsIG1haXMgb24gcGFybGUgZGUgZMOpYnV0IDIwMTMuPGJyIC8%DQpTb24gcHJpeCBkZSB2ZW50ZSBzZXJhaXQgZGUgNTY5IGRvbGxhcnMgKHNvaXQgNDMxIGV1cm9zKSBwb3VyIGxlIG1vZMOobGUgMzIgR28uPC9wPg0KPHA%c291cmNlIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vcGhvdG8ucGhwP2ZiaWQ9MTkwODc0MzQ3NzE5NjEwJmFtcDtzZXQ9YS4xODQ0NTIzNzE2OTUxNDEuNDYxMDUuMTgwMjAzNjYyMTIwMDEyJmFtcDt0eXBlPTEmYW1wO3RoZWF0ZXIiPkZhY2Vib29rIE9wcG88L2E%PGJyIC8%DQo8ZW0%TWVyY2kgw6AgPHN0cm9uZz5TYWNoYTwvc3Ryb25nPiBwb3VyIGwmcnNxdW87aW5mbyAhPC9lbT48L3A%DQpdXT48L2NvbnRlbnQ6ZW5jb2RlZD4NCgkJCTx3Znc6Y29tbWVudFJzcz5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTIyNDgxX2ZpbmFsZW1lbnQtbGUtb3Bwby1maW5kLTUtc29ydC1lbi1ldXJvcGUvZmVlZC88L3dmdzpjb21tZW50UnNzPg0KCQk8c2xhc2g6Y29tbWVudHM%NDQ8L3NsYXNoOmNvbW1lbnRzPg0KCQk8L2l0ZW0%DQoNCgkJPGl0ZW0%DQoJCTx0aXRsZT5PcHBvIFVsaWtlIDIsIGxlIHByZW1pZXIgbW9iaWxlIGF2ZWMgdW5lIHdlYmNhbSBkZSA1IG1weDwvdGl0bGU%DQoJCTxsaW5rPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjIzNzdfb3Bwby11bGlrZS0yLWxlLXByZW1pZXItc21hcnRwaG9uZS1hdmVjLXVuZS1jYW1lcmEtZnJvbnRhbGUtZGUtNS1tZWdhcGl4ZWxzLXNvdXMtYW5kcm9pZC88L2xpbms%DQoJCTxjb21tZW50cz5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTIyMzc3X29wcG8tdWxpa2UtMi1sZS1wcmVtaWVyLXNtYXJ0cGhvbmUtYXZlYy11bmUtY2FtZXJhLWZyb250YWxlLWRlLTUtbWVnYXBpeGVscy1zb3VzLWFuZHJvaWQvI2NvbW1lbnRzPC9jb21tZW50cz4NCgkJPHB1YkRhdGU%VHVlLCAyNSBEZWMgMjAxMiAxMDoxNDo0MCArMDAwMDwvcHViRGF0ZT4NCgkJPGRjOmNyZWF0b3I%VG9ueSBCYWx0PC9kYzpjcmVhdG9yPg0KCQkJCTxjYXRlZ29yeT48IVtDREFUQVtBY3R1YWxpdMOpcyBHw6luw6lyYWxlc11dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtBbmRyb2lkXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW2NoaW5lXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW29wcG9dXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbb3BwbyB1bGlrZSAyXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW3VsaWtlIDJdXT48L2NhdGVnb3J5Pg0KCQk8Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS8:cD0xMjIzNzc8L2d1aWQ%DQoJCTxkZXNjcmlwdGlvbj48IVtDREFUQVtBY3R1ZWxsZW1lbnQgZW4gY291cnMgZGUgbGFuY2VtZW50IHN1ciBsZSB0ZXJyaXRvaXJlIGNoaW5vaXMsIHZvaWNpIGxlIE9wcG8gVWxpa2UgMi4gRXQgZW4gZWZmZXQsIGxlIFVsaWtlIDIgc2VyYWl0IGJlbCBldCBiaWVuIGxlIHByZW1pZXIgc21hcnRwaG9uZSBBbmRyb2lkIGF1IG1vbmRlIMOgIGluY2x1cmUgdW5lIGNhbcOpcmEgZnJvbnRhbGUgZGUgNSBtw6lnYXBpeGVscywgbMOgIG:DuSBsZXMgYXV0cmVzIGNvbnN0cnVjdGV1cnMgc3RhZ25lbnQgZW5jb3JlIMOgIGNlIGpvdXIgYXV0b3VyIGRlcyAxLjMgZXQgMiBtw6lnYXBpeGVscy4gSWNpLCBpbCBlc3QgZGlmZmljaWxlIGRlIHBhcmxlciBkZSByw6l2b2x1dGlvbiwgbsOpYW5tb2lucyBvbiBwZXV0IHRvdXQgZGUgbcOqbWUgcXVhbGlmaWVyIGNlbGEgdGVsbGUgdW5lIMOpdm9sdXRpb24gdGVjaG5pcXVlIHB1aXNxdWUuLi4gPGEgY2xhc3M9Im1vcmUtbGluayIgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMjM3N19vcHBvLXVsaWtlLTItbGUtcHJlbWllci1zbWFydHBob25lLWF2ZWMtdW5lLWNhbWVyYS1mcm9udGFsZS1kZS01LW1lZ2FwaXhlbHMtc291cy1hbmRyb2lkLyI%TGlyZSBsYSBzdWl0ZS4uLjwvYT5dXT48L2Rlc2NyaXB0aW9uPg0KCQkJCTxjb250ZW50OmVuY29kZWQ%PCFbQ0RBVEFbPHA%QWN0dWVsbGVtZW50IGVuIGNvdXJzIGRlIGxhbmNlbWVudCBzdXIgbGUgdGVycml0b2lyZSBjaGlub2lzLCB2b2ljaSBsZSA8c3Ryb25nPk9wcG8gVWxpa2UgMjwvc3Ryb25nPi48L3A%DQo8cCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyI%PGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9ImFzc2V0cy9mZWVkc19pbWFnZXMvYW5kcm9pZC1vcHBvLXVsaWtlLTItY2hpbmUtaW1hZ2UtMC5qcGciPjxpbWcgY2xhc3M9IiB3cC1pbWFnZS0xMjIzNzggYWxpZ25jZW50ZXIgY29sb3Jib3gtMTIyMzc3IiBhbHQ9ImFuZHJvaWQtb3Bwby11bGlrZS0yLWNoaW5lLWltYWdlLTAiIHNyYz0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9hbmRyb2lkLW9wcG8tdWxpa2UtMi1jaGluZS1pbWFnZS0wLmpwZyIgd2lkdGg9IjU1OCIgaGVpZ2h0PSIzNzciIC8%PC9hPjwvcD4NCjxwPkV0IGVuIGVmZmV0LCBsZSBVbGlrZSAyIHNlcmFpdCBiZWwgZXQgYmllbiBsZSBwcmVtaWVyIHNtYXJ0cGhvbmUgQW5kcm9pZCBhdSBtb25kZSDDoCBpbmNsdXJlIHVuZSBjYW3DqXJhIGZyb250YWxlIGRlIDUgbcOpZ2FwaXhlbHMsIGzDoCBvw7kgbGVzIGF1dHJlcyBjb25zdHJ1Y3RldXJzIHN0YWduZW50IGVuY29yZSDDoCBjZSBqb3VyIGF1dG91ciBkZXMgMS4zIGV0IDIgbcOpZ2FwaXhlbHMuPC9wPg0KPHA%PHNwYW4gaWQ9Im1vcmUtMTIyMzc3Ij48L3NwYW4%SWNpLCBpbCBlc3QgZGlmZmljaWxlIGRlIHBhcmxlciBkZSByw6l2b2x1dGlvbiwgbsOpYW5tb2lucyBvbiBwZXV0IHRvdXQgZGUgbcOqbWUgcXVhbGlmaWVyIGNlbGEgdGVsbGUgdW5lIMOpdm9sdXRpb24gdGVjaG5pcXVlIHB1aXNxdWUgZCZyc3F1bzt1biBjb3TDqSBpbCBuZSBzZXJhaXQgcGFzIGltcG9zc2libGUgcXVlIE9wcG8gaW5zcGlyZSBkJnJzcXVvO2F1dHJlcyBmYWJyaWNhbnRzIMOgIGFkb3B0ZXIgY2UgdHlwZSBkZSBjYW3DqXJhcyBmcm9udGFsZXMgZGFucyB1biBmdXR1ciBwcm9jaGUuIEV2aWRlbW1lbnQsIGxlIG5vbWJyZSBkZSBwaXhlbHMgbmUgdmV1dCBjbGFpcmVtZW50IHJpZW4gZGlyZSAuLiBpbCBmYXV0IHBsdXMgc2UgZmllciDDoCBsYSBxdWFsaXTDqSBwcm9wcmUgZGUgc2VzIHBpeGVscyBwb3VyIHMmcnNxdW87ZW4gZmFpcmUgdW5lIG9waW5pb24gY29uY2lzZS48L3A%DQo8cD5RdWFudCBhdXggYXV0cmVzIGNhcmFjdMOpcmlzdGlxdWVzIHRlY2huaXF1ZXMsIGwmcnNxdW87T3BwbyBVbGlrZSAyIHNlIGNvbXBvc2UgOjwvcD4NCjx1bD4NCjxsaT5kZSBsYSB2ZXJzaW9uIGQmcnNxdW87QW5kcm9pZCA0LjA8L2xpPg0KPGxpPmQmcnNxdW87dW4gw6ljcmFuIHRhY3RpbGUgTENEIGRlIDQuNSBwb3VjZXM8L2xpPg0KPGxpPmVuIHLDqXNvbHV0aW9uIHFIRCAoNTQwIHggOTYwIHBpeGVscyk8L2xpPg0KPGxpPjEgR28gZGUgbcOpbW9pcmUgdml2ZSAoUkFNKTwvbGk%DQo8bGk%Y2Ftw6lyYSBmcm9udGFsZSAod2ViY2FtKSBkZSA1IG3DqWdhcGl4ZWxzPC9saT4NCjxsaT5hcHBhcmVpbCBwaG90byAoYXJyacOocmUpIGRlIDggbcOpZ2FwaXhlbHM8L2xpPg0KPGxpPjE2IEdvIGRlIG3DqW1vaXJlIGludGVybmU8L2xpPg0KPGxpPmxlIHByZW1pZXIgw6Agw6p0cmUgY29tcGF0aWJsZSA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9URC1TQ0RNQSI%VEQtU0NETUE8L2E%PC9saT4NCjxsaT5iYXR0ZXJpZSBkZSAyMDIwIG1BaDwvbGk%DQo8L3VsPg0KPHA%QXZlYyBsYSBjb252ZXJzaW9uLCBsZSBVbGlrZSA1IGVzdCB2ZW5kdSBhdXRvdXIgZGVzIDM3MCBkb2xsYXJzIGVuIENoaW5lLjxiciAvPg0KQXVjdW5lIGluZm9ybWF0aW9uIGNvbW11bmlxdcOpZSBzdXIgdW5lIMOpdmVudHVlbGxlIHNvcnRpZSBkYW5zIGxlIG1vbmRlLjwvcD4NCjxwPnZpYSA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cDovL2NuLmVuZ2FkZ2V0LmNvbS8yMDEyLzEyLzIwL29wcG8tdWxpa2UtMi0yMjk4LyI%RW5nYWRnZXQgQ2hpbmVzZTwvYT48L3A%DQpdXT48L2NvbnRlbnQ6ZW5jb2RlZD4NCgkJCTx3Znc6Y29tbWVudFJzcz5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTIyMzc3X29wcG8tdWxpa2UtMi1sZS1wcmVtaWVyLXNtYXJ0cGhvbmUtYXZlYy11bmUtY2FtZXJhLWZyb250YWxlLWRlLTUtbWVnYXBpeGVscy1zb3VzLWFuZHJvaWQvZmVlZC88L3dmdzpjb21tZW50UnNzPg0KCQk8c2xhc2g6Y29tbWVudHM%MjQ8L3NsYXNoOmNvbW1lbnRzPg0KCQk8L2l0ZW0%DQoJCTxpdGVtPg0KCQk8dGl0bGU%R29vZ2xlIDogZGVzIGZvbmRzIGQmIzgyMTc7w6ljcmFuIEFuZHJvaWQgc3VyIGxlIHRow6htZSBkZSBub8OrbDwvdGl0bGU%DQoJCTxsaW5rPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjIzNjZfZ29vZ2xlLWRlcy1mb25kcy1kZWNyYW4tYW5kcm9pZC1zdXItbGUtdGhlbWUtZGUtbm9lbC88L2xpbms%DQoJCTxjb21tZW50cz5odHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTIyMzY2X2dvb2dsZS1kZXMtZm9uZHMtZGVjcmFuLWFuZHJvaWQtc3VyLWxlLXRoZW1lLWRlLW5vZWwvI2NvbW1lbnRzPC9jb21tZW50cz4NCgkJPHB1YkRhdGU%VHVlLCAyNSBEZWMgMjAxMiAwOTowMjoxMiArMDAwMDwvcHViRGF0ZT4NCgkJPGRjOmNyZWF0b3I%VG9ueSBCYWx0PC9kYzpjcmVhdG9yPg0KCQkJCTxjYXRlZ29yeT48IVtDREFUQVtBY3R1YWxpdMOpcyBHw6luw6lyYWxlc11dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtBbmRyb2lkXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW2NhcnRlIGRlIHbFk3V4XV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW2ZvbmQgZCfDqWNyYW5dXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbbm9lbF1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVt3YWxscGFwZXJdXT48L2NhdGVnb3J5Pg0KCQk8Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS8:cD0xMjIzNjY8L2d1aWQ%DQoJCTxkZXNjcmlwdGlvbj48IVtDREFUQVtEaXNwb25pYmxlIGRlcHVpcyBxdWVscXVlcyBqb3VycywgaiYjODIxNzthdHRlbmRhaXMgbGUgam91ciBkZSBub8OrbCBwb3VyIHZvdXMgcGFydGFnZXIgc2VzIGNhcnRlcyBkZSBub8OrbCBzdXIgbGUgdGjDqG1lIGQmIzgyMTc7QW5kcm9pZC4gUHVibGnDqSBwYXIgR29vZ2xlIHN1ciBzYSBwYWdlIG9mZmljaWVsbGUgTmV4dXMsIHNlcyBjYXJ0ZXMgZGUgdsWTdXggw6lsZWN0cm9uaXF1ZXMgcGV1dmVudCDDqWdhbGVtZW50IMOqdHJlIHV0aWxpc8OpZXMgw6AgZCYjODIxNzthdXRyZXMgZmlucywgdGVscyBkZXMgZm9uZHMgZCYjODIxNzvDqWNyYW4gZXQgbcOqbWUgZGVzIHBvc3RlcnMgZ3JhbmQgZm9ybWF0LiBQb3VyIHTDqWzDqWNoYXJnZXIgbGVzIG1vZMOobGVzIGVuIGdyYW5kIGZvcm1hdCwgcmVuZGV6LXZvdXMgw6AgY2V0dGUgYWRyZXNzZS4gc291cmNlIEdvb2dsZSBOZXh1c11dPjwvZGVzY3JpcHRpb24%DQoJCQkJPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD5EaXNwb25pYmxlIGRlcHVpcyBxdWVscXVlcyBqb3VycywgaiZyc3F1bzthdHRlbmRhaXMgbGUgam91ciBkZSBub8OrbCBwb3VyIHZvdXMgcGFydGFnZXIgc2VzIGNhcnRlcyBkZSBub8OrbCBzdXIgbGUgdGjDqG1lIGQmcnNxdW87QW5kcm9pZC48L3A%DQo8cCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyI%PGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9ImFzc2V0cy9mZWVkc19pbWFnZXMvTmV4dXNfZmlyZXBsYWNlX2Zyb250LTEuanBnIj48aW1nIGNsYXNzPSIgd3AtaW1hZ2UtMTIyMzY3IGFsaWduY2VudGVyIGNvbG9yYm94LTEyMjM2NiIgYWx0PSJOZXh1c19maXJlcGxhY2VfZnJvbnQtMSIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL05leHVzX2ZpcmVwbGFjZV9mcm9udC0xLmpwZyIgd2lkdGg9IjU2NyIgaGVpZ2h0PSIzODUiIC8%PC9hPjwvcD4NCjxwPlB1Ymxpw6kgcGFyIEdvb2dsZSBzdXIgc2EgcGFnZSBvZmZpY2llbGxlIE5leHVzLCBzZXMgY2FydGVzIGRlIHbFk3V4IMOpbGVjdHJvbmlxdWVzIHBldXZlbnQgw6lnYWxlbWVudCDDqnRyZSB1dGlsaXPDqWVzIMOgIGQmcnNxdW87YXV0cmVzIGZpbnMsIHRlbHMgZGVzIGZvbmRzIGQmcnNxdW87w6ljcmFuIGV0IG3Dqm1lIGRlcyBwb3N0ZXJzIGdyYW5kIGZvcm1hdC48c3BhbiBpZD0ibW9yZS0xMjIzNjYiPjwvc3Bhbj48L3A%DQo8cCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyI%PGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9ImFzc2V0cy9mZWVkc19pbWFnZXMvTmV4dXNfc2thdGluZ19mcm9udC0xLmpwZyI%PGltZyBjbGFzcz0iIHdwLWltYWdlLTEyMjM3MCBhbGlnbmNlbnRlciBjb2xvcmJveC0xMjIzNjYiIGFsdD0iTmV4dXNfc2thdGluZ19mcm9udC0xIiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvTmV4dXNfc2thdGluZ19mcm9udC0xLmpwZyIgd2lkdGg9IjU2NyIgaGVpZ2h0PSIzODUiIC8%PC9hPiA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iYXNzZXRzL2ZlZWRzX2ltYWdlcy9OZXh1c19pZ2xvb19mcm9udC0xLmpwZyI%PGltZyBjbGFzcz0iIHdwLWltYWdlLTEyMjM2OSBhbGlnbmNlbnRlciBjb2xvcmJveC0xMjIzNjYiIGFsdD0iTmV4dXNfaWdsb29fZnJvbnQtMSIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL05leHVzX2lnbG9vX2Zyb250LTEuanBnIiB3aWR0aD0iNTY3IiBoZWlnaHQ9IjM4NSIgLz48L2E%IDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJhc3NldHMvZmVlZHNfaW1hZ2VzL05leHVzX2NhbXBmaXJlX2Zyb250LTEuanBnIj48aW1nIGNsYXNzPSIgd3AtaW1hZ2UtMTIyMzY4IGFsaWduY2VudGVyIGNvbG9yYm94LTEyMjM2NiIgYWx0PSJOZXh1c19jYW1wZmlyZV9mcm9udC0xIiBzcmM9ImFzc2V0cy9mZWVkc19pbWFnZXMvTmV4dXNfY2FtcGZpcmVfZnJvbnQtMS5qcGciIHdpZHRoPSI0MjgiIGhlaWdodD0iNjMwIiAvPjwvYT48L3A%DQo8cD5Qb3VyIHTDqWzDqWNoYXJnZXIgbGVzIG1vZMOobGVzIGVuIGdyYW5kIGZvcm1hdCwgcmVuZGV6LXZvdXMgw6AgPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vcGx1cy5nb29nbGUuY29tL3UvMC8rTmV4dXMvcG9zdHMvVGRTV0FpYVBTVEoiPmNldHRlIGFkcmVzc2U8L2E%LjwvcD4NCjxwPnNvdXJjZSA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly9wbHVzLmdvb2dsZS5jb20vdS8wLytOZXh1cy9wb3N0cy9UZFNXQWlhUFNUSiI%R29vZ2xlIE5leHVzPC9hPjwvcD4NCl1dPjwvY29udGVudDplbmNvZGVkPg0KCQkJPHdmdzpjb21tZW50UnNzPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjIzNjZfZ29vZ2xlLWRlcy1mb25kcy1kZWNyYW4tYW5kcm9pZC1zdXItbGUtdGhlbWUtZGUtbm9lbC9mZWVkLzwvd2Z3OmNvbW1lbnRSc3M%DQoJCTxzbGFzaDpjb21tZW50cz40PC9zbGFzaDpjb21tZW50cz4NCgkJPC9pdGVtPg0KDQoJCTxpdGVtPg0KCQk8dGl0bGU%QW5kcm9pZCA0LjEuMSBlbiBjb3VycyBkZSBkw6lwbG9pZW1lbnQgc3VyIGxlIEhUQyBPbmUgUzwvdGl0bGU%DQoJCTxsaW5rPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjIzNDRfYW5kcm9pZC00LTEtMS1lbi1jb3Vycy1kZS1kZXBsb2llbWVudC1zdXItbGUtaHRjLW9uZS1zLzwvbGluaz4NCgkJPGNvbW1lbnRzPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjIzNDRfYW5kcm9pZC00LTEtMS1lbi1jb3Vycy1kZS1kZXBsb2llbWVudC1zdXItbGUtaHRjLW9uZS1zLyNjb21tZW50czwvY29tbWVudHM%DQoJCTxwdWJEYXRlPk1vbiwgMjQgRGVjIDIwMTIgMTQ6MDU6NDEgKzAwMDA8L3B1YkRhdGU%DQoJCTxkYzpjcmVhdG9yPkVkb3VhcmQgTWFycXVlejwvZGM6Y3JlYXRvcj4NCgkJCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbQWN0dWFsaXTDqXMgR8OpbsOpcmFsZXNdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbQW5kcm9pZF1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtIVENdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbaHRjIG9uZSBzXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW21pc2Ugw6Agam91cl1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtvbmUgc11dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVt1cGRhdGVdXT48L2NhdGVnb3J5Pg0KCQk8Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS8:cD0xMjIzNDQ8L2d1aWQ%DQoJCTxkZXNjcmlwdGlvbj48IVtDREFUQVtIVEMgZMOpbGl2cmUgdW4gYmVhdSBjYWRlYXUganVzdGUgYXZhbnQgTm:Dq2wuIFZvdXMgbiYjODIxNzt5IGNyb3lpZXogcGx1cyA:IEhUQyBhIGVuZmluIHLDqXVzc2kgbCYjODIxNztpbXBvc3NpYmxlIDogZMOpcGxveWVyIGxhIG1pc2Ugw6Agam91ciB2ZXJzIEFuZHJvaWQgNC4xLjEgc3VyIGxlIEhUQyBPbmUgUyAhIEEgcXVlbHF1ZXMgaGV1cmVzIGRlIE5vw6tsLCB2b2lsw6AgcXVpIGZlcmEgcGxhaXNpciDDoCBwbHVzIGQmIzgyMTc7dW4gISBBdSBuaXZlYXUgZHUgY2hhbmdlbG9nLCBvbiByZXRyb3V2ZSA6IC0gQW5kcm9pZCA0LjEuMSBldCBIVEMgU2Vuc2UgNCsgLSBOb3V2ZWxsZSBpbnRlcmZhY2UgcG91ciBsJiM4MjE3O2FwcGxpY2F0aW9uIEFwcGFyZWlsIFBob3RvIC0gTm91dmVsbGUgcGFnZSBkJiM4MjE3O2FjY3VlaWwgZXQgY2xhc3NlbWVudCBkZXMgcGhvdG9zLi4uIDxhIGNsYXNzPSJtb3JlLWxpbmsiIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjIzNDRfYW5kcm9pZC00LTEtMS1lbi1jb3Vycy1kZS1kZXBsb2llbWVudC1zdXItbGUtaHRjLW9uZS1zLyI%TGlyZSBsYSBzdWl0ZS4uLjwvYT5dXT48L2Rlc2NyaXB0aW9uPg0KCQkJCTxjb250ZW50OmVuY29kZWQ%PCFbQ0RBVEFbPHA%SFRDIGTDqWxpdnJlIHVuIGJlYXUgY2FkZWF1IGp1c3RlIGF2YW50IE5vw6tsLjwvcD4NCjxwIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7Ij48YSBocmVmPSJodHRwOi8vd3d3LmZyYW5kcm9pZC5jb20vYWN0dWFsaXRlcy1nZW5lcmFsZXMvMTIyMzQ0X2FuZHJvaWQtNC0xLTEtZW4tY291cnMtZGUtZGVwbG9pZW1lbnQtc3VyLWxlLWh0Yy1vbmUtcy9hdHRhY2htZW50L2EtNGk2b3pjeWFhcHdnei1qcGctbGFyZ2UvIiByZWw9ImF0dGFjaG1lbnQgd3AtYXR0LTEyMjM0NSI%PGltZyBjbGFzcz0iYWxpZ25jZW50ZXIgIHdwLWltYWdlLTEyMjM0NSBjb2xvcmJveC0xMjIzNDQiIGFsdD0iQS00aTZvWkNZQUFQV2d6LmpwZy1sYXJnZSIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL0EtNGk2b1pDWUFBUFdnei5qcGctbGFyZ2UuanBlZyIgd2lkdGg9IjM3OCIgaGVpZ2h0PSI2NzIiIC8%PC9hPjwvcD4NCjxwPlZvdXMgbiZyc3F1bzt5IGNyb3lpZXogcGx1cyA:IEhUQyBhIGVuZmluIHLDqXVzc2kgbCZyc3F1bztpbXBvc3NpYmxlIDogZMOpcGxveWVyIGxhIG1pc2Ugw6Agam91ciB2ZXJzIEFuZHJvaWQgNC4xLjEgc3VyIGxlIEhUQyBPbmUgUyAhIEEgcXVlbHF1ZXMgaGV1cmVzIGRlIE5vw6tsLCB2b2lsw6AgcXVpIGZlcmEgcGxhaXNpciDDoCBwbHVzIGQmcnNxdW87dW4gISBBdSBuaXZlYXUgZHUgY2hhbmdlbG9nLCBvbiByZXRyb3V2ZSA6PC9wPg0KPGJsb2NrcXVvdGU%PHA%LSBBbmRyb2lkIDQuMS4xIGV0IEhUQyBTZW5zZSA0KzxiciAvPg0KLSBOb3V2ZWxsZSBpbnRlcmZhY2UgcG91ciBsJnJzcXVvO2FwcGxpY2F0aW9uIEFwcGFyZWlsIFBob3RvPGJyIC8%DQotIE5vdXZlbGxlIHBhZ2UgZCZyc3F1bzthY2N1ZWlsIGV0IGNsYXNzZW1lbnQgZGVzIHBob3RvcyBwYXIgw6l2w6luZW1lbnQgb3Ugc3VyIHVuZSBjYXJ0ZSBkYW5zIGxhIEdhbGVyaWU8YnIgLz4NCi0gT3B0aW1pc2F0aW9uIGRlIGxhIGJhdHRlcmllPHNwYW4gaWQ9Im1vcmUtMTIyMzQ0Ij48L3NwYW4%PC9wPjwvYmxvY2txdW90ZT4NCjxwPk4mcnNxdW87aMOpc2l0ZXogcGFzIMOgIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwOi8vZm9ydW0uZnJhbmRyb2lkLmNvbS90b3BpYy8xMDI5MDktbGVzLW1pc2UtYS1qb3VyLWR1LWh0Yy1vbmUtcy1kaXNjdXNzaW9uL3BhZ2VfX3N0X18xMTQwIiB0YXJnZXQ9Il9ibGFuayI%dm91cyByZW5kcmUgc3VyIGxlIGZvcnVtPC9hPiBwb3VyIG9idGVuaXIgcGx1cyBkJnJzcXVvO2luZm9ybWF0aW9ucy48L3A%DQo8cD5NZXJjaSDDoCA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9zZWJnb2IiIHRhcmdldD0iX2JsYW5rIj5Ac2ViZ29iPC9hPiBkZSBub3VzIGwmcnNxdW87YXZvaXIgc2lnbmFsw6ksIG1haXMgYXVzc2kgYXV4IDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwOi8vZm9ydW0uZnJhbmRyb2lkLmNvbS90b3BpYy8xMDI5MDktbGVzLW1pc2UtYS1qb3VyLWR1LWh0Yy1vbmUtcy1kaXNjdXNzaW9uL3BhZ2VfX3N0X18xMTQwIiB0YXJnZXQ9Il9ibGFuayI%bWVtYnJlcyBkdSBmb3J1bTwvYT4uPC9wPg0KPHA%Jm5ic3A7PC9wPg0KXV0%PC9jb250ZW50OmVuY29kZWQ%DQoJCQk8d2Z3OmNvbW1lbnRSc3M%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMjM0NF9hbmRyb2lkLTQtMS0xLWVuLWNvdXJzLWRlLWRlcGxvaWVtZW50LXN1ci1sZS1odGMtb25lLXMvZmVlZC88L3dmdzpjb21tZW50UnNzPg0KCQk8c2xhc2g6Y29tbWVudHM%OTA8L3NsYXNoOmNvbW1lbnRzPg0KCQk8L2l0ZW0%DQoJCTxpdGVtPg0KCQk8dGl0bGU%VW5lIHZpZMOpbyBkdSBTb255IFhwZXJpYSBUIHNvdXMgSmVsbHkgQmVhbjwvdGl0bGU%DQoJCTxsaW5rPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjIyMzlfdW5lLXZpZGVvLWR1LXNvbnkteHBlcmlhLXQtc291cy1qZWxseS1iZWFuLzwvbGluaz4NCgkJPGNvbW1lbnRzPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjIyMzlfdW5lLXZpZGVvLWR1LXNvbnkteHBlcmlhLXQtc291cy1qZWxseS1iZWFuLyNjb21tZW50czwvY29tbWVudHM%DQoJCTxwdWJEYXRlPk1vbiwgMjQgRGVjIDIwMTIgMTM6MzM6MTIgKzAwMDA8L3B1YkRhdGU%DQoJCTxkYzpjcmVhdG9yPkVkb3VhcmQgTWFycXVlejwvZGM6Y3JlYXRvcj4NCgkJCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbQWN0dWFsaXTDqXMgR8OpbsOpcmFsZXNdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbQW5kcm9pZCA0LjEuMl1dPjwvY2F0ZWdvcnk%DQoJCTxjYXRlZ29yeT48IVtDREFUQVtqZWxseSBiZWFuXV0%PC9jYXRlZ29yeT4NCgkJPGNhdGVnb3J5PjwhW0NEQVRBW3NvbnkgeHBlcmlhIHRdXT48L2NhdGVnb3J5Pg0KCQk8Y2F0ZWdvcnk%PCFbQ0RBVEFbeHBlcmlhIHRdXT48L2NhdGVnb3J5Pg0KCQk8Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPmh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS8:cD0xMjIyMzk8L2d1aWQ%DQoJCTxkZXNjcmlwdGlvbj48IVtDREFUQVsmIzgyMzA7bWFpcyBxdWkgbiYjODIxNzthcnJpdmVyYSBxdSYjODIxNztlbiBmw6l2cmllci9tYXJzIHN1ciBsZXMgdMOpbMOpcGhvbmVzLiBFbiBjZXR0ZSB2ZWlsbGUgZGUgTm:Dq2wsIGxlcyBib25uZXMgbm91dmVsbGVzIHNlIG11bHRpcGxpZW50IHBvdXIgbGVzIHBvc3Nlc3NldXJzIGRlIHNtYXJ0cGhvbmVzIFNvbnkuIEFwcsOocyBsYSBub3V2ZWxsZSB2ZXJzaW9uIGR1IGxhdW5jaGVyLCB2b2ljaSB1bmUgdmlkw6lvIGR1IFNvbnkgWHBlcmlhIFQgcXVpIHV0aWxpc2UgQW5kcm9pZCA0LjEuMiAoSmVsbHkgQmVhbikuIENlcnRlcyBjZSBuJiM4MjE3O2VzdCBwYXMgbGEgZGVybmnDqHJlIHZlcnNpb24gcHJvcG9zw6llIHBhciBHb29nbGUsIG1haXMgU29ueSBNb2JpbGUgYSBjb25jb2N0w6kgZGUgbm9tYnJldXNlcyBub3V2ZWF1dMOpcyBldCBtb2RpZmljYXRpb25zIGRlIGwmIzgyMTc7aW50ZXJmYWNlLiBDZXR0ZSB2ZXJzaW9uIHF1aSBlc3QgZW5jb3JlIGVuIGTDqXZlbG9wcGVtZW50IG1vbnRyZSBub3RhbW1lbnQgbGUuLi4gPGEgY2xhc3M9Im1vcmUtbGluayIgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMjIzOV91bmUtdmlkZW8tZHUtc29ueS14cGVyaWEtdC1zb3VzLWplbGx5LWJlYW4vIj5MaXJlIGxhIHN1aXRlLi4uPC9hPl1dPjwvZGVzY3JpcHRpb24%DQoJCQkJPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD48c3Ryb25nPiYjODIzMDttYWlzIHF1aSBuJnJzcXVvO2Fycml2ZXJhIHF1JnJzcXVvO2VuIGbDqXZyaWVyL21hcnMgc3VyIGxlcyB0w6lsw6lwaG9uZXMuPC9zdHJvbmc%PC9wPg0KPHA%PGEgaHJlZj0iaHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMjIzOV91bmUtdmlkZW8tZHUtc29ueS14cGVyaWEtdC1zb3VzLWplbGx5LWJlYW4vYXR0YWNobWVudC9zY3JlZW4tc2hvdC0yMDEyLTEyLTI0LWF0LTEwLTUzLTQ3LWFtLyIgcmVsPSJhdHRhY2htZW50IHdwLWF0dC0xMjIyNDIiPjxpbWcgY2xhc3M9ImFsaWduY2VudGVyIHNpemUtbWVkaXVtIHdwLWltYWdlLTEyMjI0MiBjb2xvcmJveC0xMjIyMzkiIGFsdD0iU2NyZWVuIFNob3QgMjAxMi0xMi0yNCBhdCAxMC41My40NyBBTSIgc3JjPSJhc3NldHMvZmVlZHNfaW1hZ2VzL1NjcmVlbi1TaG90LTIwMTItMTItMjQtYXQtMTAuNTMuNDctQU0tNjMweDM1My5qcGciIHdpZHRoPSI2MzAiIGhlaWdodD0iMzUzIiAvPjwvYT48L3A%DQo8cD5FbiBjZXR0ZSB2ZWlsbGUgZGUgTm:Dq2wsIGxlcyBib25uZXMgbm91dmVsbGVzIHNlIG11bHRpcGxpZW50IHBvdXIgbGVzIHBvc3Nlc3NldXJzIGRlIHNtYXJ0cGhvbmVzIFNvbnkuIDxhIGhyZWY9Imh0dHA6Ly93d3cuZnJhbmRyb2lkLmNvbS9hY3R1YWxpdGVzLWdlbmVyYWxlcy8xMjIyMzRfbGF1bmNoZXItc29ueS14cGVyaWEtei8iIHRhcmdldD0iX2JsYW5rIj5BcHLDqHMgbGEgbm91dmVsbGUgdmVyc2lvbiBkdSBsYXVuY2hlcjwvYT4sIHZvaWNpIHVuZSB2aWTDqW8gZHUgU29ueSBYcGVyaWEgVCBxdWkgdXRpbGlzZSBBbmRyb2lkIDQuMS4yIChKZWxseSBCZWFuKS4gQ2VydGVzIGNlIG4mcnNxdW87ZXN0IHBhcyBsYSBkZXJuacOocmUgdmVyc2lvbiBwcm9wb3PDqWUgcGFyIEdvb2dsZSwgbWFpcyBTb255IE1vYmlsZSBhIGNvbmNvY3TDqSBkZSBub21icmV1c2VzIG5vdXZlYXV0w6lzIGV0IG1vZGlmaWNhdGlvbnMgZGUgbCZyc3F1bztpbnRlcmZhY2UuPC9wPg0KPHA%Q2V0dGUgdmVyc2lvbiBxdWkgZXN0IGVuY29yZSBlbiBkw6l2ZWxvcHBlbWVudCBtb250cmUgbm90YW1tZW50IGxlIG5vdXZlbCDDqWNyYW4gZGUgZMOpdmVycm91aWxsYWdlIGF2ZWMgdW5lIG5vdXZlbGxlIGFuaW1hdGlvbiwgbCZyc3F1bztham91dCBkJnJzcXVvO3VuIG1vZGUgJmxhcXVvOyZuYnNwO1N1cGVyaW9yIEF1dG8mbmJzcDsmcmFxdW87IGRhbnMgbCZyc3F1bzthcHBsaWNhdGlvbiBBcHBhcmVpbCBwaG90byBvdSBlbmNvcmUgbCZyc3F1bztham91dCBkdSBtb2RlIENsZWFyQXVkaW8rIHBvdXIgbGEgbXVzaXF1ZS4gT24gbm90ZSDDqWdhbGVtZW50IHF1ZSBsJnJzcXVvO2FwcGxpY2F0aW9uIFTDqWzDqXBob25lIHV0aWxpc2UgbWFpbnRlbmFudCB1biB0aMOobWUgY2xhaXIuPHNwYW4gaWQ9Im1vcmUtMTIyMjM5Ij48L3NwYW4%PC9wPg0KXV0%PC9jb250ZW50OmVuY29kZWQ%DQoJCQk8d2Z3OmNvbW1lbnRSc3M%aHR0cDovL3d3dy5mcmFuZHJvaWQuY29tL2FjdHVhbGl0ZXMtZ2VuZXJhbGVzLzEyMjIzOV91bmUtdmlkZW8tZHUtc29ueS14cGVyaWEtdC1zb3VzLWplbGx5LWJlYW4vZmVlZC88L3dmdzpjb21tZW50UnNzPg0KCQk8c2xhc2g6Y29tbWVudHM%MTk8L3NsYXNoOmNvbW1lbnRzPg0KCQk8L2l0ZW0%DQoJPC9jaGFubmVsPg0KPC9yc3M%DQo8IS0tIGdlbmVyYXRlZCBpbiAwLjM0NCBzZWNvbmRzIC0tPg0KPCEtLSBTZXJ2ZWQgZnJvbTogXyBAIDIwMTItMTItMjcgMTY6MTQ6NTYgYnkgVzMgVG90YWwgQ2FjaGUgLS0%"},{name:"feed1",data:"s145718:PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz48P3htbC1zdHlsZXNoZWV0IHRpdGxlPSJYU0wgZm9ybWF0dGluZyIgdHlwZT0idGV4dC94c2wiIGhyZWY9Imh0dHA6Ly93d3cuaXBob24uZnIvZmVlZC9yc3MyL3hzbHQiID8%PHJzcyB2ZXJzaW9uPSIyLjAiDQogIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyINCiAgeG1sbnM6d2Z3PSJodHRwOi8vd2VsbGZvcm1lZHdlYi5vcmcvQ29tbWVudEFQSS8iDQogIHhtbG5zOmNvbnRlbnQ9Imh0dHA6Ly9wdXJsLm9yZy9yc3MvMS4wL21vZHVsZXMvY29udGVudC8iDQogIHhtbG5zOmF0b209Imh0dHA6Ly93d3cudzMub3JnLzIwMDUvQXRvbSI%DQo8Y2hhbm5lbD4NCiAgPHRpdGxlPmlQaG9uZSA1LCA0UywgaVBhZCwgaVBvZCB0b3VjaCA6IGxlIGJsb2cgaVBob24uZnI8L3RpdGxlPg0KICA8bGluaz5odHRwOi8vd3d3LmlwaG9uLmZyLzwvbGluaz4NCiAgPGF0b206bGluayBocmVmPSJodHRwOi8vd3d3LmlwaG9uLmZyOjgyL2ZlZWQvcnNzMj9wb3N0c19wZXJfcGFnZT0xNSZwYWdlZD0xIiByZWw9InNlbGYiIHR5cGU9ImFwcGxpY2F0aW9uL3Jzcyt4bWwiLz4NCiAgPGRlc2NyaXB0aW9uPmlQaG9uZSA1IHBhcyBjaGVyLCBpUGFkIGV0IGlQb2QgdG91Y2ggZCdBcHBsZSA6ICBhY3R1YWxpdMOpcywgYXBwcyBpUGhvbmUgNSwgYWNjZXNzb2lyZXMsIHZpZMOpb3MsIGRpc2N1c3Npb25zLCBhc3R1Y2VzLCBhcHAgZ3JhdHVpdGVzIGlQaG9uZS4gTGVzIGluZm9zIHBvdXIgYWxsZXIgcGx1cyBsb2luIGF2ZWMgbCdBcHBsZSBpUGhvbmUsIGwnaVBvZCBUb3VjaCwgbCdpUGFkIGV0IGlPUzwvZGVzY3JpcHRpb24%DQogIDxsYW5ndWFnZT5mcjwvbGFuZ3VhZ2U%DQogIDxwdWJEYXRlPlRodSwgMjcgRGVjIDIwMTIgMTU6MTE6MTcgKzAxMDA8L3B1YkRhdGU%DQogIDxjb3B5cmlnaHQ%VG91cyBkcm9pdHMgcsOpc2VydsOpczwvY29weXJpZ2h0Pg0KICA8ZG9jcz5odHRwOi8vYmxvZ3MubGF3LmhhcnZhcmQuZWR1L3RlY2gvcnNzPC9kb2NzPg0KICA8Z2VuZXJhdG9yPkRvdGNsZWFyPC9nZW5lcmF0b3I%DQogICAgIA0KICA8aXRlbT4NCiAgICA8dGl0bGU%QnJldmV0IDogdW4gw6ljcmFuIGluY3VydsOpIHBvdXIgdW4gZnV0dXIgaVBob25lID88L3RpdGxlPg0KICAgIDxsaW5rPmh0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9icmV2ZXQtZWNyYW4taW5jdXJ2ZS1pcGhvbmU8L2xpbms%DQogICAgPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj51cm46bWQ1OjFhM2IwZjdlMDAyZjYzYTU4YmU0NzZjY2YyZjI2YjY5PC9ndWlkPg0KICAgIDxwdWJEYXRlPlRodSwgMjcgRGVjIDIwMTIgMTU6Mjc6MDAgKzAxMDA8L3B1YkRhdGU%DQogICAgPGRjOmNyZWF0b3I%Z3JvYnVidTwvZGM6Y3JlYXRvcj4NCiAgICAgICAgPGNhdGVnb3J5PkFjdHVhbGl0w6kgZXQgYXZpcyBpUGhvbmU8L2NhdGVnb3J5Pg0KICAgICAgICA8Y2F0ZWdvcnk%YXBwbGU8L2NhdGVnb3J5PjxjYXRlZ29yeT5icmV2ZXQ8L2NhdGVnb3J5PjxjYXRlZ29yeT5pcGhvbmU8L2NhdGVnb3J5PiAgICANCiAgICA8ZGVzY3JpcHRpb24%Jmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy9jdXJ2ZS0xX3MuanBnJnF1b3Q7IGFsdD0mcXVvdDtjdXJ2ZS0xLmpwZyZxdW90OyBzdHlsZT0mcXVvdDtmbG9hdDpsZWZ0OyBtYXJnaW46IDAgMWVtIDFlbSAwOyZxdW90OyAvJmd0OyZsdDticiAvJmd0Ow0KTcOqbWUgcydpbHMgbmUgc29udCBwYXMgbm9tYnJldXgsIGlsIGV4aXN0ZSBkw6lqw6AgJmx0O3N0cm9uZyZndDtkZXMgc21hcnBob25lcw0KcHJvcG9zYW50IGRlcyDDqWNyYW5zIGluY3VydsOpcyZsdDsvc3Ryb25nJmd0Oy4mbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtPbiBwZW5zZSBwYXIgZXhlbXBsZSBhdSBOZXh1cyBTIGV0IGF1IEdhbGF4eSBOZXh1cyBkZSBTYW1zdW5nLiZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O1BvdXIgYXV0YW50LCBTYW1zdW5nIG5lIGTDqXRpZW50IHBhcyBsJ2V4Y2x1c2l2aXTDqSBkZSBjZXMgw6ljcmFucyBpbmN1cnbDqXMgZXQsDQpzaSBsJ29uIGVuIGNyb2l0IHVuIGTDqXDDtHQgZGUgYnJldmV0IHLDqWNlbnQsICZsdDtzdHJvbmcmZ3Q7QXBwbGUgcydpbnTDqXJlc3NlIMOpZ2FsZW1lbnQNCsOgIGxhIHF1ZXN0aW9uJmx0Oy9zdHJvbmcmZ3Q7IDombHQ7L3AmZ3Q7ICAgICZsdDtwJmd0O0MnZXN0IGdyw6JjZSDDoCB1biBwcm9jw6lkw6kgc2ltcGxlIHF1aSBuJ3V0aWxpc2UgcGFzIGRlIHByb2R1aXRzIGNoaW1pcXVlcw0KZGFuZ2VyZXV4IHF1J0FwcGxlIHBvdXJyYWl0IGNvdXJiZXIgbGUgdmVycmUuIERhbnMgdW4gcHJlbWllciB0ZW1wcywgaWwgcydhZ2l0DQpkZSBmYWlyZSBtb250ZXIgbGVzIG91dGlscyBlbiB0ZW1ww6lyYXR1cmUgcG91ciBlbnN1aXRlIHZlbmlyIGFwcG9zZXIgbGUgdmVycmUNCnN1ciB1biBtb3VsZSBldCB0ZXJtaW5lciBwYXIgdW5lIGJhaXNzZSBzb3VkYWluZSBkZSB0ZW1ww6lyYXR1cmUgZG9ubmFpdCBhaW5zaQ0KbGEgZm9ybWUgdm91bHVlIGF1IHZlcnJlLiZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O0ZhY2lsZSDDoCByw6lhbGlzZXIgY2V0dGUgdGVjaG5pcXVlIHBvdXJyYWl0IHBlcm1ldHRyZSDDoCBsYSBwb21tZSBkZSBjcsOpZXIgZGVzDQp2ZXJyZXMgaW5jdXJ2w6lzIHJhcGlkZW1lbnQgZXQgc2FucyBwZXJkcmUgZW4gcXVhbGl0w6kuJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy9jdXJ2ZS0xX20uanBnJnF1b3Q7IGFsdD0mcXVvdDtjdXJ2ZS0xLmpwZyZxdW90OyBzdHlsZT0mcXVvdDtkaXNwbGF5OmJsb2NrOyBtYXJnaW46MCBhdXRvOyZxdW90OyAvJmd0OyZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O0JpZW4gw6l2aWRlbW1lbnQsIHVuIGJyZXZldCBuZSBzaWduaWZpZSBwYXMgcXVlIG5vdXMgdmVycm9ucyBhcnJpdmVyIGwnYW4NCnByb2NoYWluIGRlcyBpUGhvbmUgaW5jdXJ2w6lzLCBtYWlzIGNlbGEgbW9udHJlIGxlcyBwaXN0ZXMgZGUgcmVjaGVyY2hlIGQnQXBwbGUNCmNlIHF1aSBlc3QgdG91am91cnMgaW50w6lyZXNzYW50LiZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O0VuIGF0dGVuZGFudCwgJmx0O3N0cm9uZyZndDtxdWUgZGlyaWV6LXZvdXMgZCd1biBpUGhvbmUgdW4gcGV1IHBsdXMgY291cmJlDQo:Jmx0Oy9zdHJvbmcmZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbS8yMDEyLzEyLzI1L2FwcGxlLXBhdGVudHMtYS1tZXRob2QtdG8tcmVmaW5lLWN1cnZlZC1nbGFzcy8mcXVvdDsmZ3Q7DQpzb3VyY2UmbHQ7L2EmZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvUHJvbW8tZGUtTm8lQzMlQUJsJnF1b3Q7Jmd0OyZsdDtpbWcgc3JjPSZxdW90O2Fzc2V0cy9mZWVkc19pbWFnZXMvcHJvbW8tbm9lbC0zMDAuanBnJnF1b3Q7IGFsdD0mcXVvdDtub2VsLTMwMC5qcGcmcXVvdDsgc3R5bGU9JnF1b3Q7ZGlzcGxheTpibG9jazsgbWFyZ2luOjAgYXV0bzsmcXVvdDsgLyZndDsmbHQ7L2EmZ3Q7Jmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KPC9kZXNjcmlwdGlvbj4NCiAgICANCiAgICANCiAgICANCiAgICAgICAgICA8Y29tbWVudHM%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L2JyZXZldC1lY3Jhbi1pbmN1cnZlLWlwaG9uZSNjb21tZW50LWZvcm08L2NvbW1lbnRzPg0KICAgICAgPHdmdzpjb21tZW50Pmh0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9icmV2ZXQtZWNyYW4taW5jdXJ2ZS1pcGhvbmUjY29tbWVudC1mb3JtPC93Znc6Y29tbWVudD4NCiAgICAgIDx3Znc6Y29tbWVudFJzcz5odHRwOi8vd3d3LmlwaG9uLmZyL2ZlZWQvYXRvbS9jb21tZW50cy83MTI0MzA8L3dmdzpjb21tZW50UnNzPg0KICAgICAgPC9pdGVtPg0KICAgIA0KICA8aXRlbT4NCiAgICA8dGl0bGU%UnVtZXVyIDogZGVzIMOpY3JhbnMgSUdaTyBwb3VyIGwnaVBob25lIGV0IGwnaVBhZCAyMDEzID88L3RpdGxlPg0KICAgIDxsaW5rPmh0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9ydW1ldXItZWNyYW4taWd6by1pcGhvbmUtaXBhZC0yMDEzPC9saW5rPg0KICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI%dXJuOm1kNTo5OWM0NjcxNTM5ZTYwYWY5OThhODY2MzQ1ZDNiNzNkOTwvZ3VpZD4NCiAgICA8cHViRGF0ZT5UaHUsIDI3IERlYyAyMDEyIDEzOjQ2OjAwICswMTAwPC9wdWJEYXRlPg0KICAgIDxkYzpjcmVhdG9yPmdyb2J1YnU8L2RjOmNyZWF0b3I%DQogICAgICAgIDxjYXRlZ29yeT5SdW1ldXJzIGlQaG9uZSAmYW1wOyBpUG9kIFRvdWNoPC9jYXRlZ29yeT4NCiAgICAgICAgPGNhdGVnb3J5PmFwcGxlPC9jYXRlZ29yeT48Y2F0ZWdvcnk%aWd6bzwvY2F0ZWdvcnk%PGNhdGVnb3J5PnNoYXJwPC9jYXRlZ29yeT4gICAgDQogICAgPGRlc2NyaXB0aW9uPiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2Fzc2V0cy9mZWVkc19pbWFnZXMvcmV0ZC0xX3MuanBnJnF1b3Q7IGFsdD0mcXVvdDtyZXRkLTFfcy5qcGcmcXVvdDsgc3R5bGU9JnF1b3Q7ZmxvYXQ6bGVmdDsgbWFyZ2luOiAwIDFlbSAxZW0gMDsmcXVvdDsgLyZndDsmbHQ7YnIgLyZndDsNCkNlIG4nZXN0IHBhcyBsYSBwcmVtacOocmUgZm9pcyBxdWUgbCdvbiBlbnRlbmQgcGFybGVyIGRlIGxhIHRlY2hub2xvZ2llIElHWk8gcXVpDQpwb3VycmFpdCDDqXF1aXBlciBkZSBmdXR1cnMgcHJvZHVpdHMgQXBwbGUuJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7QXVqb3VyZCdodWksIG9uIHJlcGFybGUgZGUgc2VzIMOpY3JhbnMgcGV1IGdvdXJtYW5kcyBlbiDDqW5lcmdpZSBwYXIgbGUgYmlhaXMNCmR1IHNpdGUgRGlnaXRpbWVzLCBwYXMgdG91am91cnMgdHLDqHMgZmlhYmxlLCBxdWkgc2VtYmxlIGFmZmlybWVyIHF1J0FwcGxlDQplbnZpc2FnZXJhaXQgZCdpbnTDqWdyZXIgZGVzIMOpY3JhbnMgSUdaTyBkYW5zIHNlcyBwcm9kdWl0cyBkZSAyMDEzIDombHQ7L3AmZ3Q7ICAgICZsdDtwJmd0O1NlbG9uIGxlIHNpdGUgaW50ZXJuZXQsIEFwcGxlIHNlcmFpdCBhY3R1ZWxsZW1lbnQgZW4gZGlzY3Vzc2lvbiBhdmVjIFNoYXJwDQpkYW5zIGxlIGJ1dCBkZSB0ZW50ZXIgZCfDqXZhbHVlciBsYSBjYXBhY2l0w6kgZGUgcHJvZHVjdGlvbiBkZSBjZXMNCsOpY3JhbnMuJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7TCdhbiBkZXJuaWVyIGTDqWrDoCwgZGVzIHJldGFyZHMgZGUgcHJvZHVjdGlvbnMgYXVyYWllbnQgZMOpasOgIGVtcMOqY2jDqSBTaGFycCBkZQ0KcHJvcG9zZXIgc2VzIMOpY3JhbnMgw6AgQXBwbGUuIExhIHNvY2nDqXTDqSBxdWkgcmVuY29udHJlIGFjdHVlbGxlbWVudCBkZXMNCmRpZmZpY3VsdMOpcyBmaW5hbmNpw6hyZXMgYXVyYWl0IHRvdXQgbWlzw6kgc3VyIGNldHRlIHRlY2hub2xvZ2llIHF1aSBhcHBvcnRlIGRlDQpub21icmV1eCBhdmFudGFnZXMuJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7U2Vsb24gUEMgV29ybGQsIGxlcyDDqWNyYW5zIElHWk8gc2VyYWllbnQgbW9pbnMgZ291cm1hbmRzIGVuIMOpbmVyZ2llLCBwbHVzDQpzZW5zaWJsZXMgYXUgdG91Y2hlciBldCBwcm9wb3NlcmFpZW50IHVuZSBkZW5zaXTDqSBkZSBwaXhlbHMgcGx1cw0KaW1wb3J0YW50ZS4mbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtDcsOiY2Ugw6AgY2V0dGUgdGVjaG5vbG9naWUgcXVpIHBlcm1ldCBkJ2F2b2lyIGRlcyDDqWNyYW5zIHBsdXMgZmlucyBhdSBib3JkLA0KQXBwbGUgcG91cnJhaXQgZW5jb3JlIGFmZmluZXIgc2VzIGFwcGFyZWlscyBldCBlbiBwYXJ0aWN1bGllciBsJ2lQYWQuDQpQdXNpcXUnaWxzIHNvbnQgcGx1cyDDqWNvbm9tZXMgZW4gw6luZXJnaWUsIEFwcGxlIHBvdXJyYWl0IGF1c3NpIGNob2lzaXINCmQnaW50w6lncmVyIGxlIFJldGluYSDDoCBsJ2lQYWQgbWluaSBlbmNvcmUgdW5lIGZvaXMgZ3LDomNlIMOgIGNldCDDqWNyYW4gSUdaTy4mbHQ7L3AmZ3Q7DQombHQ7cCZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cubWFjcnVtb3JzLmNvbS8yMDEyLzEyLzI2L2FwcGxlLWludmVzdGlnYXRpbmctdGhpbm5lci1sb3dlci1wb3dlci1pZ3pvLWRpc3BsYXlzLWFjcm9zcy1pcGFkLWFuZC1pcGhvbmUtcHJvZHVjdC1saW5lcy1mb3ItMjAxMy8mcXVvdDsmZ3Q7DQpzb3VyY2UmbHQ7L2EmZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvUHJvbW8tZGUtTm8lQzMlQUJsJnF1b3Q7Jmd0OyZsdDtpbWcgc3JjPSZxdW90O2Fzc2V0cy9mZWVkc19pbWFnZXMvcHJvbW8tbm9lbC0zMDAuanBnJnF1b3Q7IGFsdD0mcXVvdDtub2VsLTMwMC5qcGcmcXVvdDsgc3R5bGU9JnF1b3Q7ZGlzcGxheTpibG9jazsgbWFyZ2luOjAgYXV0bzsmcXVvdDsgLyZndDsmbHQ7L2EmZ3Q7Jmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KPC9kZXNjcmlwdGlvbj4NCiAgICANCiAgICANCiAgICANCiAgICAgICAgICA8Y29tbWVudHM%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L3J1bWV1ci1lY3Jhbi1pZ3pvLWlwaG9uZS1pcGFkLTIwMTMjY29tbWVudC1mb3JtPC9jb21tZW50cz4NCiAgICAgIDx3Znc6Y29tbWVudD5odHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvcnVtZXVyLWVjcmFuLWlnem8taXBob25lLWlwYWQtMjAxMyNjb21tZW50LWZvcm08L3dmdzpjb21tZW50Pg0KICAgICAgPHdmdzpjb21tZW50UnNzPmh0dHA6Ly93d3cuaXBob24uZnIvZmVlZC9hdG9tL2NvbW1lbnRzLzcxMjQxNzwvd2Z3OmNvbW1lbnRSc3M%DQogICAgICA8L2l0ZW0%DQogICAgDQogIDxpdGVtPg0KICAgIDx0aXRsZT5UZW1wbGUgUnVuIDogMiw1IG1pbGxpb25zIGRlIHTDqWzDqWNoYXJnZW1lbnRzIGxlIGpvdXIgZGUgTm:Dq2w8L3RpdGxlPg0KICAgIDxsaW5rPmh0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9UZW1wbGUtUnVuLWdyYW5kLWdhZ25hbnQtZGUtbm9lbDwvbGluaz4NCiAgICA8Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPnVybjptZDU6YzY3OGNlZjdjOWFlNDg4NjMwZmYyZDgzZGE4ZTg2M2U8L2d1aWQ%DQogICAgPHB1YkRhdGU%VGh1LCAyNyBEZWMgMjAxMiAxMToxMjowMCArMDEwMDwvcHViRGF0ZT4NCiAgICA8ZGM6Y3JlYXRvcj5ncm9idWJ1PC9kYzpjcmVhdG9yPg0KICAgICAgICA8Y2F0ZWdvcnk%QXBwIGlQaG9uZSBldCBpUG9kIFRvdWNoIChBcHAgU3RvcmUpPC9jYXRlZ29yeT4NCiAgICAgICAgPGNhdGVnb3J5PnRlbXBsZS1ydW48L2NhdGVnb3J5PiAgICANCiAgICA8ZGVzY3JpcHRpb24%Jmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy90ZW1wbGUtMV9zLmpwZyZxdW90OyBhbHQ9JnF1b3Q7dGVtcGxlLTEuanBnJnF1b3Q7IHN0eWxlPSZxdW90O2Zsb2F0OmxlZnQ7IG1hcmdpbjogMCAxZW0gMWVtIDA7JnF1b3Q7IC8mZ3Q7IEMnZXN0IHBvdXIgdG91dCBsZSBtb25kZSBsYSBtw6ptZSBjaG9zZS4NCkxvcnNxdWUgbCdvbiB0aWVudCBlbiBtYWluIHNvbnQgaVBhZCwgaVBob25lIG91IGlQb2QgcG91ciBsYSBwcmVtacOocmUgZm9pcywgdW5lDQpkZXMgcHJlbWnDqHJlcyBjaG9zZXMgcXVlIGwnb24gZmFpdCBjJ2VzdCBkJ2FsbGVyIMOgIGxhIHJlY2hlcmNoZSBkJ2FwcGxpY2F0aW9ucw0KZXQgZGUgamV1eCBzdXIgbCdBcHAgU3RvcmUuJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7TGEgcMOpcmlvZGUgZGUgTm:Dq2wgZXN0IGRvbmMgcHJvcGljZSBhdXggdMOpbMOpY2hhcmdlbWVudHMgZXQgdmlzaWJsZW1lbnQsDQpjZXR0ZSBhbm7DqWUsIGlsIHkgZW4gYSB1biBxdWkgYSBwYXJ0aWN1bGnDqHJlbWVudCB0aXLDqSBzb24gw6lwaW5nbGUgZHUgamV1LiBFbg0KZWZmZXQsICZsdDtzdHJvbmcmZ3Q7VGVtcGxlIFJ1biZsdDsvc3Ryb25nJmd0OyBsZSBqZXUgcXVpIGEgY2FycsOpbWVudCBsYW5jw6kgdW4gZ2VucmUgc3VyDQpsJ0FwcCBTdG9yZSBzJ2VzdCB2dSAmbHQ7c3Ryb25nJmd0O3TDqWzDqWNoYXJnw6kgcGx1cyBkZSAyLDUgbWlsbGlvbnMgZGUgZm9pcyBsZSBqb3VyIGRlDQpOb8OrbCZsdDsvc3Ryb25nJmd0OyA6Jmx0Oy9wJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL2Nsay50cmFkZWRvdWJsZXIuY29tL2NsaWNrP3A9MjM3NTMmYW1wO2FtcDthPTY5ODE2OCZhbXA7YW1wO2c9MCZhbXA7YW1wO3RkX3BhcnRuZXJJZD0yMDAzJmFtcDthbXA7dXJsPWh0dHBzOi8vaXR1bmVzLmFwcGxlLmNvbS9mci9hcHAvdGVtcGxlLXJ1bi9pZDQyMDAwOTEwOD9tdD04JnF1b3Q7Jmd0Ow0KVGVtcGxlIFJ1biBlc3QgZGlzcG9uaWJsZSBpY2kgc3VyIGwnQXBwIFN0b3JlIGdyYXR1aXRlbWVudCZsdDsvYSZndDsmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsgICAgJmx0O3AmZ3Q7Qydlc3QgZMOpdmVsb3BwZXVyIGR1IGpldSBlbiBwZXJzb25uZSBxdWkgbCdhZmZpcm1lIHN1ciBzb24gY29tcHRlIFR3aXR0ZXIuDQpTb24gamV1IGEgw6l0w6kgdMOpbMOpY2hhcmfDqSB1biBtaWxsaW9uIGRlIGZvaXMgc3VyIGlPUywgdW4gbWlsbGlvbiBkZSBmb2lzIHN1cg0KQW5kcm9pZCA1MDAgMDAwIGZvaXMgc3VyIEFtYXpvbiBkdXJhbnQgbGEgc2V1bGUgam91cm7DqWUgZHUgMjUgZMOpY2VtYnJlLiZsdDsvcCZndDsNCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2Fzc2V0cy9mZWVkc19pbWFnZXMvdGVtcGxlLTJfbS5qcGcmcXVvdDsgYWx0PSZxdW90O3RlbXBsZS0yLmpwZyZxdW90OyBzdHlsZT0mcXVvdDtkaXNwbGF5OmJsb2NrOyBtYXJnaW46MCBhdXRvOyZxdW90OyAvJmd0OyZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O1BvdXIgY2V1eCBxdWkgbmUgY29ubmFpc3NlbnQgcGFzIFRlbXBsZSBSdW4sIGxlIGpldSBwcm9wb3NlIGRlIGNvdXJpciBsZQ0KcGx1cyBsb2luIHBvc3NpYmxlIHBvdXIgw6l2aXRlciBkZSBzZSBmYWlyZSBhdHRyYXBlciBwYXIgZCdhZmZyZXV4IHNpbmdlcy4gRCd1bg0Kc2ltcGxlIGdsaXNzZW1lbnQgZGUgZG9pZ3QsIHZvdXMgZGV2ZXogYWlkZXIgbGUgcGVyc29ubmFnZSDDoCBzYXV0ZXIsIGdsaXNzZXIgb3UNCnRvdXJuZXIuIGxlIGJ1dCDDqXRhbnQgZCdhbGxlciBsZSBwbHVzIGxvaW4gcG9zc2libGUuJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7RGVwdWlzIHNhIHNvcnRpZSwgJmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyL3RhZy90ZW1wbGUtcnVuJnF1b3Q7Jmd0O2JlYXVjb3VwDQpkJ2F1dHJlcyBqZXV4IGR1IG3Dqm1lIHR5cGUmbHQ7L2EmZ3Q7IHNvbnQgYXBwYXJ1cyBzdXIgbCdBcHAgU3RvcmUsIG1haXMgVGVtcGxlIFJ1bg0KcmVzdGUgaW5jb250ZXN0YWJsZW1lbnQgbGEgcsOpZsOpcmVuY2UuJmx0Oy9wJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL2Nsay50cmFkZWRvdWJsZXIuY29tL2NsaWNrP3A9MjM3NTMmYW1wO2FtcDthPTY5ODE2OCZhbXA7YW1wO2c9MCZhbXA7YW1wO3RkX3BhcnRuZXJJZD0yMDAzJmFtcDthbXA7dXJsPWh0dHBzOi8vaXR1bmVzLmFwcGxlLmNvbS9mci9hcHAvdGVtcGxlLXJ1bi9pZDQyMDAwOTEwOD9tdD04JnF1b3Q7Jmd0Ow0KVGVtcGxlIFJ1biBlc3QgZGlzcG9uaWJsZSBpY2kgc3VyIGwnQXBwIFN0b3JlIGdyYXR1aXRlbWVudCZsdDsvYSZndDsmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDtwJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L1Byb21vLWRlLU5vJUMzJUFCbCZxdW90OyZndDsmbHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzL3Byb21vLW5vZWwtMzAwLmpwZyZxdW90OyBhbHQ9JnF1b3Q7bm9lbC0zMDAuanBnJnF1b3Q7IHN0eWxlPSZxdW90O2Rpc3BsYXk6YmxvY2s7IG1hcmdpbjowIGF1dG87JnF1b3Q7IC8mZ3Q7Jmx0Oy9hJmd0OyZsdDticiAvJmd0OyZsdDsvcCZndDsNCjwvZGVzY3JpcHRpb24%DQogICAgDQogICAgDQogICAgDQogICAgICAgICAgPGNvbW1lbnRzPmh0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9UZW1wbGUtUnVuLWdyYW5kLWdhZ25hbnQtZGUtbm9lbCNjb21tZW50LWZvcm08L2NvbW1lbnRzPg0KICAgICAgPHdmdzpjb21tZW50Pmh0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9UZW1wbGUtUnVuLWdyYW5kLWdhZ25hbnQtZGUtbm9lbCNjb21tZW50LWZvcm08L3dmdzpjb21tZW50Pg0KICAgICAgPHdmdzpjb21tZW50UnNzPmh0dHA6Ly93d3cuaXBob24uZnIvZmVlZC9hdG9tL2NvbW1lbnRzLzcxMjQxMjwvd2Z3OmNvbW1lbnRSc3M%DQogICAgICA8L2l0ZW0%DQogICAgDQogIDxpdGVtPg0KICAgIDx0aXRsZT4xMiBqb3VycyBDYWRlYXV4IGlUdW5lcyA6IGRldXhpw6htZSBqb3VyIGV0IHByZW1pZXIgamV1IG9mZmVydCBzdXIgaVBob25lIGV0IGlQYWQ8L3RpdGxlPg0KICAgIDxsaW5rPmh0dHA6Ly93d3cuaXBob24uZnIvcG9zdC8xMi1qb3Vycy1DYWRlYXV4LWlUdW5lcy0xMi1qb3VyLTI8L2xpbms%DQogICAgPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj51cm46bWQ1OmU0ZmQ1MDE1MGM5MmNiZGI1ZjNmZDllYTAyZGFjMzg5PC9ndWlkPg0KICAgIDxwdWJEYXRlPlRodSwgMjcgRGVjIDIwMTIgMDk6MTI6MDAgKzAxMDA8L3B1YkRhdGU%DQogICAgPGRjOmNyZWF0b3I%Z3JvYnVidTwvZGM6Y3JlYXRvcj4NCiAgICAgICAgPGNhdGVnb3J5PkFwcHMgZ3JhdHVpdGVzLCBiYWlzc2VzIGRlIHByaXgsIGJvbm5lcyBhZmZhaXJlczwvY2F0ZWdvcnk%DQogICAgICAgICAgICANCiAgICA8ZGVzY3JpcHRpb24%Jmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy8xMmpvdXJzLTFfcy5qcGcmcXVvdDsgYWx0PSZxdW90OzEyam91cnMtMS5qcGcmcXVvdDsgc3R5bGU9JnF1b3Q7ZmxvYXQ6bGVmdDsgbWFyZ2luOiAwIDFlbSAxZW0gMDsmcXVvdDsgLyZndDtDb21tZSBjaGFxdWUgYW5uw6llLA0KanVzdGUgYXByw6hzIE5vw6psLCBBcHBsZSBub3VzIG9mZnJlIHBlbmRhbnQgMTIgam91cnMgdW4gY2FkZWF1IHBhciBqb3VyLg0KTXVzaXF1ZSwgZmlsbXMsIHPDqXJpZSwgbGl2cmUgb3UgYXBwbGljYXRpb24sIGxlIGNhZGVhdSBlc3QgZGlmZsOpcmVudCBjaGFxdWUNCmpvdXIgZXQgaWwgeSBlbiBhIGfDqW7DqXJhbGVtZW50IHBvdXIgdG91cyBsZXMgZ291dHMuJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7QXVqb3VyZCdodWksIG9uIHBvdXJzdWl0IFNjb3JlISBhdmVjIHVuIGpldSBkaXNwb25pYmxlIHN1ciBpUGhvbmUgZXQgaVBhZCBlbg0KcXVpIHZvdXMgcHJvcG9zZSBkZSByZWNyw6llciBsZXMgcGx1cyBiZWF1eCBidXRzIGRlIGwnaGlzdG9pcmUgZHUNCmZvb3RiYWxsIDombHQ7L3AmZ3Q7DQombHQ7dWwmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2ZyL2FwcC9zY29yZSEtY2xhc3NpYy1nb2Fscy9pZDQ5MDk1MjE1Mj9tdD04JnF1b3Q7Jmd0Ow0KU2NvcmUhIENsYXNzaWNzIEdvYWxzIGVzdCBkaXNwb25pYmxlIGljaSBzdXIgbCdBcHAgU3RvcmUgZ3JhdHVpdGVtZW50Jmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7DQombHQ7L3VsJmd0OyAgICAmbHQ7cCZndDtBdSBwcm9ncmFtbWUgZGUgY2UgZGV1eGnDqG1lIGNhZGVhdSwgdW4gdHLDqHMgYmVhdSBqZXUgYWRkaWN0aWYgZXQgYW11c2FudA0KZMOpasOgZ3JhdHVpdCBkZXB1aXMgcXVlbHF1ZXMgam91cnMgZW4gcmFpc29uIGR1IGdlbCBkZSBsJ0FwcCBTdG9yZSZsdDsvcCZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthbXA7YT02OTgxNjgmYW1wO2FtcDtnPTAmYW1wO2FtcDt0ZF9wYXJ0bmVySWQ9MjAwMyZhbXA7YW1wO3VybD1odHRwczovL2l0dW5lcy5hcHBsZS5jb20vZnIvYXBwL3Njb3JlIS1jbGFzc2ljLWdvYWxzL2lkNDkwOTUyMTUyP210PTgmcXVvdDsmZ3Q7DQpTY29yZSEgQ2xhc3NpY3MgR29hbHMgZXN0IGRpc3BvbmlibGUgaWNpIHN1ciBsJ0FwcCBTdG9yZSBncmF0dWl0ZW1lbnQmbHQ7L2EmZ3Q7Jmx0Oy9saSZndDsNCiZsdDsvdWwmZ3Q7DQombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzL3Njb3JlLTJfbS5qcGcmcXVvdDsgYWx0PSZxdW90O3Njb3JlLTIuanBnJnF1b3Q7IHN0eWxlPSZxdW90O2Rpc3BsYXk6YmxvY2s7IG1hcmdpbjowIGF1dG87JnF1b3Q7IC8mZ3Q7Jmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7UmVuZGV6LXZvdXMgZGVtYWluIHBvdXIgbGEgc3VpdGUgZGVzIDEyIEpvdXJzIENhZGVhdXggaVR1bmVzLiAmbHQ7L3AmZ3Q7DQombHQ7cCZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9Qcm9tby1kZS1ObyVDMyVBQmwmcXVvdDsmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy9wcm9tby1ub2VsLTMwMC5qcGcmcXVvdDsgYWx0PSZxdW90O25vZWwtMzAwLmpwZyZxdW90OyBzdHlsZT0mcXVvdDtkaXNwbGF5OmJsb2NrOyBtYXJnaW46MCBhdXRvOyZxdW90OyAvJmd0OyZsdDsvYSZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDsmbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQo8L2Rlc2NyaXB0aW9uPg0KICAgIA0KICAgIA0KICAgIA0KICAgICAgICAgIDxjb21tZW50cz5odHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvMTItam91cnMtQ2FkZWF1eC1pVHVuZXMtMTItam91ci0yI2NvbW1lbnQtZm9ybTwvY29tbWVudHM%DQogICAgICA8d2Z3OmNvbW1lbnQ%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0LzEyLWpvdXJzLUNhZGVhdXgtaVR1bmVzLTEyLWpvdXItMiNjb21tZW50LWZvcm08L3dmdzpjb21tZW50Pg0KICAgICAgPHdmdzpjb21tZW50UnNzPmh0dHA6Ly93d3cuaXBob24uZnIvZmVlZC9hdG9tL2NvbW1lbnRzLzcxMjQwNTwvd2Z3OmNvbW1lbnRSc3M%DQogICAgICA8L2l0ZW0%DQogICA8aXRlbT4NCiAgICA8dGl0bGU%R3VpZGUgcHJhdGlxdWUgOiBxdWVsIHR5cGUgZGUgcHJvdGVjdGlvbiBjaG9pc2lyIHBvdXIgdm90cmUgaVBob25lLCBpUG9kIHRvdWNoIGZsYW1iYW50IG5ldWYgPzwvdGl0bGU%DQogICAgPGxpbms%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L3F1ZWxsZS1wcm90ZWN0aW9uLWlwaG9uZS1hY2hldGVyPC9saW5rPg0KICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI%dXJuOm1kNToyYTI0MDIyYjdjMWQ4NTYxYzc2ZTM1NjY1MTA4YTE0ZjwvZ3VpZD4NCiAgICA8cHViRGF0ZT5XZWQsIDI2IERlYyAyMDEyIDE3OjE3OjAwICswMTAwPC9wdWJEYXRlPg0KICAgIDxkYzpjcmVhdG9yPmlTdDwvZGM6Y3JlYXRvcj4NCiAgICAgICAgPGNhdGVnb3J5PlRydWNzIGV0IGFzdHVjZXMgaVBob25lIGV0IGlPUzwvY2F0ZWdvcnk%DQogICAgICAgIDxjYXRlZ29yeT5hY2Nlc3NvaXJlLWlwaG9uZTwvY2F0ZWdvcnk%PGNhdGVnb3J5PmFjaGV0ZXItcHJvdGVjdGlvbi1pcGhvbmU8L2NhdGVnb3J5PjxjYXRlZ29yeT5ldHVpLWlwaG9uZTwvY2F0ZWdvcnk%PGNhdGVnb3J5PnByb3RlY3Rpb24taXBob25lPC9jYXRlZ29yeT4gICAgDQogICAgPGRlc2NyaXB0aW9uPiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2Fzc2V0cy9mZWVkc19pbWFnZXMvdGVzdC1hdmlzLWNvcXVlLWlwaG9uZS01LXRyYW5zcGFyZW50ZS1ldC1wYXMtY2hlcmUtNl9zLmpwZyZxdW90OyBhbHQ9JnF1b3Q7dGVzdC1hdmlzLWNvcXVlLWlwaG9uZS01LXRyYW5zcGFyZW50ZS1ldC1wYXMtY2hlcmUtNi5qcGcmcXVvdDsgc3R5bGU9JnF1b3Q7ZmxvYXQ6bGVmdDsgbWFyZ2luOiAwIDFlbSAxZW0gMDsmcXVvdDsgLyZndDsgRGFucyBub3RyZSBydWJyaXF1ZSBwcmF0aXF1ZSwgbm91cyBhdm9ucw0KY2hvaXNpIGF1am91cmQnaHVpIGRlIGRvbm5lciBkZXMgcGlzdGVzIHBvdXIgYWlkZXIgY2V1eCBxdWkgdmllbm5lbnQgZGUNCnMnYWNoZXRlciBvdSBkZSByZWNldm9pciB1biBpUGhvbmUgLyBpUG9kIHRvdWNoIHRvdXQgbmV1ZiDDoCBsZSAmbHQ7c3Ryb25nJmd0O3Byb3TDqWdlcg0KYXUgbWlldXgmbHQ7L3N0cm9uZyZndDsgZW4gZm9uY3Rpb24gZGUgbGV1cnMgcHLDqWbDqXJlbmNlcywgbWFpcyBhdXNzaSBkZXMgYXZhbnRhZ2VzIGV0DQppbmNvbnbDqW5pZW50cyBkZXMgZGl2ZXJzZXMgc29sdXRpb25zIGRpc3BvbmlibGVzIHN1ciBsZSBtYXJjaMOpICEmbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtFbiBjb21wbMOpbWVudCBkZSAmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvY2F0ZWdvcnkvQWNjZXNzb2lyZXMmcXVvdDsmZ3Q7bm9zDQphcnRpY2xlcyBzdXIgbGVzIHByb3RlY3Rpb25zIGRlIGxhIGNhdMOpZ29yaWUgYWNjZXNzb2lyZXMgZGUgaVBob24uZnImbHQ7L2EmZ3Q7IGV0IGRlcw0KJmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyL2NhdGVnb3J5L1Rlc3QtYWNjZXNzb2lyZXMtaVBob25lJnF1b3Q7Jmd0O25vbWJyZXV4IHRlc3RzDQpxdWUgbCdvbiB2b3VzIHByb3Bvc2UgdG91dGUgbCdhbm7DqWUmbHQ7L2EmZ3Q7LCBjJ2VzdCBkb25jIHVuICZsdDtzdHJvbmcmZ3Q7Z3VpZGUgZGUgY2hvaXgNCmRlcyBwcm90ZWN0aW9ucyBpUGhvbmUmbHQ7L3N0cm9uZyZndDssIHF1aSB2b3VzIGVzdCBwcm9wb3PDqSBhdWpvdXJkJ2h1aS4mbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtVbmUgY2hvc2UgZXN0IHN1cmUsIG5lIHByZW5leiBwYXMgZGUgcmlzcXVlIGF2ZWMgdm90cmUgaVBob25lIGZsYW1iYW50IG5ldWYsDQppbCBwZXV0IMOqdHJlIHV0aWxlIGRlIGxlIHByb3TDqWdlciBzaSB2b3VzIMOqdGVzIG1hbGFkcm9pdCBvdSBkYW5zIGRlcw0KZW52aXJvbm5lbWVudHMgZGlmZmljaWxlcy4mbHQ7L3AmZ3Q7DQombHQ7aDImZ3Q7UG91cnF1b2kgdW5lIHByb3RlY3Rpb24gPyZsdDsvaDImZ3Q7ICAgICZsdDtwJmd0O0wnaVBob25lIDQgZXQgNFMgc29udCBjb25zdGl0dcOpcyBkZSAmbHQ7c3Ryb25nJmd0O2RldXggcGxhcXVlcyBkZSB2ZXJyZSZsdDsvc3Ryb25nJmd0OywNCmwndW5lIGNsYXNzaXF1ZSDDoCBsJ2F2YW50IHBvdXIgbCfDqWNyYW4sIGwnYXV0cmUgw6AgbCdhcnJpw6hyZSBwb3VyIGwnZXN0aMOpdGlxdWUuDQpPbiBsZSBzYWl0IHRvdXMsIGxlIHZlcnJlIMOnYSBzZSBjYXNzZSBldCBjZWxhIHNlIHJheWUuIFBvdXIgbGVzIHBlcnNvbm5lcw0Kc29pZ25ldXNlcyBxdWkgbmUgc3VwcG9ydGVudCBwYXMgbGEgbW9pbmRyZSByYXl1cmUsIHByb3TDqWdlciBsJ2lQaG9uZSBuZSBwb3NlDQphdWN1bmUgcXVlc3Rpb24sIHBvdXIgbGVzIGF1dHJlcywgaWwgZmF1dCBqdXN0ZSBzYXZvaXIgcXVlICZsdDtzdHJvbmcmZ3Q7bGFpc3Nlcg0KdG9tYmVyIHNvbiBpUGhvbmUgZGUgaGF1dGV1ciBkJ2hvbW1lIChvdSBkZSBmZW1tZSA7LSkgKSBwZXV0IGVuZ2VuZHJlciBkZXMNCmZyYWlzIGRlIHLDqXBhcmF0aW9uIGRlIDEwMCBldXJvcyBvdSBwbHVzJmx0Oy9zdHJvbmcmZ3Q7IHNlbG9uIGxlcyBzb2x1dGlvbnMgY2hvaXNpZXMNCihyw6lwYXJhdGV1ciB0aWVycyBvdSBBcHBsZSkuJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7TCcmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvY2F0ZWdvcnkvaVBob25lLTUmcXVvdDsmZ3Q7aVBob25lIDUmbHQ7L2EmZ3Q7IGFtw6huZSB1bg0KY2hhbmdlbWVudCBkZSB0YWlsbGUsIMOgIHNhdm9pciBsJ2FiYW5kb24gZHUgdmVycmUgc3VyIGwnYXJyacOocmUgcG91ciBkZQ0KbCdhbHVtaW5pdW0uIENvdMOpIHLDqXNpc3RhbmNlLCBjJ8OpdGFpdCBlbiB0aMOpb3JpZSB1bmUgYm9ubmUgbm91dmVsbGUuIERhbnMgbGENCnByYXRpcXVlLCBsZSBtb2TDqGxlIGNvdWxldXIgYXJkb2lzZSBhIHJhcGlkZW1lbnQgbW9udHLDqSBxdSd1bmUgJmx0O3N0cm9uZyZndDt1c3VyZSBkZQ0KbCdhbm9kaXNhdGlvbiBzZSBwcm9kdWlzYWl0IGluZXhvcmFibGVtZW50IGV0IGZhaXNhaXQgYXBwYXJhaXRyZSBsJ2FsdW1pbml1bQ0KYnJpbGxhbnQmbHQ7L3N0cm9uZyZndDssIG5vdGFtbWVudCBzdXIgbGVzIHRyYW5jaGVzLiBQYXMgZm9yY8OpbWVudCBkdSBtZWlsbGV1cg0KZWZmZXQuJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7RW5maW4sIHNpIGwnaVBob25lIGVzdCBkYW5zIGxhIHBvY2hlIGV0IG1hbGdyw6kgbCd1dGlsaXNhdGlvbiBkJ3VuIHZlcnJlIHRyw6hzDQpyw6lzaXN0YW50ICgmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvcG9zdC8:cT1ncmlsbGEmcXVvdDsmZ3Q7R29yaWxsYSBHbGFzcyZsdDsvYSZndDspLCBpbCBuJ2VzdCBwYXMgw6AgbCdhYnJpIGRlcw0KJmx0O3N0cm9uZyZndDtyYXl1cmVzIHN1ciBsJ8OpY3JhbiZsdDsvc3Ryb25nJmd0Oy4mbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtCcmVmLCB2b3VzIGwnYXZleiBjb21wcmlzIDogbGEgcHJvdGVjdGlvbiBkZSBsYSB2aXRyZSBhdmFudCBwZXV0IMOqdHJlDQp0csOocyB1dGlsZSBwb3VyIMOpdml0ZXIgYnJpcyBldCByYXl1cmVzIHRhbmRpcyBxdWUgbCdhcnJpw6hyZSBzZXJhIGx1aSDDoCBwcm90w6lnZXINCnBvdXIgcXVpIHZldXQgZ2FyZGVyIHNhIG1hY2hpbmUgZW4gYm9uIMOpdGF0IGQndW4gcG9pbnQgZGUgdnVlIGNvc23DqXRpcXVlLCBxdWUNCmNlIHNvaXQgcG91ciBsZSBwbGFpc2lyIGRlcyB5ZXV4IG91IC4uLiBQb3VyIGxhIHJldmVudGUgISBFbiBlZmZldCwNCmwnaVBob25lIHNlIHJldmVuZCB0csOocyBiaWVuIHN1ciBsZSBtYXJjaMOpIGRlIGwnb2NjYXNpb24gKG5vdGFtbWVudCAmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly9Xd3cuaXBob25lZnIuY29tJnF1b3Q7Jmd0O3N1ciBub3RyZSBmb3J1bSBpUGhvbmVmci5jb20gaWNpJmx0Oy9hJmd0OykgZXQgY2VjaQ0KZCdhdXRhbnQgbWlldXggZXQgw6AgdW4gdGFyaWYgw6lsZXbDqSBxdSdpbCBlc3QgZW4gJmx0O3N0cm9uZyZndDtleGNlbGxlbnQNCsOpdGF0Jmx0Oy9zdHJvbmcmZ3Q7LiZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O0FwcsOocywgY2VydGFpbnMgcHLDqWbDqHJlbnQgY29uc2VydmVyIGxldXIgaVBob25lIHNhbnMgYXVjdW5lIHByb3RlY3Rpb24sIHBvdXINCnByb2ZpdGVyIGR1IGRlc2lnbiB2b3VsdSBwYXIgQXBwbGUsIGMnZXN0IHVuIGNob2l4IMOpZ2FsZW1lbnQgdHLDqHMgcmVzcGVjdGFibGUsDQpsYSBzdWl0ZSBkZSBjZSBndWlkZSBuZSBsZXMgY29uY2VybmVyYSBkb25jIHBhcyA7LSkgLiZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O0xlIG1hcmNow6kgZXN0IHRyw6hzIGNvbXBsZXQgZXQgaWwgZXhpc3RlICZsdDtzdHJvbmcmZ3Q7cGx1c2lldXJzIG5pdmVhdXggZGUNCnByb3RlY3Rpb25zJmx0Oy9zdHJvbmcmZ3Q7IDogw6ljcmFuIHNldWxlbWVudCwgw6l0dWkgY29tcGxldCBhdSBmb3JtYXQNCnBvcnRlZmV1aWxsZSwgcG9jaGV0dGUgb3UgZmxpcCBldCBtw6ptZSBkZXMgcHJvdGVjdGlvbnMgdG91dCB0ZXJyYWluIG91DQrDqXRhbmNoZXMgISZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O0VuIGF2YW50IHBvdXIgbGEgZMOpY291dmVydGUgZGVzIGF2YW50YWdlcyBldCBpbmNvbnbDqW5pZW50cyBkZQ0KY2hhY3VuZSA6Jmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O2gyJmd0O1Byb3TDqWdlciBsJ8OpY3JhbiB1bmlxdWVtZW50Jmx0Oy9oMiZndDsNCiZsdDtwJmd0O0xhICZsdDtzdHJvbmcmZ3Q7cHJvdGVjdGlvbiBkJ8OpY3JhbiZsdDsvc3Ryb25nJmd0OyBlc3QgbGEgcGx1cyBzaW1wbGUgcXVpIGV4aXN0ZSwNCiZsdDtzdHJvbmcmZ3Q7Y29uc2VydmFudCBsZSBkZXNpZ24gZ2xvYmFsIGRlIGxhIG1hY2hpbmUmbHQ7L3N0cm9uZyZndDssIGVsbGUgcGVybWV0dHJhDQpzZWxvbiBsZXMgdHlwZXMgZCfDqXZpdGVyIGxlcyByYXl1cmVzIG91IG3Dqm1lIGxlIGJyaXMuIElsIGVuIGV4aXN0ZSBkZXV4DQp0eXBlcyA6IGxlcyBmaWxtcyBwbGFzdGlxdWVzIGV0IGxlcyBwbGFxdWVzIGRlIHZlcnJlLiZsdDsvcCZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDtMZXMgJmx0O3N0cm9uZyZndDtmaWxtcyBwbGFzdGlxdWVzJmx0Oy9zdHJvbmcmZ3Q7IG9udCBsJ2F2YW50YWdlIGQnw6p0cmUgYm9uIG1hcmNow6kgZXQNCnF1YXNpIGludmlzaWJsZXMsIG1haXMgaWxzIHNvbnQgc291dmVudCAmbHQ7c3Ryb25nJmd0O2TDqWxpY2F0cyDDoCBwb3NlciBzYW5zIGJ1bGxlcyBldA0KYWxpZ27DqXMmbHQ7L3N0cm9uZyZndDssIHZpZWlsbGlzc2VudCBwYXJmb2lzIG1hbCBldCBuZSAmbHQ7c3Ryb25nJmd0O3Byb3TDqWdlcm9udCBwYXMgZHUNCmJyaXMgZGUgdmVycmUmbHQ7L3N0cm9uZyZndDsuJmx0Oy9saSZndDsNCiZsdDsvdWwmZ3Q7DQombHQ7dWwmZ3Q7DQombHQ7bGkmZ3Q7TGVzICZsdDtzdHJvbmcmZ3Q7dml0cmVzIMOgIHBvc2VyIHN1ciBsJ8OpY3JhbiZsdDsvc3Ryb25nJmd0OywgYXBwYXJ1ZXMgcsOpY2VtbWVudCwgc29udA0KZW4gZmFpdCAmbHQ7c3Ryb25nJmd0O3VuZSBkZXV4acOobWUgY291Y2hlIGRlIHZlcnJlIHF1aSB2YSBwcm90w6lnZXIgZGVzIHJheXVyZXMgZXQgZHUNCmJyaXMgcG91ciBkZXMgY2hvY3MgcmFpc29ubmFibGVzJmx0Oy9zdHJvbmcmZ3Q7IChlbiBjYXMgZCfDqWNyYXNlbWVudCwgaWxzIG5lDQpzdWZmaXJvbnQgcGFzKS4gRWxsZXMgcHLDqXNlbnRlbnQgZGUgbm9tYnJldXggYXZhbnRhZ2VzIDogbGENCiZsdDtzdHJvbmcmZ3Q7ZmFjaWxpdMOpIGRlIHBvc2UmbHQ7L3N0cm9uZyZndDsgKGZhaXJlIGF0dGVudGlvbiBhdXggcG91c3Npw6hyZXMpIGR1IGZhaXQgZGUNCmxhIHJpZ2lkaXTDqSwgdW4gJmx0O3N0cm9uZyZndDtjb25mb3J0IGNlcnRhaW4mbHQ7L3N0cm9uZyZndDsgbGnDqSBhdSB0b3VjaGVyIHNpbWlsYWlyZSDDoA0KbCfDqWNyYW4gaGFiaXR1ZWwgZXQgcGFyZm9pcyB1biAmbHQ7c3Ryb25nJmd0O3RyYWl0ZW1lbnQgYW50aSB0cmFjZXMgZGUNCmRvaWd0cyZsdDsvc3Ryb25nJmd0OywgYWluc2kgcXUndW5lIGV4Y2VsbGVudGUgcHJvdGVjdGlvbi4gw4AgbCdpbnZlcnNlLCBvbiByZXRpZW50IHVuDQombHQ7c3Ryb25nJmd0O3ByaXggc3Vww6lyaWV1ciBhdXggZmlsbXMgcGxhc3RpcXVlcyZsdDsvc3Ryb25nJmd0OyAoZGUgMTggw6AgMzAgZXVyb3MpIGV0DQpsJ2Fqb3V0IGQndW5lIMOpcGFpc3NldXIgZGUgMCwzIMOgIDAsNCBtbSBzdXIgbGEgbWFjaGluZS4gQydlc3QgcGV1LCBtYWlzIG5vbg0KbsOpZ2xpZ2VhYmxlLiZsdDsvbGkmZ3Q7DQombHQ7L3VsJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy9nbGFzdHI2X20uanBnJnF1b3Q7IGFsdD0mcXVvdDtnbGFzdHI2LmpwZyZxdW90OyBzdHlsZT0mcXVvdDtkaXNwbGF5OmJsb2NrOyBtYXJnaW46MCBhdXRvOyZxdW90OyAvJmd0OyZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O8OAIGxpcmUgOiZsdDsvcCZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvcG9zdC90ZXN0LWdsYXMtdC1wcm90ZWN0aW9uLWVjcmFuLXZlcnJlJnF1b3Q7Jmd0O05vdHJlDQp0ZXN0IGRlIGxhIEdsYXMgVCBpUGhvbmUgNC80UyZsdDsvYSZndDsmbHQ7L2xpJmd0Ow0KJmx0O2xpJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L1Rlc3QtYXZpcy1wcm90ZWN0aW9uLWVjcmFuLWVuLXZlcnJlLWlwaG9uZS00LTRTLTUtR2xhcy10LXRSLXBvdXItaVBob25lLTUmcXVvdDsmZ3Q7DQpOb3RyZSB0ZXN0IGRlIGxhIHByb3RlY3Rpb24gR2xhcyBUciZsdDsvYSZndDsmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDtwJmd0O0xlcyBkaWZmw6lyZW50cyBtb2TDqGxlcyBkZSB2aXRyZXMgZGUgcHJvdGVjdGlvbiBpUGhvbmUgNSA6Jmx0Oy9wJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0O0xhICZsdDtzdHJvbmcmZ3Q7cGF0Y2h3b3JrIFVTRyZsdDsvc3Ryb25nJmd0OyDDoCBzZXVsZW1lbnQgJmx0O3N0cm9uZyZndDsxOOKCrDQ5Jmx0Oy9zdHJvbmcmZ3Q7DQombHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuYW1hem9uLmZyL2dwL3Byb2R1Y3QvQjAwOTlQSEM3US9yZWY9YXNfbGlfc3NfdGw:%DQogICAgPGxpbms%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L3BvcC1ldC1yZWdsZXMtbWZpLWFwcGxlPC9saW5rPg0KICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI%dXJuOm1kNTowMDNiMDkwZTIzNzYwYjhjMjNmNzIwNWExMTFlNzY0NzwvZ3VpZD4NCiAgICA8cHViRGF0ZT5XZWQsIDI2IERlYyAyMDEyIDE0OjU1OjAwICswMTAwPC9wdWJEYXRlPg0KICAgIDxkYzpjcmVhdG9yPmdyb2J1YnU8L2RjOmNyZWF0b3I%DQogICAgICAgIDxjYXRlZ29yeT5BY3R1YWxpdMOpIGV0IGF2aXMgaVBob25lPC9jYXRlZ29yeT4NCiAgICAgICAgPGNhdGVnb3J5PmFwcGxlPC9jYXRlZ29yeT48Y2F0ZWdvcnk%bWZpPC9jYXRlZ29yeT48Y2F0ZWdvcnk%cG9wPC9jYXRlZ29yeT4gICAgDQogICAgPGRlc2NyaXB0aW9uPiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2Fzc2V0cy9mZWVkc19pbWFnZXMvcG9wLTFfcy5qcGcmcXVvdDsgYWx0PSZxdW90O3BvcC0xLmpwZyZxdW90OyBzdHlsZT0mcXVvdDtmbG9hdDpsZWZ0OyBtYXJnaW46IDAgMWVtIDFlbSAwOyZxdW90OyAvJmd0O0NldCDDqXTDqSwgbm91cyB2b3VzDQphdmlvbnMgcHLDqXNlbnTDqSAmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9yZWNoYXJnZXItaVBob25lLC1pUG9kLWV0LWlQYWQmcXVvdDsmZ3Q7dW4gcHJvamV0IGtpY2tzdGFydGVyDQpiYXB0aXPDqSBQb3AmbHQ7L2EmZ3Q7IHF1aSBwZXJtZXR0YWl0IGRlIHJlY2hhcmdlciBwbHVzaWV1cnMgYXBwYXJlaWxzIGVuIG3Dqm1lIHRlbXBzDQpncsOiY2Ugw6AgdW5lIHNvcnRlIGRlIHBldGl0IGJvaXRpZXIgcm9uZCBkdXF1ZWwgc29ydGFpZW50IHBsdXNpZXVycw0KY8OiYmxlcy4mbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtQbMOpYmlzY2l0w6kgcGFyIGxlcyBpbnRlcm5hdXRlcywgbGUgcHJvamV0IGF2YWl0IHJlY3VlaWxsaSBsZXMgMTQwMDAwJA0KbsOpY2Vzc2FpcmVzIMOgIHNhIHByb2R1Y3Rpb24uIEwnaGlzdG9pcmUgYXVyYWl0IHB1IHMnYXJyw6p0ZXIgbMOgLCBtYWlzLCBsYQ0Kc2VtYWluZSBkZXJuacOocmUsIGxlIGNyw6lhdGV1ciBkdSBQb3AgYWZmaXJtYWl0IHZvdWxvaXIgcmVtYm91cnNlciBsZXMNCmludmVzdGlzc2V1cnMgw6AgbGEgc3VpdGUgZCd1biByZWZ1cyBkJ0FwcGxlIGRlIGx1aSBhdHRyaWJ1ZXIgbGUgZmFtZXV4IGxhYmVsDQonTWFkZSBmb3IgaVBob25lJy4mbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtNYWlzLCBlbmNvcmUgdW5lIGZvaXMsICZsdDtzdHJvbmcmZ3Q7bCdoaXN0b2lyZSBuZSBzJ2FycsOqdGUgcGFzDQpsw6AmbHQ7L3N0cm9uZyZndDsgOiZsdDsvcCZndDsgICAgJmx0O3AmZ3Q7UmV2ZW5vbnMgcXVlbHF1ZXMgaW5zdGFudHMgc3VyIGNlIHF1aSBzJ2VzdCBwYXNzw6kgbGEgc2VtYWluZSBkZXJuacOocmUuIEphbWllDQpTaW1pbm9mZiwgdW4gZGUgY3LDqWF0ZXVyIGR1IFBvcCwgw6AgZW52b3nDqSB1biBtYWlsIMOgIHRvdXMgbGVzIGludmVzdGlzc2V1cnMgZW4NCmluZGlxdWFudCBxdSdpbHMgc2VyYWllbnQgcHJvY2hhaW5lbWVudCByZW1ib3Vyc8OpcyDDoCBsYSBzdWl0ZSBkJ3VuIHJlZnVzDQpkJ0FwcGxlIGQnYXR0cmlidWVyIGxlIGxhYmVsICdNRkknLiZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O0xhIHJhaXNvbiBkZSBjZSByZWZ1cyDDqXRhaXQgc2ltcGxlLCBBcHBsZSBuJ2F1dG9yaXNhaXQgcGFzIHVuIGFjY2Vzc29pcmUgw6ANCiZsdDtzdHJvbmcmZ3Q7cHJvcG9zZXIgZW4gbcOqbWUgdGVtcHMgbGUgY29ubmVjdGV1ciBMaWdodG5pbmcgZXQgbGUgY29ubmVjdGV1ciAzMA0KYnJvY2hlcyZsdDsvc3Ryb25nJmd0Oy4gQ2V0dGUgw6l0b25uYW50ZSBkw6ljaXNpb24gZCdBcHBsZSBhdmFpdCBhbG9ycyBmYWl0IGxlIHRvdXIgZHUNCndlYi4mbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzL3BvcC0zX20uanBnJnF1b3Q7IGFsdD0mcXVvdDtwb3AtMy5qcGcmcXVvdDsgc3R5bGU9JnF1b3Q7ZGlzcGxheTpibG9jazsgbWFyZ2luOjAgYXV0bzsmcXVvdDsgLyZndDsmbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtEJ2FydGljbGUgZW4gYXJ0aWNsZSwgZGUgc2l0ZSB3ZWIgZW4gc2l0ZSB3ZWIsIGwnaW5mb3JtYXRpb24gcydlc3QgcsOpcGVuZHVlDQpldCwgcG91ciB1bmUgZm9pcywgJmx0O3N0cm9uZyZndDtBcHBsZSBhIGTDqWNpZMOpIGRlIGNoYW5nZXIgZCdhdmlzJmx0Oy9zdHJvbmcmZ3Q7IGV0DQpkJ2F1dG9yaXNlciBmaW5hbGVtZW50IGxhIGNvaGFiaXRhdGlvbiBlbnRyZSBsZXMgcG9ydHMgTGlnaHRuaW5nIGV0IDMwDQpicm9jaGVzLiZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O1BvcCBwb3VycmEgZG9uYyBmaW5hbGVtZW50IHZvaXIgbGUgam91ciBjb21tZSBwcsOpdnUgZXQgZCdhdXRyZXMgcHJvamV0cw0KcHJvcG9zYW50IGxlcyBkZXV4IHR5cGVzIGRlIGNvbm5lY3RldXJzIHBvdXJyb250IHBldXQgw6p0cmUsIGV1eCBhdXNzaSwNCsOpY2xvcmUuJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vYXBwbGVpbnNpZGVyLmNvbS9hcnRpY2xlcy8xMi8xMi8yNC9wb3AtY2hhcmdlci1raWNrc3RhcnRlci1hbGl2ZS1hZ2Fpbi1hZnRlci1hcHBsZS1yZXZpc2VzLWxpZ2h0bmluZy1hY2Nlc3NvcnktcnVsZXMmcXVvdDsmZ3Q7DQpzb3VyY2UmbHQ7L2EmZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvUHJvbW8tZGUtTm8lQzMlQUJsJnF1b3Q7Jmd0OyZsdDtpbWcgc3JjPSZxdW90O2Fzc2V0cy9mZWVkc19pbWFnZXMvcHJvbW8tbm9lbC0zMDAuanBnJnF1b3Q7IGFsdD0mcXVvdDtub2VsLTMwMC5qcGcmcXVvdDsgc3R5bGU9JnF1b3Q7ZGlzcGxheTpibG9jazsgbWFyZ2luOjAgYXV0bzsmcXVvdDsgLyZndDsmbHQ7L2EmZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7RW4gcmFwcG9ydCBhdmVjIGNldCBhcnRpY2xlLCByZXRyb3V2ZXogOiZsdDsvcCZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvY2F0ZWdvcnkvQWNjZXNzb2lyZXMmcXVvdDsmZ3Q7cGx1cyBkZSA4MDAgYWNjZXNzb2lyZXMNCmlQaG9uZSZsdDsvYSZndDsgZMOpasOgIHLDqWbDqXJlbmPDqXMgcGFyICZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5GciZxdW90OyZndDtpUGhvbi5mciZsdDsvYSZndDsuJmx0O2JyIC8mZ3Q7Jmx0Oy9saSZndDsNCiZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvY2F0ZWdvcnkvVGVzdC1hY2Nlc3NvaXJlcy1pUGhvbmUmcXVvdDsmZ3Q7ODAgdGVzdHMgZCcNCmFjY2Vzc29pcmVzJmx0Oy9hJmd0Oy4mbHQ7YnIgLyZndDsmbHQ7L2xpJmd0Ow0KJmx0O2xpJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL2FzdG9yZS5hbWF6b24uZnIvaXBob25mcjAzLTIxJnF1b3Q7Jmd0O0xhIGJvdXRpcXVlIHZpcnR1ZWxsZQ0KYWNjZXNzb2lyZXMgaVBob25lJmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyL3BhZ2VzL2NvZGUtcHJvbW8tYm9uLXJlZHVjdGlvbi1hY2Nlc3NvaXJlcy1pcGhvbmUtaXBhZC1tb2lucy1jaGVycyZxdW90OyZndDsNCkRlcyBib25zIGRlIHLDqWR1Y3Rpb24gaVBob24uZnImbHQ7L2EmZ3Q7Jmx0Oy9saSZndDsNCiZsdDsvdWwmZ3Q7DQo8L2Rlc2NyaXB0aW9uPg0KICAgIA0KICAgIA0KICAgIA0KICAgICAgICAgIDxjb21tZW50cz5odHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvcG9wLWV0LXJlZ2xlcy1tZmktYXBwbGUjY29tbWVudC1mb3JtPC9jb21tZW50cz4NCiAgICAgIDx3Znc6Y29tbWVudD5odHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvcG9wLWV0LXJlZ2xlcy1tZmktYXBwbGUjY29tbWVudC1mb3JtPC93Znc6Y29tbWVudD4NCiAgICAgIDx3Znc6Y29tbWVudFJzcz5odHRwOi8vd3d3LmlwaG9uLmZyL2ZlZWQvYXRvbS9jb21tZW50cy83MTIzMTc8L3dmdzpjb21tZW50UnNzPg0KICAgICAgPC9pdGVtPg0KICAgIA0KICA8aXRlbT4NCiAgICA8dGl0bGU%THVja3kgQmFnIDogZGVzIHBvY2hldHRlcyBzdXJwcmlzZXMgw6AgbGEgc2F1Y2UgQXBwbGUgcG91ciBsYSBub3V2ZWxsZSBhbm7DqWUuLi5hdSBKYXBvbjwvdGl0bGU%DQogICAgPGxpbms%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L2x1Y2t5LWJhZy1hcHBsZS0yMDEzPC9saW5rPg0KICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI%dXJuOm1kNTpjYzMwNjM0ZTkzOTM4ZDNiZWRlNzRmOGE2ZjgxYWZiZjwvZ3VpZD4NCiAgICA8cHViRGF0ZT5XZWQsIDI2IERlYyAyMDEyIDEzOjQ1OjAwICswMTAwPC9wdWJEYXRlPg0KICAgIDxkYzpjcmVhdG9yPmdyb2J1YnU8L2RjOmNyZWF0b3I%DQogICAgICAgIDxjYXRlZ29yeT5BY3R1YWxpdMOpIGV0IGF2aXMgaVBob25lPC9jYXRlZ29yeT4NCiAgICAgICAgPGNhdGVnb3J5PmFwcGxlPC9jYXRlZ29yeT48Y2F0ZWdvcnk%amFwb248L2NhdGVnb3J5PiAgICANCiAgICA8ZGVzY3JpcHRpb24%Jmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy9sdWNreS0xX3MuanBnJnF1b3Q7IGFsdD0mcXVvdDtsdWNreS0xLmpwZyZxdW90OyBzdHlsZT0mcXVvdDtmbG9hdDpsZWZ0OyBtYXJnaW46IDAgMWVtIDFlbSAwOyZxdW90OyAvJmd0OyBJbCBleGlzdGUgYXUgSmFwb24sIHVuZSB0cmFkaXRpb24NCmFtdXNhbnRlIHBvdXIgZsOqdGVyIGxhIG5vdXZlbGxlIGFubsOpZS4gQ29tbWUgbCdhbiBkZXJuaWVyIEFwcGxlIGEgZMOpY2lkw6kgZCd5DQpwYXJ0aWNpcGVyIGVuIHByb3Bvc2FudCBkZXMgJ0x1Y2t5IEJhZycuJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7VmVuZHVzIHVuaXF1ZW1lbnQgYXUgSmFwb24gZHUgMiBhdSA3IGphbnZpZXIgcG91ciB1biBwZXUgcGx1cyBkZSAyOTDigqwsIGNlcw0Kc2FjcyBkZSBsYSBjaGFuY2Ugc29udCBlbiBxdWVscXVlIHNvcnRlIGwnw6lxdWl2YWxlbnQgZGUgbm9zIHBvY2hldHRlcw0Kc3VycHJpc2VzLiBDaGV6IEFwcGxlIGNlcyBzYWNzIHNvbnQgZ2FybmlzIGQnYWNjZXNzb2lyZXMsIG1haXMgw6lnYWxlbWVudCBkZQ0KcHJvZHVpdHMgcG9tbcOpcyA6Jmx0Oy9wJmd0OyAgICAmbHQ7cCZndDtTaSBsYSBwbHVwYXJ0IGNvbnRpZW5uZW50IGRlcyBjYXNxdWVzLCBjb3F1ZXMsIGdvZGRpZXMgZXQgZW5jb3JlIGRlcyBpUG9kDQp0b3VjaCwgY2VydGFpbnMgY2hhbmNldXggcGV1dmVudCB5IHRyb3V2ZXIgZGVzIE1hY0Jvb2sgUHJvIG91IGVuY29yZSBkZXMgaVBhZA0Kb3UgaVBob25lLiZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O1ZvaWNpIGxlIGNvbnRlbnUgZGUgbCd1biBkJ2VudHJlIGV1eCBsJ2FuIGRlcm5pZXIuJmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy9sdWNreS0yX20uanBnJnF1b3Q7IGFsdD0mcXVvdDtsdWNreS0yLmpwZyZxdW90OyBzdHlsZT0mcXVvdDtkaXNwbGF5OmJsb2NrOyBtYXJnaW46MCBhdXRvOyZxdW90OyAvJmd0OyZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O0ZsYWlyYW50IGxhIGJvbm5lIGFmZmFpcmUsIGxlcyBqYXBvbm5haXMgbidow6lzaXRlIHBhcyDDoCBjYW1wZXIgZGV2YW50IGxlcw0KQXBwbGUgU3RvcmUgcG91ciBzJ29mZnJpciB1biBMdWNreSBCYWcuJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy9sdWNreS0zX20uanBnJnF1b3Q7IGFsdD0mcXVvdDtsdWNreS0zLmpwZyZxdW90OyBzdHlsZT0mcXVvdDtkaXNwbGF5OmJsb2NrOyBtYXJnaW46MCBhdXRvOyZxdW90OyAvJmd0OyZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O1NpIHZvdXMgYWxsZXogYXUgSmFwb24gcG91ciBsYSBub3V2ZWxsZSBhbm7DqWUsIG4naMOpc2l0ZXogcGFzIMOgIG0nZW4gcmFtZW5lcg0KdW4gOy0pJmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LnRlY2hpbmFzaWEuY29tL2FwcGxlLWx1Y2t5LWJhZy1zYWxlcy0yMDEzLyZxdW90OyZndDtzb3VyY2UmbHQ7L2EmZ3Q7IC0NCiZsdDthIGhyZWY9JnF1b3Q7aHR0cDovLzl0bzVtYWMuY29tLzIwMTIvMTIvMjUvYXBwbGUtamFwYW4tbHVja3ktYmFnLXNhbGUtc2xhdGVkLWZvci1qYW51YXJ5LTJuZC1hdC03LXN0b3Jlcy8mcXVvdDsmZ3Q7DQp2aWEmbHQ7L2EmZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvUHJvbW8tZGUtTm8lQzMlQUJsJnF1b3Q7Jmd0OyZsdDtpbWcgc3JjPSZxdW90O2Fzc2V0cy9mZWVkc19pbWFnZXMvcHJvbW8tbm9lbC0zMDAuanBnJnF1b3Q7IGFsdD0mcXVvdDtub2VsLTMwMC5qcGcmcXVvdDsgc3R5bGU9JnF1b3Q7ZGlzcGxheTpibG9jazsgbWFyZ2luOjAgYXV0bzsmcXVvdDsgLyZndDsmbHQ7L2EmZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KPC9kZXNjcmlwdGlvbj4NCiAgICANCiAgICANCiAgICANCiAgICAgICAgICA8Y29tbWVudHM%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L2x1Y2t5LWJhZy1hcHBsZS0yMDEzI2NvbW1lbnQtZm9ybTwvY29tbWVudHM%DQogICAgICA8d2Z3OmNvbW1lbnQ%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L2x1Y2t5LWJhZy1hcHBsZS0yMDEzI2NvbW1lbnQtZm9ybTwvd2Z3OmNvbW1lbnQ%DQogICAgICA8d2Z3OmNvbW1lbnRSc3M%aHR0cDovL3d3dy5pcGhvbi5mci9mZWVkL2F0b20vY29tbWVudHMvNzEyMzA0PC93Znc6Y29tbWVudFJzcz4NCiAgICAgIDwvaXRlbT4NCiAgICANCiAgPGl0ZW0%DQogICAgPHRpdGxlPkVuIHVuIGFuLCBGcmVlIGEgY2hhbWJvdWzDqSBsZXMgdmVudGVzIGRlIHNtYXJ0cGhvbmUgZW4gRnJhbmNlPC90aXRsZT4NCiAgICA8bGluaz5odHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvZWZmZXQtZnJlZS12ZW50ZS1kZS1zbWFydHBob25lPC9saW5rPg0KICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI%dXJuOm1kNTo3NDQ2OGE5MzRiZjU0NmI5Mzc5MGE3MmNmYzZhNzI3YTwvZ3VpZD4NCiAgICA8cHViRGF0ZT5XZWQsIDI2IERlYyAyMDEyIDExOjIyOjAwICswMTAwPC9wdWJEYXRlPg0KICAgIDxkYzpjcmVhdG9yPmdyb2J1YnU8L2RjOmNyZWF0b3I%DQogICAgICAgIDxjYXRlZ29yeT5BY3R1YWxpdMOpIGV0IGF2aXMgaVBob25lPC9jYXRlZ29yeT4NCiAgICAgICAgPGNhdGVnb3J5PmZyZWU8L2NhdGVnb3J5PiAgICANCiAgICA8ZGVzY3JpcHRpb24%Jmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy9nZmstMV9zLmpwZyZxdW90OyBhbHQ9JnF1b3Q7Z2ZrLTEuanBnJnF1b3Q7IHN0eWxlPSZxdW90O2Zsb2F0OmxlZnQ7IG1hcmdpbjogMCAxZW0gMWVtIDA7JnF1b3Q7IC8mZ3Q7IEF2ZWMgJmx0O3N0cm9uZyZndDtsJ2Fycml2w6llIGRlIEZyZWUgZW4gamFudmllcg0KMjAxMiZsdDsvc3Ryb25nJmd0OyBzdXIgbGUgbWFyY2jDqSBkZSBsYSB0w6lsw6lwaG9uaWUgbW9iaWxlLCBsYSBGcmFuY2UgZXN0IGRldmVudWUgdW4NCnBheXMgw6AgcGFydC4mbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtFbiBlZmZldCwgY2hvaXNpc3NhbnQgZGUgZGlzc29jaWVyIGwnYWNoYXQgZHUgbW9iaWxlIGR1IHByaXggZHUgZm9yZmFpdCwNCiZsdDtzdHJvbmcmZ3Q7RnJlZSBhIGNvbXBsw6h0ZW1lbnQgYm91bGV2ZXJzw6kgbm9zIGhhYml0dWRlcyZsdDsvc3Ryb25nJmd0Oy4mbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtBaW5zaSwgYXUgY291cnMgZGUgbCdhbm7DqWUgcXVpIHZpZW50IGRlIHMnw6ljb3VsZXIsIGxlcyBzbWFydHBob25lcyB2ZW5kdXMNCiZsdDtzdHJvbmcmZ3Q7c2FucyBzdWJ2ZW50aW9uJmx0Oy9zdHJvbmcmZ3Q7IG9udCB2dSBsZXMgdmVudGVzIGV4cGxvc2VyLiBDJ2VzdCBjZSBxdWUgdmllbnQNCnNvdWxpZ25lciB1bmUgw6l0dWRlIHLDqWNlbnRlIGZhaXRlIHBhciBHRksgOiZsdDsvcCZndDsgICAgJmx0O3AmZ3Q7TcOqbWUgc2kgZ2xvYmFsZW1lbnQgODUgJSBkZXMgMTMsNSBtaWxsaW9ucyBkZSBTbWFydHBob25lcyB2ZW5kdXMgZW4gMjAxMg0KbCdhdXJvbnQgw6l0w6kgYXZlYyBzdWJ2ZW50aW9uLCBjJ2VzdCBlbiBzJ2ludMOpcmVzc2FudCAmbHQ7c3Ryb25nJmd0O2F1IGNpcmN1aXQgZGUNCnZlbnRlIHByb3ByZSDDoCBsYSBkaXN0cmlidXRpb24mbHQ7L3N0cm9uZyZndDsgKEludGVybmV0LCBIeXBlcm1hcmNow6lzIGV0IEdyYW5kZXMNClN1cmZhY2VzIFNwZWNpYWxpc8OpZXMpIHF1ZSBsZXMgY2hpZmZyZXMgZGV2aWVubmVudCBwbHVzIGludMOpcmVzc2FudHMuJmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7U2Vsb24gbCfDqXR1ZGUsICZsdDtzdHJvbmcmZ3Q7bGUgcGjDqW5vbcOobmUgZXN0IHBsdXMgcXVlIHNpZ25pZmljYXRpZiBldCBwcm9wcmUgw6AgbGENCkZyYW5jZS4mbHQ7L3N0cm9uZyZndDsgQWluc2ksIHN1ciBsZSB0cm9pc2nDqG1lIHRyaW1lc3RyZSAyMDEyLCAmbHQ7c3Ryb25nJmd0OzIgc21hcnRwaG9uZXMNCnZlbmR1cyBzdXIgMyBsZSBzb250IHNhbnMgc3VidmVudGlvbiZsdDsvc3Ryb25nJmd0OyBjJ2VzdC3DoC1kaXJlIHNhbnMgZm9yZmFpdCBhc3NvY2nDqQ0KcXVpIHBlcm1ldCBkJ29idGVuaXIgc29uIG5vdXZlYXUgdMOpbMOpcGhvbmUgYXZlYyB1bmUgZ3Jvc3NlIHLDqWR1Y3Rpb24uJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7w4l0b25uYW1tZW50LCBjZSBzb250ICZsdDtzdHJvbmcmZ3Q7bGVzIHNtYXJ0cGhvbmVzIGQnZW50csOpZSBkZSBnYW1tZSBxdWkgc2UNCnRhaWxsZW50IHVuZSBib25uZSBwYXJ0IGR1IG1hcmNoJmx0Oy9zdHJvbmcmZ3Q7w6kuIERhbnMgbGVzIGdyYW5kZXMgc3VyZmFjZXMsIHF1aQ0KcHJvcG9zZW50IHVuIGxhcmdlIGNob2l4IGRlIG1vZMOobGVzLCBsZXMgbW9kw6hsZXMgw6AgbW9pbnMgZGUgMTUw4oKsIHJlcHLDqXNlbnRlbnQNCnVuZSB2ZW50ZSBzdXIgdHJvaXMuJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy9nZmstMV9tLmpwZyZxdW90OyBhbHQ9JnF1b3Q7Z2ZrLTEuanBnJnF1b3Q7IHN0eWxlPSZxdW90O2Rpc3BsYXk6YmxvY2s7IG1hcmdpbjowIGF1dG87JnF1b3Q7IC8mZ3Q7Jmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7QmllbiDDqXZpZGVtbWVudCwgbGVzIGZhY2lsaXTDqXMgZGUgcGFpZW1lbnQgZXQgYXV0cmVzIG9mZnJlcyBkZSByZW1ib3Vyc2VtZW50DQptaXNlcyBlbiBwbGFjZSBwYXIgbGVzIG5vdXZlYXV4IG9ww6lyYXRldXJzIG5lIHNvbnQgcGFzIMOpdHJhbmfDqHJlcyBhdQ0KcGjDqW5vbcOobmUuJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7RW4gdW5lIGFubsOpZSwgbGUgY29tcG9ydGVtZW50IGRlcyBjb25zb21tYXRldXJzIGEgw6lub3Jtw6ltZW50IMOpdm9sdcOpIGdyw6JjZSBvdQ0Kw6AgY2F1c2UgZGUgbCdhcnJpdsOpZSBkZSBGcmVlLiBBdWpvdXJkJ2h1aSwgbm9tYnJldXggc29udCBjZXV4IHF1aSBuJ2ltYWdpbmVudA0KcGFzIGF2b2lyIHB1IHBheWVyIDUw4oKsIHBhciBtb2lzIHBvdXIgMmggZGUgdMOpbMOpcGhvbmUgZXQgNTAwIE1PIGRhdGEuLi4mbHQ7L3AmZ3Q7DQombHQ7cCZndDsmbHQ7c3Ryb25nJmd0O0V0IHZvdXMgY29tbWVudCBhdmV6LXZvdXMgYWNoZXTDqSB2b3RyZSBkZXJuaWVyIGlQaG9uZSA:Jmx0Oy9zdHJvbmcmZ3Q7DQpBdmVjIG91IHNhbnMgc3VidmVudGlvbiA:Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3Lmdma3J0LmNvbS9pbXBlcmlhL21kL2NvbnRlbnQvcnQtZnJhbmNlL2NwX2dma19tYXJjaF9fX2Rlc19zbWFydHBob25lc19kZWMyMDEyLnBkZiZxdW90OyZndDsNCnNvdXJjZSZsdDsvYSZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9Qcm9tby1kZS1ObyVDMyVBQmwmcXVvdDsmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy9wcm9tby1ub2VsLTMwMC5qcGcmcXVvdDsgYWx0PSZxdW90O25vZWwtMzAwLmpwZyZxdW90OyBzdHlsZT0mcXVvdDtkaXNwbGF5OmJsb2NrOyBtYXJnaW46MCBhdXRvOyZxdW90OyAvJmd0OyZsdDsvYSZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDsmbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQoNCiZsdDtwJmd0O10mbHQ7L3AmZ3Q7PC9kZXNjcmlwdGlvbj4NCiAgICANCiAgICANCiAgICANCiAgICAgICAgICA8Y29tbWVudHM%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L2VmZmV0LWZyZWUtdmVudGUtZGUtc21hcnRwaG9uZSNjb21tZW50LWZvcm08L2NvbW1lbnRzPg0KICAgICAgPHdmdzpjb21tZW50Pmh0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9lZmZldC1mcmVlLXZlbnRlLWRlLXNtYXJ0cGhvbmUjY29tbWVudC1mb3JtPC93Znc6Y29tbWVudD4NCiAgICAgIDx3Znc6Y29tbWVudFJzcz5odHRwOi8vd3d3LmlwaG9uLmZyL2ZlZWQvYXRvbS9jb21tZW50cy83MTIyOTY8L3dmdzpjb21tZW50UnNzPg0KICAgICAgPC9pdGVtPg0KICAgIA0KICA8aXRlbT4NCiAgICA8dGl0bGU%MTIgam91cnMgQ2FkZWF1eCBpVHVuZXMgOiBQcmVtaWVyIGpvdXIgZW4gbXVzaXF1ZS4uLjwvdGl0bGU%DQogICAgPGxpbms%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0LzEyLWpvdXJzLUNhZGVhdXgtaVR1bmVzLTIwMTMtam91ci0xPC9saW5rPg0KICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI%dXJuOm1kNTphNmE5ODM2MzliYWZlNzE4MTRhNmY5MWY0Zjg2YzBiODwvZ3VpZD4NCiAgICA8cHViRGF0ZT5XZWQsIDI2IERlYyAyMDEyIDA5OjA5OjAwICswMTAwPC9wdWJEYXRlPg0KICAgIDxkYzpjcmVhdG9yPmdyb2J1YnU8L2RjOmNyZWF0b3I%DQogICAgICAgIDxjYXRlZ29yeT5BcHAgaVBob25lIGV0IGlQb2QgVG91Y2ggKEFwcCBTdG9yZSk8L2NhdGVnb3J5Pg0KICAgICAgICA8Y2F0ZWdvcnk%MTItam91cnMtMTI8L2NhdGVnb3J5PiAgICANCiAgICA8ZGVzY3JpcHRpb24%Jmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy8xMmpvdXJzLTFfcy5qcGcmcXVvdDsgYWx0PSZxdW90OzEyam91cnMtMS5qcGcmcXVvdDsgc3R5bGU9JnF1b3Q7ZmxvYXQ6bGVmdDsgbWFyZ2luOiAwIDFlbSAxZW0gMDsmcXVvdDsgLyZndDtDb21tZSBjaGFxdWUgYW5uw6llLA0KanVzdGUgYXByw6hzIE5vw6psLCBBcHBsZSBub3VzIG9mZnJlIHBlbmRhbnQgMTIgam91cnMgdW4gY2FkZWF1IHBhciBqb3VyLg0KTXVzaXF1ZSwgZmlsbXMsIHPDqXJpZSwgbGl2cmUgb3UgYXBwbGljYXRpb24sIGxlIGNhZGVhdSBlc3QgZGlmZsOpcmVudCBjaGFxdWUNCmpvdXIgZXQgaWwgeSBlbiBhIGfDqW7DqXJhbGVtZW50IHBvdXIgdG91cyBsZXMgZ291dHMuJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7QXVqb3VyZCdodWksIG9uIGNvbW1lbmNlIGVuIG11c2lxdWUgYXZlYywgcG91ciBjZSBwcmVtaWVyIGpvdXIsDQombHQ7c3Ryb25nJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL2Nsay50cmFkZWRvdWJsZXIuY29tL2NsaWNrP3A9MjM3NTMmYW1wO2FtcDthPTY5ODE2OCZhbXA7YW1wO2c9MCZhbXA7YW1wO3RkX3BhcnRuZXJJZD0yMDAzJmFtcDthbXA7dXJsPWh0dHBzOi8vaXR1bmVzLmFwcGxlLmNvbS9mci9hbGJ1bS9ob2xpZGF5LWdpZnQtc2luZ2xlL2lkNTgzODg3ODcxJnF1b3Q7Jmd0Ow0KMiB0aXRyZXMgZXQgdW4gbWFraW5nIG9mIGR1IGdyb3VwZSBNYXJvb24gNSDDoCB0w6lsw6ljaGFyZ2VyIGF2YW50IGNlIHNvaXINCm1pbnVpdCZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsgOiZsdDsvcCZndDsgICAgJmx0O3AmZ3Q7QXUgcHJvZ3JhbW1lIGRlIGNlIHByZW1pZXIgY2FkZWF1LCB2b3VzIHJldHJvdXZlcmV6ICZsdDtzdHJvbmcmZ3Q7MiB0aXRyZXMgZXQgdW4NCk1ha2luZyBvZiBkZSBNYXJvb24gNSZsdDsvc3Ryb25nJmd0OyA6Jmx0Oy9wJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0O01vdmUgTGlrZSBKYWdnZXImbHQ7L2xpJmd0Ow0KJmx0O2xpJmd0O09uZSBNb3JlIE5pZ2h0Jmx0Oy9saSZndDsNCiZsdDtsaSZndDtMZSBtYWtpbmcgb2YgZGUgTW92ZSBMaWtlIEphZ2dlciZsdDsvbGkmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O3N0cm9uZyZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthbXA7YT02OTgxNjgmYW1wO2FtcDtnPTAmYW1wO2FtcDt0ZF9wYXJ0bmVySWQ9MjAwMyZhbXA7YW1wO3VybD1odHRwczovL2l0dW5lcy5hcHBsZS5jb20vZnIvYWxidW0vaG9saWRheS1naWZ0LXNpbmdsZS9pZDU4Mzg4Nzg3MSZxdW90OyZndDsNCkxlcyAzIGNhZGVhdXggZHUgam91ciBzb250IMOgIHTDqWzDqWNoYXJnZXIgaWNpJmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyZsdDsvbGkmZ3Q7DQombHQ7L3VsJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy8xMmpvdXJzajEtMi5qcGcmcXVvdDsgYWx0PSZxdW90OzEyam91cnNqMS0yLmpwZyZxdW90OyBzdHlsZT0mcXVvdDtkaXNwbGF5OmJsb2NrOyBtYXJnaW46MCBhdXRvOyZxdW90OyAvJmd0OyZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O1JlbmRlei12b3VzIGRlbWFpbiBwb3VyIGxhIHN1aXRlIGRlcyAxMiBKb3VycyBDYWRlYXV4IGlUdW5lcy4gJmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvUHJvbW8tZGUtTm8lQzMlQUJsJnF1b3Q7Jmd0OyZsdDtpbWcgc3JjPSZxdW90O2Fzc2V0cy9mZWVkc19pbWFnZXMvcHJvbW8tbm9lbC0zMDAuanBnJnF1b3Q7IGFsdD0mcXVvdDtub2VsLTMwMC5qcGcmcXVvdDsgc3R5bGU9JnF1b3Q7ZGlzcGxheTpibG9jazsgbWFyZ2luOjAgYXV0bzsmcXVvdDsgLyZndDsmbHQ7L2EmZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KPC9kZXNjcmlwdGlvbj4NCiAgICANCiAgICANCiAgICANCiAgICAgICAgICA8Y29tbWVudHM%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0LzEyLWpvdXJzLUNhZGVhdXgtaVR1bmVzLTIwMTMtam91ci0xI2NvbW1lbnQtZm9ybTwvY29tbWVudHM%DQogICAgICA8d2Z3OmNvbW1lbnQ%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0LzEyLWpvdXJzLUNhZGVhdXgtaVR1bmVzLTIwMTMtam91ci0xI2NvbW1lbnQtZm9ybTwvd2Z3OmNvbW1lbnQ%DQogICAgICA8d2Z3OmNvbW1lbnRSc3M%aHR0cDovL3d3dy5pcGhvbi5mci9mZWVkL2F0b20vY29tbWVudHMvNzEyMjkwPC93Znc6Y29tbWVudFJzcz4NCiAgICAgIDwvaXRlbT4NCiAgICANCiAgPGl0ZW0%DQogICAgPHRpdGxlPkxlcyBhcHBsaXMgaVBob25lIGV0IGlQb2QgdG91Y2ggaGFiaXR1ZWxsZW1lbnQgcGF5YW50ZXMsIGdyYXR1aXRlcyBhY3R1ZWxsZW1lbnQgb3UgZW4gcHJvbW8gITwvdGl0bGU%DQogICAgPGxpbms%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L2JvbnMtcGxhbnMtYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC1ldC1wcm9tb3M8L2xpbms%DQogICAgPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj51cm46bWQ1OjhjMTFjODFiMmUzZWNhZWI4YzcyOTRkZjRiYjAxMWVmPC9ndWlkPg0KICAgIDxwdWJEYXRlPlR1ZSwgMjUgRGVjIDIwMTIgMjA6MjA6MDAgKzAxMDA8L3B1YkRhdGU%DQogICAgPGRjOmNyZWF0b3I%aVN0PC9kYzpjcmVhdG9yPg0KICAgICAgICA8Y2F0ZWdvcnk%QXBwcyBncmF0dWl0ZXMsIGJhaXNzZXMgZGUgcHJpeCwgYm9ubmVzIGFmZmFpcmVzPC9jYXRlZ29yeT4NCiAgICAgICAgPGNhdGVnb3J5PkFwcCBHcmF0dWl0ZXM8L2NhdGVnb3J5PjxjYXRlZ29yeT5BcHBTdG9yZTwvY2F0ZWdvcnk%PGNhdGVnb3J5PmJvbnMgcGxhbnMgYXBwIGlQaG9uZTwvY2F0ZWdvcnk%PGNhdGVnb3J5PkZyZWVBcHBBRGF5PC9jYXRlZ29yeT48Y2F0ZWdvcnk%amV1eCBpUGhvbmU8L2NhdGVnb3J5PjxjYXRlZ29yeT5wcm9tb3MgQXBwIFN0b3JlPC9jYXRlZ29yeT48Y2F0ZWdvcnk%dG9wdXNoPC9jYXRlZ29yeT4gICAgDQogICAgPGRlc2NyaXB0aW9uPiZsdDtwJmd0O0V0IHZvaWNpIHF1ZWxxdWVzIGFwcGxpcyBwYXNzw6llcyBncmF0dWl0ZXMsIG1vaW5zIHF1ZSBkJ2hhYml0dWRlcyBjYXIgbCdBcHANClN0b3JlIHRvdXJuZSBhdSByYWxlbnRpLCBtYWlzIHF1ZWxxdWVzIGJlbGxlcyBjaG9zZXMgdG91dCBkZSBtw6ptZSAhIEpveWV1eA0Kbm:Dq2wgYXZlYyBjZXMgY2FkZWF1eC4mbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQoNCg0KJmx0O2gyJmd0O0Egbm90ZXImbHQ7L2gyJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvY2FkZWF1eC1ub2VsLWFwcGxpcy1pcGhvbmUmcXVvdDsmZ3Q7VW4NCk5vw6tsIGVuIGZvbGllIGF2ZWMgdW5lIGFwcHBsaSBpUGhvbmUgcXVpIHZvdXMgb2ZmcmUgZGVzIGNhZGVhdXggdG91cyBsZXMgam91cnMNCmp1c3F1J8OgIGxhIGZpbiBkZSBsJ2FubsOpZSZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDsmbHQ7c3Ryb25nJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L2FwcGxpLWJsb2ctaXBob25lLXZpcGFkJnF1b3Q7Jmd0O1ZvdXMNCmFpbWV6IGxlIHNpdGUgaVBob24uZnIsIHZvdXMgYWxsZXogYWRvcmVyIGwnYXBwbGkgaS1uZm8uZnIgLi4uIEJpZW50w7R0IG1pc2Ugw6ANCmpvdXIgOy0pJmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyZsdDsvbGkmZ3Q7DQombHQ7L3VsJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvY2FkZWF1eC1ub2VsLWlwaG9uZS1pcG9kLXRvdWNoLWlwYWQmcXVvdDsmZ3Q7aUNhZGVhdXggPw0KUmFjb250ZXotbm91cyB2b3RyZSBub8OrbCBpUGhvbmUgaVBvZCwgaVBhZCAuLi4gb3UgYXV0cmUgISZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDsmbHQ7c3Ryb25nJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L0Rvc3NpZXItYXBwLWlQaG9uZS1hcHBsaXMtYnVyZWF1dGlxdWUtaVBob25lJnF1b3Q7Jmd0O0Rvc3NpZXINCmFwcCBpUGhvbmUgOiBQbHVzIGRlIDMwIGFwcGxpcyBwcmF0aXF1ZXMgbG9yc3F1J29uIHF1aXR0ZSBsZSBidXJlYXUgZXQgbGENCm1haXNvbiZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDtoMiZndDtCYWlzc2VzIGRlIHByaXggcG9uY3R1ZWxsZXMgYXBwIGlQaG9uZSBldCBpUG9kIHRvdWNoJmx0Oy9oMiZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDsmbHQ7c3Ryb25nJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL2Nsay50cmFkZWRvdWJsZXIuY29tL2NsaWNrP3A9MjM3NTMmYW1wO2FtcDthPTY5ODE2OCZhbXA7YW1wO2c9MCZhbXA7YW1wO3RkX3BhcnRuZXJJZD0yMDAzJmFtcDthbXA7dXJsPWh0dHBzOi8vaXR1bmVzLmFwcGxlLmNvbS9mci9hcHAvaWQzMjAyNjQ4ODk:bXQ9OCZxdW90OyZndDsNCk5hdmlnb24gRnJhbmNlJmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyA6ICZsdDtkZWwmZ3Q7NjksOTkmbHQ7L2RlbCZndDsgLSZhbXA7Z3Q7IDU0LDk5IOKCrCBwb3VyIGlQaG9uZQ0KZXQgaVBhZCZsdDsvbGkmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O3N0cm9uZyZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthbXA7YT02OTgxNjgmYW1wO2FtcDtnPTAmYW1wO2FtcDt0ZF9wYXJ0bmVySWQ9MjAwMyZhbXA7YW1wO3VybD1odHRwczovL2l0dW5lcy5hcHBsZS5jb20vZnIvYXBwL2lkMzIwMjc5MjkzP210PTgmcXVvdDsmZ3Q7DQpOYXZpZ29uIEV1cm9wZSZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsgOiAmbHQ7ZGVsJmd0Ozg5LDk5Jmx0Oy9kZWwmZ3Q7IC0mYW1wO2d0OyA2OSw5OSDigqwgcG91ciBpUGhvbmUNCmV0IGlQYWQmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDsmbHQ7c3Ryb25nJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L1Byb21vLWRlLU5vJUMzJUFibCZxdW90OyZndDtQcm9tb3MgZGUNCk5vw6tsIDogcGx1cyBkZSAxMDAgYXBwbGljYXRpb25zIGlQaG9uZSBldCBpUGFkIGVuIHByb21vJmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyZsdDsvbGkmZ3Q7DQombHQ7L3VsJmd0Ow0KJmx0O3AmZ3Q7Vm9pY2kgbGVzIGFwcGxpY2F0aW9ucyBldCBqZXV4IHBhc3PDqXMgZW4gZ3JhdHVpdCByw6ljZW1tZW50IGV0ICZsdDtzdHJvbmcmZ3Q7cG91cg0KdW5lIGR1csOpZSBsaW1pdMOpZSZsdDsvc3Ryb25nJmd0OyAuIFBlbnNleiDDoCAmbHQ7c3Ryb25nJmd0O3bDqXJpZmllciBsYSBncmF0dWl0w6kgbG9ycyBkdQ0KdMOpbMOpY2hhcmdlbWVudCZsdDsvc3Ryb25nJmd0OyAhJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O2gyJmd0O0xlcyBhcHBsaWNhdGlvbnMgaVBob25lIGV0IGlQb2QgVG91Y2ggZ3JhdHVpdGVzDQp0ZW1wb3JhaXJlbWVudCA6Jmx0O2JyIC8mZ3Q7Jmx0Oy9oMiZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDsmbHQ7c3Ryb25nJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL2Nsay50cmFkZWRvdWJsZXIuY29tL2NsaWNrP3A9MjM3NTMmYW1wO2FtcDthPTY5ODE2OCZhbXA7YW1wO2c9MCZhbXA7YW1wO3RkX3BhcnRuZXJJZD0yMDAzJmFtcDthbXA7dXJsPWh0dHBzOi8vaXR1bmVzLmFwcGxlLmNvbS9mci9hcHAvdGlsdHNoaWZ0LWVmZmVjdC9pZDU4NjkzOTM0MD9tdD04JnF1b3Q7Jmd0Ow0KVGlsdFNoaWZ0IEVmZmVjdCZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsgOiB1biBzdXBlcmJlIGVmZmV0IHRpbHQgc2hpZnQgZmFjaWxlIGV0DQpyw6lnbGFibGUgw6AgYXBwbGlxdWVyIGF1eCBwaG90b3MgZMOpasOgIHByaXNlcyBvdSBhdXggbm91dmVsbGVzLiBQb3NzaWJpbHTDqSBkZQ0KZmFpZSBkdSBUaWx0c2hpZnQgdmlkw6lvIMOpZ2FsZW1lbnQmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDsmbHQ7c3Ryb25nJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL2Nsay50cmFkZWRvdWJsZXIuY29tL2NsaWNrP3A9MjM3NTMmYW1wO2FtcDthPTY5ODE2OCZhbXA7YW1wO2c9MCZhbXA7YW1wO3RkX3BhcnRuZXJJZD0yMDAzJmFtcDthbXA7dXJsPWh0dHBzOi8vaXR1bmVzLmFwcGxlLmNvbS9mci9hcHAvaWQ1MzM1MTYwNjA:bXQ9OCZxdW90OyZndDsNClNtYXJ0U2NhbiBFeHByZXNzOiBGYXN0IFBvY2tldCBTY2FubmVyIHdpdGggUERGIGNvbnZlcnNpb24mbHQ7L2EmZ3Q7Jmx0Oy9zdHJvbmcmZ3Q7IDoNCnNjYW5uZXIgZGUgZG9jdW1lbnRzLCBwcmVuZXogdW5lIHBob3RvLCBsJ2FwbGkgbGEgcmVkcmVzc2UgZXQgdm91cyBzb3J0ZXogdW4NClBERiwgNCDDqXRvaWxlcyBzdXIgbCdBcHAgU3RvcmUgVVMmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDsmbHQ7c3Ryb25nJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL2Nsay50cmFkZWRvdWJsZXIuY29tL2NsaWNrP3A9MjM3NTMmYW1wO2FtcDthPTY5ODE2OCZhbXA7YW1wO2c9MCZhbXA7YW1wO3RkX3BhcnRuZXJJZD0yMDAzJmFtcDthbXA7dXJsPWh0dHBzOi8vaXR1bmVzLmFwcGxlLmNvbS9mci9hcHAvZ2FtZS15b3VyLXZpZGVvL2lkNDk2MjMyNjQ5P210PTgmcXVvdDsmZ3Q7DQpHYW1lIFlvdXIgVmlkZW8mbHQ7L2EmZ3Q7Jmx0Oy9zdHJvbmcmZ3Q7IDogdHLDqHMgdHLDqHMgYm9ubmUgYXBwbGkgZCfDqWRpdGlvbiBldCBkJ2VmZmV0cw0Kdmlkw6lvcywgNSDDqXRvaWxlcyBzdXIgbCdBcHAgU3RvcmUgRlImbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDsmbHQ7c3Ryb25nJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL2Nsay50cmFkZWRvdWJsZXIuY29tL2NsaWNrP3A9MjM3NTMmYW1wO2FtcDthPTY5ODE2OCZhbXA7YW1wO2c9MCZhbXA7YW1wO3RkX3BhcnRuZXJJZD0yMDAzJmFtcDthbXA7dXJsPWh0dHBzOi8vaXR1bmVzLmFwcGxlLmNvbS9mci9hcHAvaWQ0OTE5OTI5MzY:bXQ9OCZxdW90OyZndDsNClN1cGVyTWFpbCZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsgOiBwb3VyIGVudm95ZXIgZGVzIHBob3RvcyBvdSBwacOoY2VzIGpvaW50ZXMgZW4NCmdyYW5kZSBxdWFudGl0w6kgcGFyIG1haWwsIGRlcHVpcyBkcm9wYm94IG5vdGFtbWVudCZsdDsvbGkmZ3Q7DQombHQ7L3VsJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2ZyL2FwcC9tb2JpbHl0b29scy9pZDUxODY1MDE1Nz9tdD04JnF1b3Q7Jmd0Ow0KTW9iaWx5VG9vbHMmbHQ7L2EmZ3Q7Jmx0Oy9zdHJvbmcmZ3Q7IDogdW5lIGFwcCDDoCB0b3V0IGZhaXJlIHBvdXIgbGVzIHZveWFnZXVycywgTGFtcGUNClRvcmNoZSwgQWx0aW3DqHRyZSwgTml2ZWF1IGRlIGxhIEJhdHRlcmllLCBUYXV4IGRlIGNoYW5nZSwgUGxhbnMgZGUgdHJhbnNwb3J0cywNCkNhbGN1bCBkZSBQb3VyYm9pcmVzLCBKb3VycyBGw6lyacOpcyBldCBDYXJuZXQgZGUgVm95YWdlICEsIDQgw6l0b2lsZXMgc3VyIGwnQXBwDQpTdG9yZSBGUiZsdDsvbGkmZ3Q7DQombHQ7L3VsJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2FwcC9pZDQyMjcwMjIzMz9tdD04JnF1b3Q7Jmd0Ow0KU2tldGNoIENhbSBMaXZlJmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyA6IHByZW5leiBkZXMgcGhvdG9zIGV0IHZpZMOpb3MgZHUgbW9uZGUgcXVpDQp2b3VzIGVudG91cmUsIGVuIHZlcnNpb24gZGVzc2luIGQnYXJ0ICEmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDsmbHQ7c3Ryb25nJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL2Nsay50cmFkZWRvdWJsZXIuY29tL2NsaWNrP3A9MjM3NTMmYW1wO2FtcDthPTY5ODE2OCZhbXA7YW1wO2c9MCZhbXA7YW1wO3RkX3BhcnRuZXJJZD0yMDAzJmFtcDthbXA7dXJsPWh0dHBzOi8vaXR1bmVzLmFwcGxlLmNvbS9hcHAvaWQ0NjA2Mzg1MDE:bXQ9OCZxdW90OyZndDsNCkZyYWN0YWwgQ2FuZHkmbHQ7L2EmZ3Q7Jmx0Oy9zdHJvbmcmZ3Q7IDogY3LDqWV6IGV0ICZhbXA7cXVvdDt2aXNpdGV6JmFtcDtxdW90OyBsZXMgc3VwZXJiZXMgZnJhY3RhbGVzIGRlDQpNYW5kZWxicm90IGV0IEppdWxpYSBlbiBjb3VsZXVyLCBhdmVjIHpvb20gZW4gcGluw6dhbnQsIHBvdXIgaVBob25lIGV0ICZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy52aXBhZC5mciZxdW90OyZndDtpUGFkJmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7DQombHQ7L3VsJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2FwcC9pZDQ5Mzg2MTgxND9tdD04JnF1b3Q7Jmd0Ow0KTW9iaWxlIE1hcmt1cCAtIENvZGUgRWRpdG9yJmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyA6IMOpZGl0ZXVyIGRlIHRleHRlIGTDqWRpw6kgYXUgSFRNTCwNCnBvdXIgaVBob25lIGV0ICZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy52aXBhZC5mciZxdW90OyZndDtpUGFkJmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7DQombHQ7L3VsJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2ZyL2FwcC9pZDQ4MTk1MzQ0MD9tdD04JnF1b3Q7Jmd0Ow0KQ2luZWZ5IC0gU3BlY2lhbCBGWCBTdHVkaW8mbHQ7L2EmZ3Q7Jmx0Oy9zdHJvbmcmZ3Q7IDogRGVzIGNlbnRhaW5lcyBkJ2VmZmV0cyBzcMOpY2lhdXgNCnBvdXIgdm9zIHZpZMOpb3MmbHQ7L2xpJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2ZyL2FwcC9hcHBpZGF5LXBvdXItaXBob25lLWRlcy1hcHBzL2lkNTM5OTQ4NzQxP210PTgmcXVvdDsmZ3Q7DQpBcHBpRGF5Jmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyA6IEVjb25vbWlzZXogZW4gbmUgcGF5YW50IHBsdXMgdm9zDQphcHBsaWNhdGlvbnMgOiB0b3VzIGxlcyBqb3VycyB1bmUgYXBwbGkgaVBob25lIGV0IHVuZSBhcHBsaSBpUGFkIChhdQ0KbW9pbnMpIHBhc3NlbnQgZGUgcGF5YW50ZSDDoCBncmF0dWl0ZSBwb3VyIHVuZSBkdXLDqWUgbGltaXTDqWUgZXQgdm91cyBwYXNzZXog4oCmIFVuDQpBcHBpRGF5ICEmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDtoMiZndDtKZXV4IGlQaG9uZSBldCBpUG9kIHRvdWNoIGdyYXR1aXRzIHBvbmN0dWVsbGVtZW50IDombHQ7YnIgLyZndDsmbHQ7L2gyJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2FwcC9pZDQ5NjU4NTQwND9tdD04JnF1b3Q7Jmd0Ow0KSG9ja2V5IFdpbm5lciZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsgOiByaWVuIG5lIHZhdXQgdW4gYm9uIGpldSBkZSBhaXIgaG9ja2V5IHN1cg0KaU9TLCBlbiB2b2ljaSB1biAhIEEgam91ZXIgY29udHJlIGwnb3JkaSBvdSDDoCBkZXV4IHN1ciB1biBtw6ptZSDDqWNyYW4gLA0KcG91ciBpUGhvbmUgZXQgJmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LnZpcGFkLmZyJnF1b3Q7Jmd0O2lQYWQmbHQ7L2EmZ3Q7Jmx0O2JyIC8mZ3Q7DQombHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzLzI1LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTFfcy5qcGcmcXVvdDsgYWx0PSZxdW90OzI1LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTEuanBnJnF1b3Q7IHN0eWxlPSZxdW90O2Rpc3BsYXk6YmxvY2s7IG1hcmdpbjowIGF1dG87JnF1b3Q7IHRpdGxlPSZxdW90OzI1LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTEuanBnLCBvY3QuIDIwMTAmcXVvdDsgLyZndDsmbHQ7YnIgLyZndDsmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsgICAgJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2FwcC9pZDM3MDM4OTgzOD9tdD04JnF1b3Q7Jmd0Ow0KU3BvdGZsaWNrIEZvb3RiYWxsJmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyA6IHVuIGpldSBkZSBwZW5hbHR5IMOgIHRpcmVyIGR1IGJvdXQgZGVzDQpkb2lndHMgw6AgbCfDqWNyYW4sIG1hcnF1ZXJleiB2dXMgY29udHJlIGxlcyBtZWlsbGV1cnMgZ2FyZGllbnMgbW9uZGlhdXggPyAtDQo0IMOpdG9pbGVzIHN1ciBsJ0FwcCBTdG9yZSBVUyZsdDticiAvJmd0Ow0KJmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy8yNS0xMi0yMDEyLWFwcGxpcy1ncmF0dWl0ZXMtaXBob25lLWlwb2QtdG91Y2gtaXBhZC0yX3MuanBnJnF1b3Q7IGFsdD0mcXVvdDsyNS0xMi0yMDEyLWFwcGxpcy1ncmF0dWl0ZXMtaXBob25lLWlwb2QtdG91Y2gtaXBhZC0yLmpwZyZxdW90OyBzdHlsZT0mcXVvdDtkaXNwbGF5OmJsb2NrOyBtYXJnaW46MCBhdXRvOyZxdW90OyB0aXRsZT0mcXVvdDsyNS0xMi0yMDEyLWFwcGxpcy1ncmF0dWl0ZXMtaXBob25lLWlwb2QtdG91Y2gtaXBhZC0yLmpwZywgb2N0LiAyMDEwJnF1b3Q7IC8mZ3Q7Jmx0O2JyIC8mZ3Q7Jmx0Oy9saSZndDsNCiZsdDtsaSZndDsmbHQ7c3Ryb25nJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL2Nsay50cmFkZWRvdWJsZXIuY29tL2NsaWNrP3A9MjM3NTMmYW1wO2FtcDthPTY5ODE2OCZhbXA7YW1wO2c9MCZhbXA7YW1wO3RkX3BhcnRuZXJJZD0yMDAzJmFtcDthbXA7dXJsPWh0dHBzOi8vaXR1bmVzLmFwcGxlLmNvbS9hcHAvaWQzNTQwMTE4NzA:bXQ9OCZxdW90OyZndDsNCjEwMCBSb2d1ZXMmbHQ7L2EmZ3Q7Jmx0Oy9zdHJvbmcmZ3Q7IDogamV1IGQnYXZlbnR1cmUgZXQgZGUgcsO0bGUgZGFucyB1biBkb25nZW9uLCBwb3VyDQppUGhvbmUgZXQgJmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LnZpcGFkLmZyJnF1b3Q7Jmd0O2lQYWQmbHQ7L2EmZ3Q7Jmx0O2JyIC8mZ3Q7DQombHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzLzI1LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTNfcy5qcGcmcXVvdDsgYWx0PSZxdW90OzI1LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTMuanBnJnF1b3Q7IHN0eWxlPSZxdW90O2Rpc3BsYXk6YmxvY2s7IG1hcmdpbjowIGF1dG87JnF1b3Q7IHRpdGxlPSZxdW90OzI1LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTMuanBnLCBvY3QuIDIwMTAmcXVvdDsgLyZndDsmbHQ7YnIgLyZndDsmbHQ7L2xpJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2ZyL2FwcC9pZDQwNjQyMzMyMj9tdD04JnF1b3Q7Jmd0Ow0KaUJhdHRsZSBHYW1lJmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyA6IGpldSBkZSBzdHJhdMOpZ2llIC8gcGxhdGVhdSBkYW5zIGxlcXVlbCB2b3VzDQphbGxleiBndWlkZXIgdm90cmUgYXJtw6llIHBvdXIgcHJlbmRyZSBsZSBkcmFwZWF1IMOgIGwnZW5uZW1pICEgLSA0LDUNCsOpdG9pbGVzIHN1ciBsJ0FwcCBTdG9yZSBGUiwgcG91ciBpUGhvbmUgZXQgJmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LnZpcGFkLmZyJnF1b3Q7Jmd0O2lQYWQmbHQ7L2EmZ3Q7Jmx0O2JyIC8mZ3Q7DQombHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzLzI1LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTRfcy5qcGcmcXVvdDsgYWx0PSZxdW90OzI1LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTQuanBnJnF1b3Q7IHN0eWxlPSZxdW90O2Rpc3BsYXk6YmxvY2s7IG1hcmdpbjowIGF1dG87JnF1b3Q7IHRpdGxlPSZxdW90OzI1LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTQuanBnLCBvY3QuIDIwMTAmcXVvdDsgLyZndDsmbHQ7YnIgLyZndDsmbHQ7L2xpJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2FwcC9pZDM2ODc0OTY3OD9tdD04JnF1b3Q7Jmd0Ow0KQ2hvcCBDaG9wIFRlbm5pcyZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsgOiBqZXUgZGUgdGVubmlzIHN0eWxpc8OpIGV0IHN5bXBhIGF2ZWMgbGVzDQpjaG9wIGNob3AgLSA0LDUgw6l0b2lsZXMgc3VyIGwnQXBwIFN0b3JlIEZSLCBwb3VyIGlQaG9uZSBldCAmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cudmlwYWQuZnImcXVvdDsmZ3Q7aVBhZCZsdDsvYSZndDsmbHQ7YnIgLyZndDsNCiZsdDtpbWcgc3JjPSZxdW90O2Fzc2V0cy9mZWVkc19pbWFnZXMvMjUtMTItMjAxMi1hcHBsaXMtZ3JhdHVpdGVzLWlwaG9uZS1pcG9kLXRvdWNoLWlwYWQtNV9zLmpwZyZxdW90OyBhbHQ9JnF1b3Q7MjUtMTItMjAxMi1hcHBsaXMtZ3JhdHVpdGVzLWlwaG9uZS1pcG9kLXRvdWNoLWlwYWQtNS5qcGcmcXVvdDsgc3R5bGU9JnF1b3Q7ZGlzcGxheTpibG9jazsgbWFyZ2luOjAgYXV0bzsmcXVvdDsgdGl0bGU9JnF1b3Q7MjUtMTItMjAxMi1hcHBsaXMtZ3JhdHVpdGVzLWlwaG9uZS1pcG9kLXRvdWNoLWlwYWQtNS5qcGcsIG9jdC4gMjAxMCZxdW90OyAvJmd0OyZsdDticiAvJmd0OyZsdDsvbGkmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O3N0cm9uZyZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthbXA7YT02OTgxNjgmYW1wO2FtcDtnPTAmYW1wO2FtcDt0ZF9wYXJ0bmVySWQ9MjAwMyZhbXA7YW1wO3VybD1odHRwczovL2l0dW5lcy5hcHBsZS5jb20vZnIvYXBwL2lkNTA3MTYwOTYwP210PTgmcXVvdDsmZ3Q7DQpBaXJzcGluJmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyA6IGV4cGxvcmV6IGwnaWxlIGV4b3RpcXVlIGRhbnMgdm90cmUgYWNpb24sIGTDqWNvdXZyZXoNCmxlcyByZWNvaW5zIGNhY2jDqXMsIHN0eWxpc8OpIMOgIHNvdWhhaXQgw6AgbGEgbWFuacOocmUgZGUgbCfDrmxlIGRlIGxhIHdpaSAtIDQNCsOpdG9pbGVzIHN1ciBsJ0FwcCBTdG9yZSBGUiwgcG91ciBpUGhvbmUgZXQgJmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LnZpcGFkLmZyJnF1b3Q7Jmd0O2lQYWQmbHQ7L2EmZ3Q7Jmx0O2JyIC8mZ3Q7DQombHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzLzI1LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTZfcy5qcGcmcXVvdDsgYWx0PSZxdW90OzI1LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTYuanBnJnF1b3Q7IHN0eWxlPSZxdW90O2Rpc3BsYXk6YmxvY2s7IG1hcmdpbjowIGF1dG87JnF1b3Q7IHRpdGxlPSZxdW90OzI1LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTYuanBnLCBvY3QuIDIwMTAmcXVvdDsgLyZndDsmbHQ7YnIgLyZndDsmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDtwJmd0OyZsdDticiAvJmd0Ow0KTWFpcyBhdXNzaSA6Jmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL3VzL2FwcC9pZDM5NDAxMjYzMD9tdD04JnF1b3Q7Jmd0Ow0KUG9ja2V0IFdvcmxkIEF0IFdhciZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsmbHQ7YnIgLyZndDsmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDsmbHQ7c3Ryb25nJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL2Nsay50cmFkZWRvdWJsZXIuY29tL2NsaWNrP3A9MjM3NTMmYW1wO2FtcDthPTY5ODE2OCZhbXA7YW1wO2c9MCZhbXA7YW1wO3RkX3BhcnRuZXJJZD0yMDAzJmFtcDthbXA7dXJsPWh0dHBzOi8vaXR1bmVzLmFwcGxlLmNvbS9hcHAvaWQ0NTk0MDc4NDc:bXQ9OCZxdW90OyZndDsNCkhPS00gUHJvJmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyZsdDticiAvJmd0OyZsdDsvbGkmZ3Q7DQombHQ7L3VsJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2FwcC9pZDQxMDM1NDMzOT9tdD04JnF1b3Q7Jmd0Ow0KU3F1YXJyZWxzJmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyZsdDticiAvJmd0OyZsdDsvbGkmZ3Q7DQombHQ7L3VsJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2FwcC9pZDQ0Mjc0MDk1Nz9tdD04JnF1b3Q7Jmd0Ow0KVG94aWMgRnJvZyZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsmbHQ7YnIgLyZndDsmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDsmbHQ7c3Ryb25nJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL2Nsay50cmFkZWRvdWJsZXIuY29tL2NsaWNrP3A9MjM3NTMmYW1wO2FtcDthPTY5ODE2OCZhbXA7YW1wO2c9MCZhbXA7YW1wO3RkX3BhcnRuZXJJZD0yMDAzJmFtcDthbXA7dXJsPWh0dHBzOi8vaXR1bmVzLmFwcGxlLmNvbS9hcHAvaWQ0Nzk1MTY5ODQ:bXQ9OCZxdW90OyZndDsNClNuaXBvbmcmbHQ7L2EmZ3Q7Jmx0Oy9zdHJvbmcmZ3Q7Jmx0O2JyIC8mZ3Q7Jmx0Oy9saSZndDsNCiZsdDsvdWwmZ3Q7DQombHQ7dWwmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O3N0cm9uZyZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthbXA7YT02OTgxNjgmYW1wO2FtcDtnPTAmYW1wO2FtcDt0ZF9wYXJ0bmVySWQ9MjAwMyZhbXA7YW1wO3VybD1odHRwczovL2l0dW5lcy5hcHBsZS5jb20vdXMvYXBwL2lkNDUzODcyMzMzP210PTgmcXVvdDsmZ3Q7DQpGcm96ZW4mbHQ7L2EmZ3Q7Jmx0Oy9zdHJvbmcmZ3Q7Jmx0O2JyIC8mZ3Q7Jmx0Oy9saSZndDsNCiZsdDsvdWwmZ3Q7DQombHQ7ZGl2IHN0eWxlPSZxdW90O3RleHQtYWxpZ246IGNlbnRlciZxdW90OyZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9Qcm9tby1kZS1ObyVDMyVBQmwmcXVvdDsmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy9wcm9tby0zLmpwZyZxdW90OyBhbHQ9JnF1b3Q7cHJvbW9zIGFwcGxpcyBpUGhvbmUsIGlQb2QgdG91Y2ggaVBhZCZxdW90OyAvJmd0OyZsdDsvYSZndDsmbHQ7L2RpdiZndDsNCiZsdDtwJmd0OyZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtoMiZndDtFdCBwb3VyIGwnaVBhZCA6Jmx0O2JyIC8mZ3Q7Jmx0Oy9oMiZndDsNCiZsdDtwJmd0O0NlIHNlcmEgcGx1cyB0YXJkIHN1ciAmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cudmlwYWQuZnImcXVvdDsmZ3Q7VklQYWQuZnImbHQ7L2EmZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2JyIC8mZ3Q7DQpWb3VzIGF2ZXogbWFucXXDqSB1biBkZSBub3MgYmlsbGV0cyBxdW90aWRpZW5zID8gQ2VydGFpbmVzIGFwcGxpcyBzb250DQpwZXV0LcOqdHJlIGVuY29yZSBwcm9wb3PDqWVzIGdyYXR1aXRlbWVudCA6ICZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyL3RhZy9BcHAlMjBHcmF0dWl0ZXMmcXVvdDsmZ3Q7UmV0cm91dmV6IHRvdXMgbm9zIGJpbGxldHMgZGVzDQpncmF0dWl0cyBldCBwcm9tb3MgZHUgc29pciBpY2kgc3VyIGlQaG9uLmZyJmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyZsdDticiAvJmd0Ow0KJmx0O2JyIC8mZ3Q7DQombHQ7ZW0mZ3Q7RWRpdGV1cnMsIHZvdXMgYXZleiBlbnZpZSBkZSBtZXR0cmUgZW4gYXZhbnQgdm90cmUgYXBwbGljYXRpb24gKGJpZW4gbm90w6llKQ0KYXZlYyB1bmUgam91cm7DqWUgZGUgZ3JhdHVpdMOpIHJlbGF5w6llIHBhciBpUGhvbi5mciA:IEVudm95ZXogbm91cyB1biBwZXRpdA0KbWFpbCDDoCBuZXdzICggYSApIGlQaG9uLmZyICEmbHQ7L2VtJmd0OyZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0OyZsdDticiAvJmd0OyZsdDsvcCZndDsNCjwvZGVzY3JpcHRpb24%DQogICAgDQogICAgDQogICAgDQogICAgICAgICAgPGNvbW1lbnRzPmh0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9ib25zLXBsYW5zLWFwcGxpcy1ncmF0dWl0ZXMtaXBob25lLWlwb2QtZXQtcHJvbW9zI2NvbW1lbnQtZm9ybTwvY29tbWVudHM%DQogICAgICA8d2Z3OmNvbW1lbnQ%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L2JvbnMtcGxhbnMtYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC1ldC1wcm9tb3MjY29tbWVudC1mb3JtPC93Znc6Y29tbWVudD4NCiAgICAgIDx3Znc6Y29tbWVudFJzcz5odHRwOi8vd3d3LmlwaG9uLmZyL2ZlZWQvYXRvbS9jb21tZW50cy83MTIyNjE8L3dmdzpjb21tZW50UnNzPg0KICAgICAgPC9pdGVtPg0KICAgIA0KICA8aXRlbT4NCiAgICA8dGl0bGU%Vm91cyBhaW1leiBsZSBzaXRlIGlQaG9uLmZyLCB2b3VzIGFsbGV6IGFkb3JlciBsJ2FwcGxpIGktbmZvLmZyIC4uLiBCaWVudMO0dCBtaXNlIMOgIGpvdXIgIDstKTwvdGl0bGU%DQogICAgPGxpbms%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L2FwcGxpLWJsb2ctaXBob25lLXZpcGFkPC9saW5rPg0KICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI%dXJuOm1kNTowYTBjZTIyOTAyYzY0MzhhMDliMzdjNzEyMjA1ODNkYjwvZ3VpZD4NCiAgICA8cHViRGF0ZT5UdWUsIDI1IERlYyAyMDEyIDE3OjMwOjAwICswMTAwPC9wdWJEYXRlPg0KICAgIDxkYzpjcmVhdG9yPmdyb2J1YnU8L2RjOmNyZWF0b3I%DQogICAgICAgIDxjYXRlZ29yeT5JbmZvcyBpUGhvbi5mcjwvY2F0ZWdvcnk%DQogICAgICAgIDxjYXRlZ29yeT5pLW5mbzwvY2F0ZWdvcnk%ICAgIA0KICAgIDxkZXNjcmlwdGlvbj4mbHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzL2luZm8tMV9zLmpwZyZxdW90OyBhbHQ9JnF1b3Q7aW5mby0xLmpwZyZxdW90OyBzdHlsZT0mcXVvdDtmbG9hdDpsZWZ0OyBtYXJnaW46IDAgMWVtIDFlbSAwOyZxdW90OyAvJmd0O0Fsb3JzIHF1ZSBiZWF1Y291cA0KZCdlbnRyZSB2b3VzIG5vdXMgcmVuZGVudCBwcm9iYWJsZW1lbnQgdmlzaXRlIHBvdXIgbGEgcHJlbWnDqHJlIGZvaXMsIGMnZXN0DQpsJ29jY2FzaW9uIGRlICZsdDtzdHJvbmcmZ3Q7ZmFpcmUgbGUgdG91ciBkZSBub3RyZSBhcHBsaWNhdGlvbg0KaS1uZm8uZnImbHQ7L3N0cm9uZyZndDsuJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7VsOpcml0YWJsZSBjb21wbMOpbWVudCBkdSBzaXRlIGludGVybmV0LCBsJ2FwcGxpIHZvdXMgZG9ubmVyYSBhY2PDqHMgYXV4DQombHQ7c3Ryb25nJmd0O2Rlcm5pw6hyZXMgaW5mb3MgZGUgbGEgcGxhbsOodGUgQXBwbGUgbWFpcyDDqWdhbGVtZW50IMOgIGRlcyBib25zIHBsYW5zDQpxdW90aWRpZW5zLCBkZXMgYXJ0aWNsZXMgcHJhdGlxdWUmbHQ7L3N0cm9uZyZndDsgZXQgaidlbiBwYXNzZS4mbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtCaWVuIMOpdmlkZW1tZW50IGdyYXR1aXRlLCBsJ2FwcGxpIGVzdCBkaXNwb25pYmxlIHN1ciBsJ0FwcCBTdG9yZSBldCBwZXRpdGUNCmluZGlzY3LDqXRpb24gZGUgTm:Dq2wsIHVuZSB0b3V0ZSBub3V2ZWxsZSB2ZXJzaW9uIG5lIGRldnJhaXQgcGFzDQp0YXJkZXIgOiZsdDsvcCZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthbXA7YT02OTgxNjgmYW1wO2FtcDtnPTAmYW1wO2FtcDt0ZF9wYXJ0bmVySWQ9MjAwMyZhbXA7YW1wO3VybD1odHRwOi8vaXR1bmVzLmFwcGxlLmNvbS9mci9hcHAvaWQzMTM1NTk5MjY:bXQ9OCZxdW90OyZndDsNCmktbmZvLmZyIGVzdCBkaXNwb25pYmxlIGljaSBzdXIgbCdBcHAgU3RvcmUgYXUgcHJpeCBkZSBncmF0dWl0ZW1lbnQmbHQ7L2EmZ3Q7Jmx0Oy9saSZndDsNCiZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthbXA7YT02OTgxNjgmYW1wO2FtcDtnPTAmYW1wO2FtcDt0ZF9wYXJ0bmVySWQ9MjAwMyZhbXA7YW1wO3VybD1odHRwOi8vaXR1bmVzLmFwcGxlLmNvbS9mci9hcHAvaWQ0NzIwNzAwNDk:bXQ9OCZxdW90OyZndDsNCmktbmZvLmZyIEhEIHBvdXIgaVBhZCBlc3QgZGlzcG9uaWJsZSBpY2kgc3VyIGwnQXBwIFN0b3JlIGdyYXR1aXRlbWVudCZsdDsvYSZndDsmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsgICAgJmx0O3AmZ3Q7QmFwdGlzw6llIGktbmZvLmZyLCBub3RyZSBhcHBsaWNhdGlvbiBlc3Qgc3VyIGwnQXBwIFN0b3JlIGRlcHVpcyBwbHVzaWV1cnMNCmFubsOpZXMuIEVsbGUgdm91cyBkb25uZXJhIGFjY8OocyBhdSBjb250ZW51IGR1IHNpdGUgaVBob24uZnIgbWFpcyDDqWdhbGVtZW50IGRlDQpfXyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy52aXBhZC5mci8mcXVvdDsmZ3Q7c29uIHBldGl0IGZyw6hyZSBkw6lkacOpIMOgIGwnaVBhZA0KVmlwYWQuZnImbHQ7L2EmZ3Q7LiZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O0VuIHBsdXMgZGUgY2VsYSwgbCdhcHBsaSBlbWJhcnF1ZSAmbHQ7c3Ryb25nJmd0O25vdHJlICdtb2R1bGUgYm9ucyBwbGFucycmbHQ7L3N0cm9uZyZndDsNCnBvdXIgdm91cyBwZXJtZXR0cmUgZGUgZmFpcmUgZGUgYm9ubmVzIGFmZmFpcmVzIHRvdXQgYXUgbG9uZyBkZSBsJ2FubsOpZS4gZGVzDQphcHBsaXMgZ3JhdHVpdGVzIGV0IGRlcyBwcm9tb3Mgw6AgbmUgcGFzIG1hbnF1ZXIgc29udCBham91dMOpZXMgdG91dGUgbGEgam91cm7DqWUsDQp2b3VzIHBvdXZleiBham91dGVyIGxlcyB2w7R0cmVzICEmbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtWb3VzIHkgdHJvdXZlcmV6IMOpZ2FsZW1lbnQgJmx0O3N0cm9uZyZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob25lZnIuY29tLyZxdW90OyZndDtub3RyZQ0KZm9ydW0mbHQ7L2EmZ3Q7Jmx0Oy9zdHJvbmcmZ3Q7IHF1aSByw6lwb25kcmEgw6AgdG91dGVzIHZvcyBxdWVzdGlvbnMgZXQgcXVpIHZvdXMgcGVybWV0dHJhIGRlDQpkaXNjdXRlciBhdmVjIGQnYXV0cmVzIHBhc3Npb25uw6lzLiZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2Fzc2V0cy9mZWVkc19pbWFnZXMvaW5mby0yX20uanBnJnF1b3Q7IGFsdD0mcXVvdDtpbmZvLTJfbS5qcGcmcXVvdDsgc3R5bGU9JnF1b3Q7ZGlzcGxheTpibG9jazsgbWFyZ2luOjAgYXV0bzsmcXVvdDsgLyZndDsmbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtHcsOiY2UgYXV4IG5vdGlmaWNhdGlvbnMgcHVzaCBxdWUgdm91cyBwb3VycmV6IGNob2lzaXIgZCdhY3RpdmVyIG91IG5vbQ0KJmx0O3N0cm9uZyZndDt2b3VzIHNlcmV6IHByw6l2ZW51IGNoYXF1ZSBzb2lyIGRlIGwnYXJyaXbDqWUgZHUgYmlsbGV0IGRlcw0KZ3JhdHVpdHMmbHQ7L3N0cm9uZyZndDsgcXVpIHZvdXMgc2VydmlyYSBzdXIgdW4gcGxhdGVhdSB0b3V0ZXMgbGVzIGFwcGxpY2F0aW9ucw0KcGFzc8OpZXMgZ3JhdHVpdGVzIGR1IGpvdXIuIEFpbnNpLCB2b3RyZSBpUGhvbmUgb3Ugdm90cmUgaVBhZCByZWdvcmdlcmEgdml0ZQ0KZCd1dGlsaXRhaXJlcyBldCBkZSBqZXV4IHF1aSB2b250IGZhaXJlIHJvdWdpciBkJ2VudmllIHZvcyBhbWlzLiZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O0V0IHBvdXIgJmx0O3N0cm9uZyZndDsyMDEzJmx0Oy9zdHJvbmcmZ3Q7LCB2b3VzIGF1cmV6IGRyb2l0IMOgIHVuZSAmbHQ7c3Ryb25nJmd0O2dyb3NzZSBtaXNlIMOgDQpqb3VyIGRlIGwnYXBwbGljYXRpb24mbHQ7L3N0cm9uZyZndDsgISBQZXRpdCBzcG9pbGVyIGVuIGNhZGVhdSA7LSkmbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzL2FwcGxpLWluZm8taXBob24tZnJfbS5qcGcmcXVvdDsgYWx0PSZxdW90O2FwcGxpLWluZm8taXBob24tZnIuanBnJnF1b3Q7IHN0eWxlPSZxdW90O2Rpc3BsYXk6YmxvY2s7IG1hcmdpbjowIGF1dG87JnF1b3Q7IHRpdGxlPSZxdW90O2FwcGxpLWluZm8taXBob24tZnIuanBnLCAyMDExJnF1b3Q7IC8mZ3Q7Jmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7SmUgbmUgdm91cyBlbiBkaXMgcGFzIHBsdXMgZXQgdm91cyBpbnZpdGUgw6AgdmVuaXIgbm91cyByZWpvaW5kcmUgc2FucyBwbHVzDQp0YXJkZXIgISZsdDsvcCZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthbXA7YT02OTgxNjgmYW1wO2FtcDtnPTAmYW1wO2FtcDt0ZF9wYXJ0bmVySWQ9MjAwMyZhbXA7YW1wO3VybD1odHRwOi8vaXR1bmVzLmFwcGxlLmNvbS9mci9hcHAvaWQzMTM1NTk5MjY:bXQ9OCZxdW90OyZndDsNCmktbmZvLmZyIGVzdCBkaXNwb25pYmxlIGljaSBzdXIgbCdBcHAgU3RvcmUgYXUgcHJpeCBkZSBncmF0dWl0ZW1lbnQmbHQ7L2EmZ3Q7Jmx0Oy9saSZndDsNCiZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthbXA7YT02OTgxNjgmYW1wO2FtcDtnPTAmYW1wO2FtcDt0ZF9wYXJ0bmVySWQ9MjAwMyZhbXA7YW1wO3VybD1odHRwOi8vaXR1bmVzLmFwcGxlLmNvbS9mci9hcHAvaWQ0NzIwNzAwNDk:bXQ9OCZxdW90OyZndDsNCmktbmZvLmZyIEhEIHBvdXIgaVBhZCBlc3QgZGlzcG9uaWJsZSBpY2kgc3VyIGwnQXBwIFN0b3JlIGdyYXR1aXRlbWVudCZsdDsvYSZndDsmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDtwJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L2lkZWVzLWNhZGVhdXgtbm9lbC1pcGhvbmUtaXBvZC10b3VjaC1pcGFkJnF1b3Q7Jmd0OyZsdDtpbWcgc3JjPSZxdW90O2Fzc2V0cy9mZWVkc19pbWFnZXMvbm9lbC02MDAuanBnJnF1b3Q7IGFsdD0mcXVvdDtub2VsLTYwMC5qcGcmcXVvdDsgc3R5bGU9JnF1b3Q7ZGlzcGxheTpibG9jazsgbWFyZ2luOjAgYXV0bzsmcXVvdDsgLyZndDsmbHQ7L2EmZ3Q7Jmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KPC9kZXNjcmlwdGlvbj4NCiAgICANCiAgICANCiAgICANCiAgICAgICAgICA8Y29tbWVudHM%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L2FwcGxpLWJsb2ctaXBob25lLXZpcGFkI2NvbW1lbnQtZm9ybTwvY29tbWVudHM%DQogICAgICA8d2Z3OmNvbW1lbnQ%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L2FwcGxpLWJsb2ctaXBob25lLXZpcGFkI2NvbW1lbnQtZm9ybTwvd2Z3OmNvbW1lbnQ%DQogICAgICA8d2Z3OmNvbW1lbnRSc3M%aHR0cDovL3d3dy5pcGhvbi5mci9mZWVkL2F0b20vY29tbWVudHMvNzEyMTU0PC93Znc6Y29tbWVudFJzcz4NCiAgICAgIDwvaXRlbT4NCiAgICANCiAgPGl0ZW0%DQogICAgPHRpdGxlPlJldHJvc3BlY3RpdmUgMjAxMiBkZSBub3MgZG9zc2llcnMgYXBwIGlQaG9uZSA6IExlIG1laWxsZXVyICBkZSAyMDEyIGVuIHVuIHNldWwgYXJ0aWNsZTwvdGl0bGU%DQogICAgPGxpbms%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L21laWxsZXVycy1kb3NzaWVyLWFwcC0yMDEyLTE8L2xpbms%DQogICAgPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj51cm46bWQ1OjM4OWQyN2M4YzM0MTc5YmRmZDIxNzkxNjUwMmRmOWRiPC9ndWlkPg0KICAgIDxwdWJEYXRlPlR1ZSwgMjUgRGVjIDIwMTIgMTU6NDU6MDAgKzAxMDA8L3B1YkRhdGU%DQogICAgPGRjOmNyZWF0b3I%Z3JvYnVidTwvZGM6Y3JlYXRvcj4NCiAgICAgICAgPGNhdGVnb3J5PkFwcCBpUGhvbmUgZXQgaVBvZCBUb3VjaCAoQXBwIFN0b3JlKTwvY2F0ZWdvcnk%DQogICAgICAgICAgICANCiAgICA8ZGVzY3JpcHRpb24%Jmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9wdWJsaWMvR3JvYnVidTIvMTExMS9kb3NzaWVyLXJlY2FwLTAucG5nJnF1b3Q7IGFsdD0mcXVvdDtkb3NzaWVyLXJlY2FwLTAucG5nJnF1b3Q7IHN0eWxlPSZxdW90O2Zsb2F0OmxlZnQ7IG1hcmdpbjogMCAxZW0gMWVtIDA7JnF1b3Q7IC8mZ3Q7Jmx0O2JyIC8mZ3Q7DQpMJ2FubsOpZSBzZSB0ZXJtaW5lIHRvdXQgZG91Y2VtZW50IGV0IGMnZXN0IGwnb2NjYXNpb24gZGUgJmx0O3N0cm9uZyZndDtmYWlyZSBsZSBwb2ludA0Kc3VyICZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci90YWcvZG9zc2llciUyMGFwcGxpY2F0aW9ucyUyMGlQaG9uZSZxdW90OyZndDtub3MNCmRvc3NpZXJzIGFwcCBpUGhvbmUgaGViZG9tYWRhaXJlcyZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsuIERhbnMgY2VsdWkgZGUgY2V0dGUgc2VtYWluZSwNCnZvdXMgYWxsZXogcmV0cm91dmVyIHVuZSBzw6lsZWN0aW9uIGQnYXBwbGlzIGVuIHRvdXQgZ2VucmUgLi4uIMOgIG1ldHRyZSBkZSB0b3V0ZQ0KdXJnZW5jZSBkYW5zIHZvdHJlIGlQaG9uZS4mbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtTaSB2b3VzIGxlcyBhdmV6IGx1IGF1IGZpbCBkZSBsJ2FubsOpZSwgYydlc3QgJmx0O3N0cm9uZyZndDtsJ29jY2FzaW9uIGRlIHZvdXMNCnJhZnJhw65jaGlyIGxhIG3DqW1vaXJlJmx0Oy9zdHJvbmcmZ3Q7IGV0IHNpIHZvdXMgw6p0ZXMgdG91dCBub3V2ZWF1IGRhbnMgbCd1bml2ZXJzDQppUGhvbmUgZXQgaU9TIHZvaWzDoCAmbHQ7c3Ryb25nJmd0O2RlIHF1b2kgcmVtcGxpciB2b3RyZSBpUGhvbmUgb3UgaVBvZCB0b3VjaCBmbGFtYmFudA0KbmV1Zi4mbHQ7L3N0cm9uZyZndDsmbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtDJ2VzdCBwYXJ0aSBwb3VyIHVuIHRvdXIgZGVzIG1laWxsZXVyZXMgYXBwcyBwYXIgZG9tYWluZSZsdDsvcCZndDsgICAgJmx0O2gyJmd0O0xlcyBhcHBsaXMgaW5kaXNwZW5zYWJsZXMmbHQ7L2gyJmd0Ow0KJmx0O3AmZ3Q7RmFjZSDDoCBsYSBtdWx0aXR1ZGUgZCdhcHBsaWNhdGlvbnMgcHJvcG9zw6llcyBzdXIgbCdBcHAgU3RvcmUgaWwgZXN0IHBhcmZvaXMNCmRpZmZpY2lsZSBkZSBzJ3kgcmV0cm91dmVyLiBDJ2VzdCBjZSBxdWUgbm91cyBhdm9ucyB0ZW50w6kgZGUgZmFpcmUgcG91ciB2dXMNCmRhbnMgY2UgZG9zc2llciA6Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvVG9wLWFwcC1pcGhvbmUtNFMmcXVvdDsmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy9pbmRpcy0xX3MuanBnJnF1b3Q7IGFsdD0mcXVvdDtpbmRpcy0xLmpwZyZxdW90OyBzdHlsZT0mcXVvdDtkaXNwbGF5OmJsb2NrOyBtYXJnaW46MCBhdXRvOyZxdW90OyAvJmd0OyZsdDsvYSZndDsmbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7dWwmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O3N0cm9uZyZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9Ub3AtYXBwLWlwaG9uZS00UyZxdW90OyZndDsyMCBhcHANCmluZGlzcGVuc2FibGVzIMOgIG1ldHRyZSBhYnNvbHVtZW50IGRhbnMgdm90cmUgKG5vdXZlbCkgaVBob25lJmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyZsdDsvbGkmZ3Q7DQombHQ7L3VsJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL2Nsay50cmFkZWRvdWJsZXIuY29tL2NsaWNrP3A9MjM3NTMmYW1wO2FtcDthPTY5ODE2OCZhbXA7YW1wO2c9MCZhbXA7YW1wO3RkX3BhcnRuZXJJZD0yMDAzJmFtcDthbXA7dXJsPWh0dHA6Ly9pdHVuZXMuYXBwbGUuY29tL2ZyL2FwcC9hcHBpZGF5LXBvdXItaXBob25lLWRlcy1hcHBzL2lkNTM5OTQ4NzQxP210PTgmcXVvdDsmZ3Q7DQpBcHBpZGF5IGVzdCBkaXNwb25pYmxlIGljaSBzdXIgbCdBcHAgU3RvcmUgZ3JhdHVpdGVtZW50Jmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cDovL2l0dW5lcy5hcHBsZS5jb20vZnIvYXBwL2Ryb3Bib3gvaWQzMjc2MzAzMzA:bXQ9OCZxdW90OyZndDsNCkRyb3Bib3ggZXN0IGRpc3BvbmlibGUgaWNpIHN1ciBsJ0FwcCBTdG9yZSBncmF0dWl0ZW1lbnQmbHQ7L2EmZ3Q7Jmx0Oy9saSZndDsNCiZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthbXA7YT02OTgxNjgmYW1wO2FtcDtnPTAmYW1wO2FtcDt0ZF9wYXJ0bmVySWQ9MjAwMyZhbXA7YW1wO3VybD1odHRwOi8vaXR1bmVzLmFwcGxlLmNvbS9mci9hcHAvbWljYWwtbWlzc2luZy1jYWxlbmRhci9pZDM5MjI5MDU3Nj9tdD04JnF1b3Q7Jmd0Ow0KTWlDYWwgZXN0IGRpc3BvbmlibGUgaWNpIHN1ciBsJ0FwcCBTdG9yZSBwb3VyIDEsNznigqwmbHQ7L2EmZ3Q7Jmx0Oy9saSZndDsNCiZsdDsvdWwmZ3Q7DQombHQ7aDImZ3Q7RmlsbWVyIGF2ZWMgbCdpUGhvbmUmbHQ7L2gyJmd0Ow0KJmx0O3AmZ3Q7QSBjaGFxdWUgbW9kw6hsZSwgQXBwbGUgYW3DqWxpb3JlIHVuIHBldSBwbHVzIGxhIGNwYXRldXIgcGhvdG8vdmlkw6lvIGRlDQpsJ2lQaG9uZS4gSWwgc2VyYWl0IGRvbW1hZ2UgZGUgbmUgcGFzIGVuIGZhaXJlIGJvbiB1c2FnZS4gVm9pY2kgcXVlbHF1ZXMNCmFwcGxpY2F0aW9ucyBwb3VyIHZvdXMgeSBhaWRlciZsdDsvcCZndDsNCiZsdDtwJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L3RvcC1hcHAtaXBob25lLWZpbG0tbW9udGFnZS12aWRlbyZxdW90OyZndDsmbHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzL2ZpbG0tMV9zLmpwZyZxdW90OyBhbHQ9JnF1b3Q7ZmlsbS0xLmpwZyZxdW90OyBzdHlsZT0mcXVvdDtkaXNwbGF5OmJsb2NrOyBtYXJnaW46MCBhdXRvOyZxdW90OyAvJmd0OyZsdDsvYSZndDsmbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7dWwmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O3N0cm9uZyZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvcG9zdC90b3AtYXBwLWlwaG9uZS1maWxtLW1vbnRhZ2UtdmlkZW8mcXVvdDsmZ3Q7MjAgYXBwbGlzIHBvdXINCmZpbG1lciBldCBtb250ZXIgdm9zIHZpZMOpb3Mgc3VyIGwnaVBob25lJmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyZsdDsvbGkmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cDovL2l0dW5lcy5hcHBsZS5jb20vZnIvYXBwL2FjdGlvbi1tb3ZpZS1meC9pZDQ4OTMyMTI1Mz9tdD04JnF1b3Q7Jmd0Ow0KQWN0aW9uIE1vdmllIEZYIGVzdCBkaXNwb25pYmxlIGljaSBzdXIgbCdBcHAgU3RvcmUgZ3JhdHVpdGVtZW50Jmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cDovL2l0dW5lcy5hcHBsZS5jb20vZnIvYXBwL2ltb3ZpZS9pZDM3NzI5ODE5Mz9tdD04JnF1b3Q7Jmd0Ow0KaU1vdmllIGVzdCBkaXNwb25pYmxlIGljaSBzdXIgbCdBcHAgU3RvcmUgcG91ciA0LDQ54oKsJmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cDovL2Nsay50cmFkZWRvdWJsZXIuY29tL2NsaWNrP3A9MjM3NTMmYW1wO2FtcDthPTY5ODE2OCZhbXA7YW1wO2c9MCZhbXA7YW1wO3RkX3BhcnRuZXJJZD0yMDAzJmFtcDthbXA7dXJsPWh0dHA6Ly9pdHVuZXMuYXBwbGUuY29tL2ZyL2FwcC9zaWxlbnQtZmlsbS1kaXJlY3Rvci9pZDMzNTE0ODQ1OD9tdD04JnF1b3Q7Jmd0Ow0KVmludGFnaW8gZXN0IGRpc3BvbmlibGUgaWNpIHN1ciBsJ0FwcCBTdG9yZSBwb3VyIDEsNznigqwmbHQ7L2EmZ3Q7Jmx0Oy9saSZndDsNCiZsdDsvdWwmZ3Q7DQombHQ7aDImZ3Q7TCdpUGhvbmUgYXUgcXVvdGlkaWVuJmx0Oy9oMiZndDsNCiZsdDtwJmd0O1VuZSBmb2lzIGFkb3B0w6ksIGwnaVBob25lIHZvdXMgc3VpdnJhIGF1IHF1b3RpZGllbi4gVG91cyBsZXMgdXRpbGlzYXRldXJzDQp2b3VzIGxlcyBkaXJvbnQuIFZvaWNpIHF1ZWxxdWVzIGFwcGxpcyDDoCBhdm9pciB0b3Vqb3VycyBzdXIgc29pIDombHQ7L3AmZ3Q7DQombHQ7cCZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9Eb3NzaWVyLWFwcGxpY2F0aW9ucy1pUGhvbmUtJTNBLVVuZS1qb3VybiVDMyVBOWUtZW4teC1hcHBsaWNhdGlvbnMtaVBob25lJnF1b3Q7Jmd0Ow0KJmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy9xdW90aWRpZW5fcy5qcGcmcXVvdDsgYWx0PSZxdW90O3F1b3RpZGllbi5qcGcmcXVvdDsgc3R5bGU9JnF1b3Q7ZGlzcGxheTpibG9jazsgbWFyZ2luOjAgYXV0bzsmcXVvdDsgLyZndDsmbHQ7L2EmZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvRG9zc2llci1hcHBsaWNhdGlvbnMtaVBob25lLSUzQS1VbmUtam91cm4lQzMlQTllLWVuLXgtYXBwbGljYXRpb25zLWlQaG9uZSZxdW90OyZndDsNClVuZSBqb3VybsOpZSBpUGhvbmUgY29tcGzDqHRlIGVuIGFwcGxpY2F0aW9ucyB1dGlsZXMgISZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDtwJmd0O21haXMgYXVzc2kgOiZsdDsvcCZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9Eb3NzaWVyLWFwcGxpY2F0aW9ucy1iYW5xdWVzLWZpbmFuY2VzLWlQaG9uZSZxdW90OyZndDtMZXMNCmFwcHMgZGUgdm9zIGJhbnF1ZXMgcG91ciBjb25zdWx0ZXIgZXQgZ8OpcmVyIHZvcyBjb21wdGVzIGVuIG1vYmlsaXTDqSZsdDsvYSZndDsmbHQ7L2xpJmd0Ow0KJmx0O2xpJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L2xpc3RlLWFwcGxpcy1pcGhvbmUtb3JhbmdlLXNmci1ib3V5Z3Vlcy1ib3Qtc29zaC1mcmVlJnF1b3Q7Jmd0Ow0KMjUgYXBwbGlzIHBvdXIgZW1iYXJxdWVyIGxlIGJ1cmVhdSBkYW5zIHZvdHJlIGlQaG9uZSZsdDsvYSZndDsmbHQ7L2xpJmd0Ow0KJmx0O2xpJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L2xpc3RlLWFwcGxpcy1pcGhvbmUtb3JhbmdlLXNmci1ib3V5Z3Vlcy1ib3Qtc29zaC1mcmVlJnF1b3Q7Jmd0Ow0KbGVzIDIwIHByaW5jaXBhbGVzIGFwcGxpcyBpUGhvbmUgZGUgdm9zIG9ww6lyYXRldXJzIG1vYmlsZXMmbHQ7L2EmZ3Q7Jmx0Oy9saSZndDsNCiZsdDsvdWwmZ3Q7DQombHQ7cCZndDtJbCBlc3QgZMOpasOgIHRlbXBzIGRlIHZvdXMgbGFpc3NlciByZXRvdXJuZXIgw6Agdm9zIGNhZGVhdXggbWFpcyBhdmFudCBkZSB2b3VzDQpxdWl0dGVyIHNhY2hleiBxdWUgbm90cmUgcsOpdHJvc3BlY3RpdmUgZGVzIGRvc3NpZXJzIGNvbnRpbnVlcmEgbGEgc2VtYWluZQ0KcHJvY2hhaW5lIGF2ZWMgdW5lIHNlY29uZGUgcGFydGllIC4uLiZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O0xlcyBwbHVzIHByZXNzw6lzIHJldHJvdXZlcm9udCAmbHQ7c3Ryb25nJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9wYWdlcy9kb3NzaWVycy1ldC1zZWxlY3Rpb24tYXBwbGljYXRpb25zLWlwaG9uZS1ldC1pcGFkJnF1b3Q7Jmd0O2wnaW50w6lncmFsaXTDqQ0KZGUgbm9zIGRvc3NpZXJzIHN1ciBjZXR0ZSBwYWdlIHF1aSBsZXVyIGVzdCBkw6lkacOpZSZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDslJSZsdDsvcCZndDsNCiZsdDtwJmd0O0VuIGF0dGVuZGFudCwgamUgdm91cyBzb3VoYWl0ZSAmbHQ7c3Ryb25nJmd0O3VuIGpveWV1eCBOb8OrbCZsdDsvc3Ryb25nJmd0OyBldCBzdXJ0b3V0IG5lDQpzb3lleiBwYXMgdHJvcCBzYWdlLi4uJmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvaWRlZXMtY2FkZWF1eC1ub2VsLWlwaG9uZS1pcG9kLXRvdWNoLWlwYWQmcXVvdDsmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy9ub2VsLTYwMC5qcGcmcXVvdDsgYWx0PSZxdW90O25vZWwtNjAwLmpwZyZxdW90OyBzdHlsZT0mcXVvdDtkaXNwbGF5OmJsb2NrOyBtYXJnaW46MCBhdXRvOyZxdW90OyAvJmd0OyZsdDsvYSZndDsmbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQo8L2Rlc2NyaXB0aW9uPg0KICAgIA0KICAgIA0KICAgIA0KICAgICAgICAgIDxjb21tZW50cz5odHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvbWVpbGxldXJzLWRvc3NpZXItYXBwLTIwMTItMSNjb21tZW50LWZvcm08L2NvbW1lbnRzPg0KICAgICAgPHdmdzpjb21tZW50Pmh0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9tZWlsbGV1cnMtZG9zc2llci1hcHAtMjAxMi0xI2NvbW1lbnQtZm9ybTwvd2Z3OmNvbW1lbnQ%DQogICAgICA8d2Z3OmNvbW1lbnRSc3M%aHR0cDovL3d3dy5pcGhvbi5mci9mZWVkL2F0b20vY29tbWVudHMvNzExMjcyPC93Znc6Y29tbWVudFJzcz4NCiAgICAgIDwvaXRlbT4NCiAgICANCiAgPGl0ZW0%DQogICAgPHRpdGxlPlByZW1pZXJzIHBhcyA6IGFjY2Vzc29pcmVzLCBhcHBsaWNhdGlvbnMgZXQgYXN0dWNlcywgdG91dCBjZSBxdSdpbCB2b3VzIGZhdXQgc3VyIGlQaG9uLmZyIGV0IFZJUGFkLmZyPC90aXRsZT4NCiAgICA8bGluaz5odHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvQWNjZXNzb2lyZXMtYXBwbGljYXRpb25zLWdyYXR1aXRlcy1ldC1hc3R1Y2VzLSUzQS10b3V0LWNlLXF1LWlsLXZvdXMtZmF1dC1lc3Qtc3VyLWlQaG9uLWZyPC9saW5rPg0KICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI%dXJuOm1kNTowNjcyM2M1ZjAyMmY1MGUxYWNmYWE1ODljZDE0ZWNlZTwvZ3VpZD4NCiAgICA8cHViRGF0ZT5UdWUsIDI1IERlYyAyMDEyIDE0OjI1OjAwICswMTAwPC9wdWJEYXRlPg0KICAgIDxkYzpjcmVhdG9yPmdyb2J1YnU8L2RjOmNyZWF0b3I%DQogICAgICAgIDxjYXRlZ29yeT5JbmZvcyBpUGhvbi5mcjwvY2F0ZWdvcnk%DQogICAgICAgIDxjYXRlZ29yeT5pUGhvbi5mcjwvY2F0ZWdvcnk%ICAgIA0KICAgIDxkZXNjcmlwdGlvbj4mbHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzL2lkZWVzLWNhZGVhdXgtbm9lbDJfcy5qcGcmcXVvdDsgYWx0PSZxdW90O2lkZWVzLWNhZGVhdXgtbm9lbDIuanBnJnF1b3Q7IHN0eWxlPSZxdW90O2Zsb2F0OmxlZnQ7IG1hcmdpbjogMCAxZW0gMWVtIDA7JnF1b3Q7IC8mZ3Q7IEplDQpzdWlzIHBlcnN1YWTDqSBxdWUsIGNldHRlIGFubsOpZSBlbmNvcmUsIGJlYXVjb3VwIGQnZW50cmUgdm91cyB2b3VzIG9udCBkw6ljb3V2ZXJ0DQphdSBwaWVkIGR1IHNhcGluIGxlIGlDYWRlYXUgcXUnaWxzIGF0dGVuZGFpZW50LiZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O0NlcnRhaW5zIGVudHJlbnQgcGV1dC3DqnRyZSBwb3VyIGxhIHByZW1pw6hyZSBmb2lzIGRhbnMgbCd1bml2ZXJzIEFwcGxlIGV0DQpub3VzIHJlbmRlbnQgdmlzaXRlIHBhciBsYSBtw6ptZSBvY2Nhc2lvbi4gTm91cyBsZXVyIHNvdWhhaXRvbnMgbGENCmJpZW52ZW51ZS4mbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtNYWludGVuYW50IHF1ZSB2b3VzIHRlbmV6IGVuIG1haW4gdm90cmUgY2FkZWF1IGZsYW1iYW50IG5ldWYsICZsdDtzdHJvbmcmZ3Q7ZGVzDQp0YXMgZGUgcXVlc3Rpb25zIGNvbW1lbmNlbnQgw6AgdmVuaXImbHQ7L3N0cm9uZyZndDsgOiBjb21tZW50IG5lIHBhcyBsJ2FiaW1lciwNCmF2ZWMgcXVvaSBsZSBwcm90w6lnZXIsIHF1ZWxsZXMgYXBwbGljYXRpb25zIGluc3RhbGxlciBldCBxdWVsbGVzIHNvbnQgbGVzDQphc3R1Y2VzIMOgIGNvbm5haXRyZSAuLi4mbHQ7L3AmZ3Q7DQombHQ7cCZndDtQYXMgZGUgc291Y2ksIHZvdXMgcG91cnJleiByZXRyb3V2ZXIgdG91dCBjZSBxdSdpbCB2b3VzIGZhdXQgc3VyIG5vcyBzaXRlcw0KJmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyJnF1b3Q7Jmd0O2lQaG9uLmZyJmx0Oy9hJmd0OyBldCAmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuVklQYWQuZnImcXVvdDsmZ3Q7VklQYWQuZnImbHQ7L2EmZ3Q7IGV0ICZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbmZyLmNvbSZxdW90OyZndDtmb3J1bSZsdDsvYSZndDssIHN1ciBsZXNxdWVscywgbm91cyBsJ2VzcMOpcm9ucywgdm91cyB2b3VzDQpzZW50aXJleiBjb21tZSBjaGV6IHZvdXMuJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Vm9pY2kgbGVzIHNlY3Rpb25zIMOgIGNvbnN1bHRlciBkJ3VyZ2VuY2UgOiZsdDsvcCZndDsgICAgJmx0O2gyJmd0O1Byb3TDqWdlciBzb24gaVBob25lIC8gaVBvZCZsdDsvaDImZ3Q7DQombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzL3Rlc3QtYXZpcy1jb3F1ZS1hbHUtaXBob25lLTUtcGFzLWNoZXJlLTRfcy5qcGcmcXVvdDsgYWx0PSZxdW90O3Rlc3QtYXZpcy1jb3F1ZS1hbHUtaXBob25lLTUtcGFzLWNoZXJlLTEuanBnJnF1b3Q7IHN0eWxlPSZxdW90O2Zsb2F0OnJpZ2h0OyBtYXJnaW46IDAgMCAxZW0gMWVtOyZxdW90OyB0aXRsZT0mcXVvdDt0ZXN0LWF2aXMtY29xdWUtYWx1LWlwaG9uZS01LXBhcy1jaGVyZS00LmpwZywgMjAxMSZxdW90OyAvJmd0OyBQb3VyIGwnaVBob25lLCBjb21tZQ0KcG91ciBsJ2lQb2QgdG91Y2gsIGlsIGV4aXN0ZSBiZWF1Y291cCBkZSBtb3llbnMgZGUgbGUgcHJvdMOpZ2VyLiBBdmVjIHJhYmF0LCBvdQ0Kc2FucywgZW4gcGxhc3RpcXVlIG91IG3Dqm1lIGVuIGJvaXMsIGxlcyBwcm90ZWN0aW9ucyBuZSBtYW5xdWVudCBwYXMgZXQgdG91dCBhdQ0KbG9uZyBkZSBsJ2FubsOpZSwgbm91cyB2b3VzIGZhaXNvbnMgcGFydCBkZXMgZGVybmnDqHJlcyBub3V2ZWF1dMOpcyA6Jmx0Oy9wJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyL2NhdGVnb3J5L0FjY2Vzc29pcmVzJnF1b3Q7Jmd0O1BvdXIgbGlyZSBvdQ0KcmVsaXJlIG5vcyBhcnRpY2xlcyBjb25jZXJuYW50IGxlcyBhY2Nlc3NvaXJlcyBwb3VyIGlQaG9uZSBvdSBpUG9kIHRvdWNoLCBpbA0Kdm91cyBzdWZmaXQgZGUgY2xpcXVlciBzdXIgY2UgbGllbiZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDssIHByw6hzIGRlIDEwMDAgYWNjZXNzb2lyZXMNCnN5bXBhcywgb3JpZ2luYXV4LCBjb25uZWN0w6lzIG91IGltcHJvYmFibGVzIHZvdXMgYXR0ZW5kZW50Jmx0Oy9saSZndDsNCiZsdDsvdWwmZ3Q7DQombHQ7cCZndDtMZSBwbHVzIHNvdXZlbnQgcG9zc2libGUsIG5vdXMgcsOpYWxpc29ucyDDqWdhbGVtZW50IGRlcyB0ZXN0cyBkJ2FjY2Vzc29pcmVzLA0KY2FyLCBpbCBuJ3kgYSByaWVuIGRlIG1pZXV4IHF1ZSBkJ2F2b2lyIGwnb2JqZXQgZW4gbWFpbiBwb3VyIHNhdm9pciBzaSBub3VzDQpwb3V2b25zIGxlIGNvbnNlaWxsZXIgb3UgbcOqbWUgbGUgZMOpY29uc2VpbGxlciZsdDsvcCZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDsmbHQ7c3Ryb25nJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9jYXRlZ29yeS9UZXN0LWFjY2Vzc29pcmVzLWlQaG9uZSZxdW90OyZndDtyZXRyb3V2ZXogdG91cyBub3MgdGVzdHMNCmQnYWNjZXNzb2lyZSBpY2kmbHQ7L2EmZ3Q7LCBpbCB5IGVuIGEgcHLDqHMgZGUgMTAwIMOgIHJlZMOpY291dnJpci4mbHQ7L3N0cm9uZyZndDsmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDtwJmd0O0V0IHBvdXIgY2V1eCBxdWkgb250IGV1IGxhIGNoYW5jZSBkJ2F2b2lyIGxlIGRlcm5pZXIgbsOpIGQnQXBwbGUsIHZvaWNpDQpxdWVscXVlcyB0ZXN0cyByw6ljZW50cyA6Jmx0Oy9wJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0O1Rlc3QgZGUgbGEgY29xdWUgaVBob25lIDUgJmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvVGVzdC1hdmlzLWNvcXVlLWlQaG9uZS01LVNHUC1MaW5lYXItTWV0YWwtQ3J5c3RhbC1VbmUtY29xdWUtY2xhc3NlLXBvdXItdm90cmUtaVBob25lLTUmcXVvdDsmZ3Q7DQpTR1AgTGluZWFyIE1ldGFsIENyeXN0YWwmbHQ7L2EmZ3Q7Jmx0Oy9saSZndDsNCiZsdDtsaSZndDtUZXN0IGNvcXVlIGlQaG9uZSA1ICZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L2NvcXVlLWFsdS1pcGhvbmUtNS1wYXMtY2hlcmUmcXVvdDsmZ3Q7ZG9zDQphbHVtaW5pdW0gw6AgLi4uIDQgZXVyb3MgUXVlIHZhdXQtZWxsZSA:Jmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7DQombHQ7bGkmZ3Q7TGUgdGVzdCBkJyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L3Rlc3QtYXZpcy1jb3F1ZS1wcm90ZWN0aW9uLWlwaG9uZS01LXRyYW5zcGFyZW50ZS1wYXMtY2hlcmUmcXVvdDsmZ3Q7dW5lDQpjb3F1ZSBpUGhvbmUgNSB0cmFuc3BhcmVudGUgcGV1IGNvdXRldXNlJmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7DQombHQ7bGkmZ3Q7TGUgdGVzdCBkJ3VuZSAmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9UZXN0LWF2aXMtYWNoYXQtcHJvdGVjdGlvbi1zbWFydC1jb3Zlci1pUGhvbmUtNSZxdW90OyZndDtwcm90ZWN0aW9uDQppUGhvbmUgNSB0eXBlIHNtYXJ0IGNvdmVyJmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7DQombHQ7bGkmZ3Q7bGUgdGVzdCBkZSBsYSBwcm90ZWN0aW9uICZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L3Rlc3QtYXZpcy1jb3F1ZS1vdHRlcmJveC1pcGhvbmUtNSZxdW90OyZndDtPdHRlcmJveCBDb21tdXRlcg0KaVBob25lIDUmbHQ7L2EmZ3Q7Jmx0Oy9saSZndDsNCiZsdDtsaSZndDtsZSB0ZXN0IGRlIGxhIHByb3RlY3Rpb24gJmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvdGVzdC1hdmlzLWV0dWktY29xdWUtaXBob25lLTUtb3R0ZXJib3gtZGVmZW5kZXImcXVvdDsmZ3Q7T3R0ZXJib3gNCkRlZmVuZGVyIGlQaG9uZSA1Jmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7DQombHQ7bGkmZ3Q7bGUgdGVzdCBkZSBsYSBwcm90ZWN0aW9uICZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L1Rlc3QtY29xdWUtaVBob25lLTUtU3dpdGNoZWFzeS1Ub25lcyZxdW90OyZndDtTd2l0Y2hFYXN5DQpUb25lcyBpUGhvbmUgNSZsdDsvYSZndDsmbHQ7L2xpJmd0Ow0KJmx0O2xpJmd0O3Rlc3QgZCd1bmUgdml0cmUgZGUgcHJvdGVjdGlvbiA6ICZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L1Rlc3QtYXZpcy1wcm90ZWN0aW9uLWVjcmFuLWVuLXZlcnJlLWlwaG9uZS00LTRTLTUtR2xhcy10LXRSLXBvdXItaVBob25lLTUmcXVvdDsmZ3Q7DQpsYSBHbGFzIHRSIGlQaG9uZSA1Jmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7DQombHQ7bGkmZ3Q7dGVzdCBkZSAmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvcG9zdC90ZXN0LWF2aXMtZXR1aS1jdWlyLWhvdXNzZS1ub3JldmUtaXBob25lLTUmcXVvdDsmZ3Q7bCfDqXR1aQ0KY3VpciBpUGhvbmUgNSBOb3JldmUmbHQ7L2EmZ3Q7Jmx0Oy9saSZndDsNCiZsdDsvdWwmZ3Q7DQombHQ7cCZndDtPbiB2b3VzIGEgbcOqbWUgZmFpdCAmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly9hc3RvcmUuYW1hem9uLmZyL2lwaG9uZnIwMy0yMSZxdW90OyZndDt1bmUNCnPDqWxlY3Rpb24gZCdhY2Nlc3NvaXJlcyBkYW5zIG5vdHJlIGdhbGVyaWUgdmlydHVlbGxlIGlQaG9uZSZsdDsvYSZndDsgZXQgJmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vYXN0b3JlLmFtYXpvbi5mci92aXBhZC0yMSZxdW90OyZndDtpUGFkJmx0Oy9hJmd0Oy4mbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDsmbHQ7YnIgLyZndDsNCk3Dqm1lIGJpZW4gcHJvdMOpZ8OpLCBpbCB2YSBmYWxsb2lyIHZvdXMgJmx0O3N0cm9uZyZndDt0cm91dmVyIGRlcyBhcHBsaWNhdGlvbnMmbHQ7L3N0cm9uZyZndDsNCmV0IGRlcyBqZXV4IHBvdXIgY29tbWVuY2VyIMOgIHByb2ZpdGVyIGRlcyB2b3RyZSBub3V2ZWF1IGNhZGVhdS4mbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7aDImZ3Q7VHJvdXZlciBsZXMgYm9ubmVzIGFwcGxpY2F0aW9ucyZsdDsvaDImZ3Q7DQombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzL3NvY2lldGUtMV9zLmpwZyZxdW90OyBhbHQ9JnF1b3Q7c29jaWV0ZS0xLmpwZyZxdW90OyBzdHlsZT0mcXVvdDtmbG9hdDpyaWdodDsgbWFyZ2luOiAwIDAgMWVtIDFlbTsmcXVvdDsgLyZndDsgUG91ciBjZWxhLCBub3VzIHZvdXMgcHJvcG9zb25zIGNoYXF1ZQ0Kc29pciwgZGltYW5jaGUgZXQgam91cnMgZsOpcmnDqXMgY29tcHJpcywgdW5lIHPDqWxlY3Rpb24gZGVzIG1laWxsZXVyZXMNCmFwcGxpY2F0aW9ucyBncmF0dWl0ZXMgdGVtcG9yYWlyZW1lbnQuIERlIGNldHRlIG1hbmnDqHJlIHZvdXMgcG91dmV6IHZvdXMgZmFpcmUNCnBsYWlzaXIgc2FucyBkw6lwZW5zZXIgdW4gY2VudGltZS4gTm91cyB2b3VzIGF2ZXJ0aXJvbnMgw6lnYWxlbWVudCBkZSB0b3VzIGxlcw0KYm9ucyBwbGFucyB0b3V0IGF1IGxvbmcgZGUgbCdhbm7DqWUgKGRhbnMgJmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L0FjY2Vzc29pcmVzLWFwcGxpY2F0aW9ucy1ncmF0dWl0ZXMtZXQtYXN0dWNlcy0lM0EtdG91dC1jZS1xdS1pbC12b3VzLWZhdXQtZXN0LXN1ci1pUGhvbi1mciNjb21tZW50LWZvcm08L2NvbW1lbnRzPg0KICAgICAgPHdmdzpjb21tZW50Pmh0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9BY2Nlc3NvaXJlcy1hcHBsaWNhdGlvbnMtZ3JhdHVpdGVzLWV0LWFzdHVjZXMtJTNBLXRvdXQtY2UtcXUtaWwtdm91cy1mYXV0LWVzdC1zdXItaVBob24tZnIjY29tbWVudC1mb3JtPC93Znc6Y29tbWVudD4NCiAgICAgIDx3Znc6Y29tbWVudFJzcz5odHRwOi8vd3d3LmlwaG9uLmZyL2ZlZWQvYXRvbS9jb21tZW50cy83MTIxNTM8L3dmdzpjb21tZW50UnNzPg0KICAgICAgPC9pdGVtPg0KICAgIA0KICA8aXRlbT4NCiAgICA8dGl0bGU%VW4gTm:Dq2wgZW4gZm9saWUgYXZlYyB1bmUgYXBwcGxpIGlQaG9uZSBxdWkgdm91cyBvZmZyZSBkZXMgY2FkZWF1eCB0b3VzIGxlcyBqb3VycyBqdXNxdSfDoCBsYSBmaW4gZGUgbCdhbm7DqWU8L3RpdGxlPg0KICAgIDxsaW5rPmh0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9jYWRlYXV4LW5vZWwtYXBwbGlzLWlwaG9uZTwvbGluaz4NCiAgICA8Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPnVybjptZDU6NDY2OGQxYmE5NjFiYTc3MzY5OWU5MDhlMDgyY2U2OTc8L2d1aWQ%DQogICAgPHB1YkRhdGU%VHVlLCAyNSBEZWMgMjAxMiAxMToyMDowMCArMDEwMDwvcHViRGF0ZT4NCiAgICA8ZGM6Y3JlYXRvcj5pU3Q8L2RjOmNyZWF0b3I%DQogICAgICAgIDxjYXRlZ29yeT5BcHAgaVBob25lIGV0IGlQb2QgVG91Y2ggKEFwcCBTdG9yZSk8L2NhdGVnb3J5Pg0KICAgICAgICA8Y2F0ZWdvcnk%YXBwLWlwaG9uZTwvY2F0ZWdvcnk%PGNhdGVnb3J5PmFwcGxpcy1ncmF0dWl0ZXM8L2NhdGVnb3J5PjxjYXRlZ29yeT5qZXUtaXBob25lPC9jYXRlZ29yeT48Y2F0ZWdvcnk%dG9wdXNoczwvY2F0ZWdvcnk%ICAgIA0KICAgIDxkZXNjcmlwdGlvbj4mbHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzL2NhZGVhdXgtbm9lbC1pcGhvbmUtMV9zLmpwZyZxdW90OyBhbHQ9JnF1b3Q7Y2FkZWF1eC1ub2VsLWlwaG9uZS0xLmpwZyZxdW90OyBzdHlsZT0mcXVvdDtmbG9hdDpsZWZ0OyBtYXJnaW46IDAgMWVtIDFlbSAwOyZxdW90OyB0aXRsZT0mcXVvdDtjYWRlYXV4LW5vZWwtaXBob25lLTEuanBnLCAyMDExJnF1b3Q7IC8mZ3Q7QXZlYyBsYSBww6lyaW9kZSBkZSBub8OrbCBvbiBhcHByw6ljaWUgbGVzDQpjYWRlYXV4IGV0IG9uIGFpbWUgZW4gcmVjZXZvaXIgISZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O0MnZXN0IGp1c3RlbWVudCBjZSBxdWUgcHJvcG9zZSBsJ2FwcGxpY2F0aW9uIE5vw6tsIGVuIGZvbGllLCBxdWkgdm91cyBvZmZyZQ0KZGVwdWlzIHF1ZWxxdWVzIGpvdXJzICZsdDtzdHJvbmcmZ3Q7ZGVzIG1pbGxpZXJzIGRlIGNhZGVhdXggdG91cyBsZXMNCmpvdXJzJmx0Oy9zdHJvbmcmZ3Q7IDogdm95YWdlcywgdGFibGV0dGVzLCBzbWFydHBob25lcyBldCBkZXMgZXhjZWxsZW50ZXMgYXBwcw0KcGF5YW50ZXMuIEV0IGJvbm5lIG5vdXZlbGxlLCBjZSBuJ2VzdCBwYXMgcGFyY2UgcXVlIGwnb24gdmllbnQgZGUgcGFzc2VyIG5vw6tsDQpxdWUgYydlc3QgZmluaS4gRW4gZWZmZXQsIGxlcyBjYWRlYXV4IHNlIHBvdXJzdWl2ZW50IGF1IG1vaW5zIGp1c3F1J2F1IDMxDQpkw6ljZW1icmUsIGxlIG1laWxsZXVyIGVzdCDDoCB2ZW5pciAhJmx0Oy9wJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL2FwcHRyay5hNC50bC9hcGkvcmVkaXJlY3QvR2lmdHNfNHUyNDEyMjAxMi9pUGhvbi9lMzRjNmFkNDNiNGU3NzE2NmJkMWNjYzkzOTU5ZmQxNyZxdW90OyZndDsNCkwnYXBwbGljYXRpb24gTm:Dq2wgZW4gZm9saWUgZXN0IGdyYXR1aXRlIGljaSBzdXIgbCdBcHAgU3RvcmUmbHQ7L2EmZ3Q7Jmx0Oy9saSZndDsNCiZsdDsvdWwmZ3Q7DQombHQ7cCZndDtEw6hzIGxlIGxhbmNlbWVudCwgYydlc3QgYW1iaWFuY2UgZGUgbm:Dq2wgYXZlYyB1biBqb2xpIGTDqWNvcnMgZGUgc2Fpc29uLg0KRW5zdWl0ZSwgY2hhcXVlIGpvdXIsIHVuIG5vdXZlYXUgamV1IGVzdCBwcm9wb3PDqSwgbCdhcHBsaSB2b3VzIGVtbcOobmUNCmRpcmVjdGVtZW50IMOgIGxhIGRhdGUgZXQgdm91cyBwcmVuZXogYWxvcnMgY29ubmFpc3NhbmNlIGRlcyBjYWRlYXV4DQpwcm9wb3PDqXMuJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7RXQgZW4gY2Ugam91ciBkZSBub8OrbCwgbGVzIGTDqXZlbG9wcGV1cnMgb250IG1pcyBsZXMgYm91Y2jDqWVzIGRvdWJsZXMgYXZlYw0KJmx0O3N0cm9uZyZndDsxIGxvdCBpUGhvbmUgNSArIGlQYWQgKyBpUGFkIG1pbmkmbHQ7L3N0cm9uZyZndDsgZXQgJmx0O3N0cm9uZyZndDsyIDAwMA0KYXBwbGljYXRpb25zIFNraSBTYWZhcmkmbHQ7L3N0cm9uZyZndDsgZG9udCAxIDAwMCBwb3VyIGxlcyBwbHVzIHJhcGlkZXMuJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0OyAgICAmbHQ7cCZndDtJbCBzdWZmaXQgZG9uYyBkZSBjb25zdWx0ZXIgbCdhcHBsaSB1bmUgZm9pcyBwYXIgam91ciBwb3VyIGNvbmNvdXJpci4gTWlldXgNCmVuY29yZSwgbCdhcHBsaSB2b3VzIHByw6l2aWVudCBldCBhaW5zaSB2b3VzIGF2ZXogbGEgcG9zc2liaWxpdMOpIGQnw6p0cmUgZGFucyBsZXMNCnByZW1pZXJzLCBjZSBxdWkgZ2FyYW50aXQgY2VydGFpbnMgY2FkZWF1eCBub3RhbW1lbnQgYXBwbGlzIHBvdXIgbGVzIGpldXggZGUNCnJhcGlkaXTDqS4mbHQ7L3AmZ3Q7DQombHQ7cCZndDsmbHQ7YSBocmVmPSZxdW90O2Fzc2V0cy9mZWVkc19pbWFnZXMvY2FkZWF1eC1ub2VsLWlwaG9uZS0yLmpwZyZxdW90OyZndDsmbHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzL2NhZGVhdXgtbm9lbC1pcGhvbmUtMl9tLmpwZyZxdW90OyBhbHQ9JnF1b3Q7Y2FkZWF1eC1ub2VsLWlwaG9uZS0yLmpwZyZxdW90OyBzdHlsZT0mcXVvdDtkaXNwbGF5OmJsb2NrOyBtYXJnaW46MCBhdXRvOyZxdW90OyB0aXRsZT0mcXVvdDtjYWRlYXV4LW5vZWwtaXBob25lLTIuanBnLCAyMDExJnF1b3Q7IC8mZ3Q7Jmx0Oy9hJmd0OyZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0O1BvdXIgdm91cyBkb25uZXIgdW5lIGlkw6llIGRlIGNlIHF1J2lsIGVzdCBwb3NzaWJsZSBkZSBnYWduZXIsIHNhY2hleiBxdWUNCnBhcm1pIGxlcyBjYWRlYXV4IGTDqWrDoCBvZmZlcnRzIGF1eCBxdWVscXVlcyBwbHVzIGRlIDE2IDAwMCBoZXVyZXV4IGdhZ25hbnRzDQpkZXB1aXMgcXVlIGNlbGEgYSBjb21tZW5jw6kgaWwgeSBhIHF1ZWxxdWVzIGpvdXJzLCBpbCB5IGEgbGVzIGFwcHMgQW5ncnkgQmlyZHMNClN0YXIgV2FycywgRklGQTEzLCBDdXQgVGhlIFJvcGUsIEJhZCBQaWdnaWVzLCBGcnVpdCBOaW5qYSwgVGV0cmlzLCBUaW55IFdpbmdzLA0KQW1hemluZyBBbGV4LCBUaGUgQW1hemluZyBTcGlkZXJtYW4uLi4mbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtNYWlzIGF1c3NpIHVuIHZveWFnZSDDoCBEdWJhw68gKHZhbGV1ciBkZSAyLjAwMOKCrCksIHVuIHZveWFnZSBhdXggQ2FyYcOvYmVzLCB1bg0KV2Vlay1FbmQgUHJlc3RpZ2Ugw6AgTG9uZHJlcywgdW5lIFTDqWzDqXZpc2lvbiBIRCwgdW5lIFN0YXRpb24gZCdhY2N1ZWlsIFBoaWxpcHMNCmV0IGNlbGEgY29udGludWUgISZsdDticiAvJmd0OyZsdDsvcCZndDsNCiZsdDtwJmd0OyZsdDthIGhyZWY9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy9jYWRlYXV4LW5vZWwtaXBob25lLTMuanBnJnF1b3Q7Jmd0OyZsdDtpbWcgc3JjPSZxdW90O2Fzc2V0cy9mZWVkc19pbWFnZXMvY2FkZWF1eC1ub2VsLWlwaG9uZS0zX20uanBnJnF1b3Q7IGFsdD0mcXVvdDtjYWRlYXV4LW5vZWwtaXBob25lLTMuanBnJnF1b3Q7IHN0eWxlPSZxdW90O2Rpc3BsYXk6YmxvY2s7IG1hcmdpbjowIGF1dG87JnF1b3Q7IHRpdGxlPSZxdW90O2NhZGVhdXgtbm9lbC1pcGhvbmUtMy5qcGcsIDIwMTEmcXVvdDsgLyZndDsmbHQ7L2EmZ3Q7Jmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7QWxvcnMgZMOpcMOqY2hleiB2b3VzLCBub8OrbCBzZSBwb3Vyc3VpdCBhdmVjIHVuZSBhcHBsaSBub3TDqWUgNCDDqXRvaWxlcyBzdXINCmwnQXBwIFN0b3JlIDombHQ7L3AmZ3Q7DQombHQ7dWwmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vYXBwdHJrLmE0LnRsL2FwaS9yZWRpcmVjdC9HaWZ0c180dTI0MTIyMDEyL2lQaG9uL2UzNGM2YWQ0M2I0ZTc3MTY2YmQxY2NjOTM5NTlmZDE3JnF1b3Q7Jmd0Ow0KTCdhcHBsaWNhdGlvbiBOb8OrbCBlbiBmb2xpZSBlc3QgZ3JhdHVpdGUgaWNpIHN1ciBsJ0FwcCBTdG9yZSZsdDsvYSZndDsmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDtwJmd0OyZsdDticiAvJmd0Ow0KJmx0O2VtJmd0O0FydGljbGUgcsOpYWxpc8OpIHBhciBsYSByw6lkYWN0aW9uIGRlIGlQaG9uLmZyLCBzcG9uc29yaXPDqSBwYXINCkFkNFNjcmVlbiZsdDsvZW0mZ3Q7Jmx0O2JyIC8mZ3Q7DQombHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQo8L2Rlc2NyaXB0aW9uPg0KICAgIA0KICAgIA0KICAgIA0KICAgICAgPC9pdGVtPg0KICAgIA0KICA8aXRlbT4NCiAgICA8dGl0bGU%aUNhZGVhdXggID8gUmFjb250ZXotbm91cyB2b3RyZSBub8OrbCBpUGhvbmUgaVBvZCwgaVBhZCAuLi4gb3UgYXV0cmUgICE8L3RpdGxlPg0KICAgIDxsaW5rPmh0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9jYWRlYXV4LW5vZWwtaXBob25lLWlwb2QtdG91Y2gtaXBhZDwvbGluaz4NCiAgICA8Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPnVybjptZDU6OWFhOTM3Yzc5MTNmZjc1NzM3MjIyYmJiNGM4YWE1ODg8L2d1aWQ%DQogICAgPHB1YkRhdGU%VHVlLCAyNSBEZWMgMjAxMiAwOTozMDowMCArMDEwMDwvcHViRGF0ZT4NCiAgICA8ZGM6Y3JlYXRvcj5ncm9idWJ1PC9kYzpjcmVhdG9yPg0KICAgICAgICA8Y2F0ZWdvcnk%QWN0dWFsaXTDqSBldCBhdmlzIGlQaG9uZTwvY2F0ZWdvcnk%DQogICAgICAgIDxjYXRlZ29yeT5ub2VsPC9jYXRlZ29yeT4gICAgDQogICAgPGRlc2NyaXB0aW9uPiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2Fzc2V0cy9mZWVkc19pbWFnZXMvYXBwbGUtbm9lbC0xX3QuanBnJnF1b3Q7IGFsdD0mcXVvdDthcHBsZS1ub2VsLTEuanBnJnF1b3Q7IHN0eWxlPSZxdW90O2Zsb2F0OmxlZnQ7IG1hcmdpbjogMCAxZW0gMWVtIDA7JnF1b3Q7IC8mZ3Q7IENhIHkgZXN0LCBsZSB2aWVpbCBob21tZSBlbiByb3VnZSDDoA0KZW5jb3JlIHLDqXVzc2kgc29uIHRvdXIgZGUgcGFzc2UtcGFzc2UgZXQgw6AgZMOpcG9zw6kgYXUgcGllZCBkdSBzYXBpbiBpbGx1bWluw6kgbGVzDQpjYWRlYXV4IGRvbnQgdm91cyByw6p2aWV6IGRlcHVpcyBkZXMgc2VtYWluZXMuJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Q29tbWUgdm91cyBhdmV6IMOpdMOpIGJpZW4gc2FnZXMsIG9uIGVzcMOocmUgcXVlICZsdDtzdHJvbmcmZ3Q7bGUgUMOocmUgTm:Dqmwgdm91cyBhDQpnw6J0w6kgZW4gaUNhZGVhdXgmbHQ7L3N0cm9uZyZndDsuIFNpIGMnZXN0IHZvdHJlIHByZW1pw6hyZSB2aXNpdGUgaWNpLCBhbG9ycyBub3VzIHZvdXMNCnNvdWhhaXRvbnMgbGEgYmllbnZlbnVlLCB0b3V0ZSBsYSBqb3VybsOpZSwgdm91cyB0cm91dmVyZXogZGVzIGFydGljbGVzIHBvdXINCnByb2ZpdGVyIGF1IG1pZXV4IGRlIHZvdHJlIG5vdXZlbGxlIG1hY2hpbmUgOiZsdDticiAvJmd0OyZsdDsvcCZndDsgICAgJmx0O3AmZ3Q7U2kgdm91cyBkw6lidXRleiBhbG9ycyBuJ2jDqXNpdGV6IHBhcyDDoCBqZXRlciB1biBvZWlsIMOgICZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9jYXRlZ29yeS9UcnVjcy1ldC1hc3R1Y2VzLWlQaG9uZSZxdW90OyZndDtub3MgdHV0b3MgcG91ciBiaWVuDQp1dGlsaXNlciB2b3RyZSBtYWNoaW5lJmx0Oy9hJmd0Oy4mbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtFdCBwb3VyIG5lIHBhcyBtYW5xdWVyIGxlcyBwcm9jaGFpbnMsIG4nb3VibGlleiBwYXMgZCdpbnN0YWxsZXINCiZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cDovL2l0dW5lcy5hcHBsZS5jb20vZnIvYXBwL2lkMzEzNTU5OTI2P210PTgmcXVvdDsmZ3Q7DQpub3RyZSBhcHBsaWNhdGlvbiBkaXNwb25pYmxlIGdyYXR1aXRlbWVudCBpY2kgc3VyIGwnQXBwDQpTdG9yZSZsdDsvYSZndDsuJmx0Oy9zdHJvbmcmZ3Q7Jmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy9hcHBsZS1ub2VsLTFfcy5qcGcmcXVvdDsgYWx0PSZxdW90O2FwcGxlLW5vZWwtMS5qcGcmcXVvdDsgc3R5bGU9JnF1b3Q7ZGlzcGxheTpibG9jazsgbWFyZ2luOjAgYXV0bzsmcXVvdDsgLyZndDsmbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtCaWVuIMOpdmlkZW1tZW50LCBub3VzIHNlcm9ucyAmbHQ7c3Ryb25nJmd0O3JhdmlzIGRlIGxpcmUgZGVzIGTDqXRhaWxzIHN1ciB2b3MNCmNhZGVhdXggaVBob25lLCBpUG9kIHRvdWNoLCBpUGFkIG91IGF1dHJlcyAoISkgZGFucyBsZXMgY29tbWVudGFpcmVzJmx0Oy9zdHJvbmcmZ3Q7DQo7LSkmbHQ7YnIgLyZndDsNCiZsdDtzdHJvbmcmZ3Q7Qm9ubmVzIGbDqnRlcyDDoCB0b3V0ZXMgZXQgdG91cyBzdXJ0b3V0ICEmbHQ7L3N0cm9uZyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtFdCBwb3VyIHByb2ZpdGVyIGRlIHZvdHJlIG1hY2hpbmUgZmxhbWJhbnQgbmV1dmUgOiZsdDsvcCZndDsNCiZsdDtkaXYgc3R5bGU9JnF1b3Q7dGV4dC1hbGlnbjogY2VudGVyJnF1b3Q7Jmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L1Byb21vLWRlLU5vJUMzJUFCbCZxdW90OyZndDsmbHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzL3Byb21vLTMuanBnJnF1b3Q7IGFsdD0mcXVvdDtwcm9tb3MgYXBwbGlzIGlQaG9uZSwgaVBvZCB0b3VjaCBpUGFkJnF1b3Q7IC8mZ3Q7Jmx0Oy9hJmd0OyZsdDsvZGl2Jmd0Ow0KPC9kZXNjcmlwdGlvbj4NCiAgICANCiAgICANCiAgICANCiAgICAgICAgICA8Y29tbWVudHM%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L2NhZGVhdXgtbm9lbC1pcGhvbmUtaXBvZC10b3VjaC1pcGFkI2NvbW1lbnQtZm9ybTwvY29tbWVudHM%DQogICAgICA8d2Z3OmNvbW1lbnQ%aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L2NhZGVhdXgtbm9lbC1pcGhvbmUtaXBvZC10b3VjaC1pcGFkI2NvbW1lbnQtZm9ybTwvd2Z3OmNvbW1lbnQ%DQogICAgICA8d2Z3OmNvbW1lbnRSc3M%aHR0cDovL3d3dy5pcGhvbi5mci9mZWVkL2F0b20vY29tbWVudHMvNzExMjY3PC93Znc6Y29tbWVudFJzcz4NCiAgICAgIDwvaXRlbT4NCiAgICANCiAgPGl0ZW0%DQogICAgPHRpdGxlPkp1c3RlIGF2YW50IGxlIHLDqXZlaWxsb24gZGUgTm:Dq2wgOiBsZXMgamV1eCBldCBhcHBzIGlQaG9uZSBwb25jdHVlbGxlbWVudCBncmF0dWl0ZXMgc29udCBsaXZyw6lzIGF2ZWMgdW4gcGV1IGQnYXZhbmNlICE8L3RpdGxlPg0KICAgIDxsaW5rPmh0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9KdXN0ZS1hdmFudC1sZS1yJUMzJUE5dmVpbGxvbi1kZS1ubyVDMyVBQmwtJTNBLWxlcy1qZXV4LWV0LWFwcHMtaVBob25lLXBvbmN0dWVsbGVtZW50LWdyYXR1aXRlcy1zb250LWxpdnIlQzMlQTlzLXVuLXBldS1lbi1hdmFuY2UtJTIxPC9saW5rPg0KICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI%dXJuOm1kNTpjOWVhYzY0Y2M4YmVlMjliYzNlYTMwNmUzYjMxMDMxMzwvZ3VpZD4NCiAgICA8cHViRGF0ZT5Nb24sIDI0IERlYyAyMDEyIDE2OjE2OjAwICswMTAwPC9wdWJEYXRlPg0KICAgIDxkYzpjcmVhdG9yPmdyb2J1YnU8L2RjOmNyZWF0b3I%DQogICAgICAgIDxjYXRlZ29yeT5BcHBzIGdyYXR1aXRlcywgYmFpc3NlcyBkZSBwcml4LCBib25uZXMgYWZmYWlyZXM8L2NhdGVnb3J5Pg0KICAgICAgICA8Y2F0ZWdvcnk%QXBwIEdyYXR1aXRlczwvY2F0ZWdvcnk%PGNhdGVnb3J5PkFwcFN0b3JlPC9jYXRlZ29yeT48Y2F0ZWdvcnk%Ym9ucyBwbGFucyBhcHAgaVBob25lPC9jYXRlZ29yeT48Y2F0ZWdvcnk%RnJlZUFwcEFEYXk8L2NhdGVnb3J5PjxjYXRlZ29yeT5qZXV4IGlQaG9uZTwvY2F0ZWdvcnk%PGNhdGVnb3J5PnByb21vcyBBcHAgU3RvcmU8L2NhdGVnb3J5PjxjYXRlZ29yeT50b3B1c2g8L2NhdGVnb3J5PiAgICANCiAgICA8ZGVzY3JpcHRpb24%Jmx0O3AmZ3Q7Tm91cyB2b3VzIHNvdWhhaXRvbnMgdW4gJmx0O3N0cm9uZyZndDtKT1lFVVggTk9FTCBBIFRPVVMmbHQ7L3N0cm9uZyZndDsgISBQbGVpbiBkZQ0KaUNhZGVhdXgsIGRlcyBmw6p0ZXMgc29tcHR1ZXVzZXMsIGRlcyBhZ2FwZXMgZGUgcsOqdmVzLCBicmVmIC4uLiBwcm9maXRleiBlbiBiaWVuDQpldCDDoCBkZW1haW4gYXZlYyBsZXMgbm91dmVhdXggaWpvdWpvdXMgZmxhbWJhbnRzIG5ldWYmbHQ7YnIgLyZndDsNCiZsdDticiAvJmd0OyZsdDsvcCZndDsNCg0KDQombHQ7aDImZ3Q7QSBub3RlciZsdDsvaDImZ3Q7DQombHQ7dWwmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O3N0cm9uZyZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9zb3R2LW1pc2UtYS1qb3VyLXNvY2lhbGUmcXVvdDsmZ3Q7c29UViwNCmxlIHByb2dyYW1tZSBUViBpUGhvbmUgZXQgaVBhZCBkZXZpZW50IHNvY2lhbCBldCBlbmNvcmUgcGx1cyBjb21wbGV0IGF2ZWMgc2VzDQpkZXJuacOocmVzIG1pc2VzIMOgIGpvdXImbHQ7L2EmZ3Q7Jmx0Oy9zdHJvbmcmZ3Q7Jmx0Oy9saSZndDsNCiZsdDtsaSZndDsmbHQ7c3Ryb25nJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L2ZsaXBzaWRlLWNvcXVlLW1hbmV0dGUtYXBwbGUmcXVvdDsmZ3Q7RmxpcFNpZGUsIHVuZSBjb3F1ZQ0KbWFuZXR0ZSBwb3VyIGlQaG9uZSBzb3V0ZW51ZSBwYXIgQXBwbGUgPyAodmlkZW8pJmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyZsdDsvbGkmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O3N0cm9uZyZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cudmlwYWQuZnIvcG9zdC92aWRlby1tYWdpZS1ub2VsLWlwYWQmcXVvdDsmZ3Q7UGFzc2V6IHVuDQpOw7ZlbCBtYWdpcXVlIGF2ZWMgdm90cmUgaVBhZCAodmlkZW8pJmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyZsdDsvbGkmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O3N0cm9uZyZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9Qcm9tby1kZS1ObyVDMyVBYmwmcXVvdDsmZ3Q7UHJvbW9zIGRlDQpOb8OrbCA6IHBsdXMgZGUgMTAwIGFwcGxpY2F0aW9ucyBpUGhvbmUgZXQgaVBhZCBlbiBwcm9tbyZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsNCiA6IG1pc2Ugw6Agam91ciA6IGFqb3V0IGRlIDIyIG5vdXZlbGxlcyBhcHBsaXMmbHQ7L2xpJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvaWRlZXMtY2FkZWF1eC1ub2VsLWlwaG9uZS1pcG9kLXRvdWNoLWlwYWQmcXVvdDsmZ3Q7UG91cg0Kbm:Dq2wgOiA4MCBpZMOpZXMgY2FkZWF1eCBkZSA0IMOgIDExMDAgZXVyb3MmbHQ7L2EmZ3Q7Jmx0Oy9zdHJvbmcmZ3Q7ICA6IHBvdXIgb2ZmcmlyDQrDoCB1biB1dGlsaXNhdGV1cnMgZCdpUGhvbmUsZCAnaVBhZCBldCBkJ2lQb2QgdG91Y2ggLi4uIE91IHBvdXIgc2UgZmFpcmUNCnBsYWlzaXIgISZsdDsvbGkmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O3N0cm9uZyZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9Eb3NzaWVyLWFwcC1pUGhvbmUtYXBwbGlzLWJ1cmVhdXRpcXVlLWlQaG9uZSZxdW90OyZndDtEb3NzaWVyDQphcHAgaVBob25lIDogUGx1cyBkZSAzMCBhcHBsaXMgcHJhdGlxdWVzIGxvcnNxdSdvbiBxdWl0dGUgbGUgYnVyZWF1IGV0IGxhDQptYWlzb24mbHQ7L2EmZ3Q7Jmx0Oy9zdHJvbmcmZ3Q7Jmx0Oy9saSZndDsNCiZsdDsvdWwmZ3Q7DQombHQ7aDImZ3Q7QmFpc3NlcyBkZSBwcml4IHBvbmN0dWVsbGVzIGFwcCBpUGhvbmUgZXQgaVBvZCB0b3VjaCZsdDsvaDImZ3Q7DQombHQ7dWwmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O3N0cm9uZyZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9Qcm9tby1kZS1ObyVDMyVBYmwmcXVvdDsmZ3Q7UHJvbW9zIGRlDQpOb8OrbCA6IHBsdXMgZGUgMTAwIGFwcGxpY2F0aW9ucyBpUGhvbmUgZXQgaVBhZCBlbiBwcm9tbyZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDtkaXYgc3R5bGU9JnF1b3Q7dGV4dC1hbGlnbjogY2VudGVyJnF1b3Q7Jmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy5pcGhvbi5mci9wb3N0L1Byb21vLWRlLU5vJUMzJUFCbCZxdW90OyZndDsmbHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzL3Byb21vLTMuanBnJnF1b3Q7IGFsdD0mcXVvdDtwcm9tb3MgYXBwbGlzIGlQaG9uZSwgaVBvZCB0b3VjaCBpUGFkJnF1b3Q7IC8mZ3Q7Jmx0Oy9hJmd0OyZsdDsvZGl2Jmd0Ow0KJmx0O3AmZ3Q7Jmx0O2JyIC8mZ3Q7DQpQbHVzaWV1cnMgYXBwbGljYXRpb25zIGdyYXR1aXRlcyBvbnQgw6l0w6kgYWpvdXTDqWVzIGRhbnMgbGEgam91cm7DqWUgJmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyLyNBcHBFdFByb21vcyZxdW90OyZndDvDoCBub3RyZSBlc3BhY2UgcHJvbW90aW9uIHBlcm1hbmVudCZsdDsvYSZndDsgc2l0dcOpDQpkYW5zIGxhIGNvbG9ubmUgZGUgZHJvaXRlIGRlIGlQaG9uLmZyLCBtZXJjaSDDoCBjZXV4IHF1aSBub3VzIGxlcw0Kc2lnbmFsZW50ICEgVm9pY2kgbGVzIGFwcGxpY2F0aW9ucyBldCBqZXV4IHBhc3PDqXMgZW4gZ3JhdHVpdCByw6ljZW1tZW50IGV0DQombHQ7c3Ryb25nJmd0O3BvdXIgdW5lIGR1csOpZSBsaW1pdMOpZSZsdDsvc3Ryb25nJmd0OyAuIFBlbnNleiDDoCAmbHQ7c3Ryb25nJmd0O3bDqXJpZmllciBsYSBncmF0dWl0w6kNCmxvcnMgZHUgdMOpbMOpY2hhcmdlbWVudCZsdDsvc3Ryb25nJmd0OyAhJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O2gyJmd0O0xlcyBhcHBsaWNhdGlvbnMgaVBob25lIGV0IGlQb2QgVG91Y2ggZ3JhdHVpdGVzDQp0ZW1wb3JhaXJlbWVudCA6Jmx0O2JyIC8mZ3Q7Jmx0Oy9oMiZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDsmbHQ7c3Ryb25nJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL2Nsay50cmFkZWRvdWJsZXIuY29tL2NsaWNrP3A9MjM3NTMmYW1wO2FtcDthPTY5ODE2OCZhbXA7YW1wO2c9MCZhbXA7YW1wO3RkX3BhcnRuZXJJZD0yMDAzJmFtcDthbXA7dXJsPWh0dHBzOi8vaXR1bmVzLmFwcGxlLmNvbS9mci9hcHAvaWQ1NTc5OTc3NTE:bXQ9OCZxdW90OyZndDsNCkFjdGlvbiBUby1EbyZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsgOiBVbiBnZXN0aW9ubmFpcmUgZGUgdGFjaGVzIHRvdXQgZW4gZ2VzdGVzIHBvdXINCmwnaVBob25lIGV0IGwnaVBhZCwgcG91ciBpUGhvbmUgZXQgJmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LnZpcGFkLmZyJnF1b3Q7Jmd0O2lQYWQmbHQ7L2EmZ3Q7Jmx0Oy9saSZndDsNCiZsdDsvdWwmZ3Q7DQombHQ7dWwmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O3N0cm9uZyZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthbXA7YT02OTgxNjgmYW1wO2FtcDtnPTAmYW1wO2FtcDt0ZF9wYXJ0bmVySWQ9MjAwMyZhbXA7YW1wO3VybD1odHRwczovL2l0dW5lcy5hcHBsZS5jb20vZnIvYXBwL2lkNDE1MDU5OTYzP210PTgmcXVvdDsmZ3Q7DQpSYW5kb21DbG91ZCZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsgOiBFY291dGV6IGRlIGxhIG11c2lxdWUgYXUgaGFzYXJkIGF2ZWMgY2V0dGUNCmFwcGxpIG9yaWdpbmFsZSZsdDsvbGkmZ3Q7DQombHQ7L3VsJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2FwcC9pZDU1ODMwNjI3OT9tdD04JnF1b3Q7Jmd0Ow0KaU1QbGF5ZXImbHQ7L2EmZ3Q7Jmx0Oy9zdHJvbmcmZ3Q7IDogc3VwZXJiZSBsZWN0ZXVyIG11bHRpbcOpZGlhIHBvdXIgZmljaGllcnMgeHZpZCBhbmQNCmNvLCBpbnRlcmZhY2UgdHLDqHMgcsOpdXNzaWUsIDUgw6l0b2lsZXMgc3VyIGwnQXBwIFN0b3JlIFVTJmx0Oy9saSZndDsNCiZsdDsvdWwmZ3Q7DQombHQ7dWwmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O3N0cm9uZyZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthbXA7YT02OTgxNjgmYW1wO2FtcDtnPTAmYW1wO2FtcDt0ZF9wYXJ0bmVySWQ9MjAwMyZhbXA7YW1wO3VybD1odHRwczovL2l0dW5lcy5hcHBsZS5jb20vZnIvYXBwL2lkNDgxOTUzNDQwP210PTgmcXVvdDsmZ3Q7DQpDaW5lZnkgLSBTcGVjaWFsIEZYIFN0dWRpbyZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsgOiBEZXMgY2VudGFpbmVzIGQnZWZmZXRzIHNww6ljaWF1eA0KcG91ciB2b3Mgdmlkw6lvcyZsdDsvbGkmZ3Q7DQombHQ7L3VsJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2ZyL2FwcC9hcHBpZGF5LXBvdXItaXBob25lLWRlcy1hcHBzL2lkNTM5OTQ4NzQxP210PTgmcXVvdDsmZ3Q7DQpBcHBpRGF5Jmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyA6IEVjb25vbWlzZXogZW4gbmUgcGF5YW50IHBsdXMgdm9zDQphcHBsaWNhdGlvbnMgOiB0b3VzIGxlcyBqb3VycyB1bmUgYXBwbGkgaVBob25lIGV0IHVuZSBhcHBsaSBpUGFkIChhdQ0KbW9pbnMpIHBhc3NlbnQgZGUgcGF5YW50ZSDDoCBncmF0dWl0ZSBwb3VyIHVuZSBkdXLDqWUgbGltaXTDqWUgZXQgdm91cyBwYXNzZXog4oCmIFVuDQpBcHBpRGF5ICEmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDtoMiZndDtKZXV4IGlQaG9uZSBldCBpUG9kIHRvdWNoIGdyYXR1aXRzIHBvbmN0dWVsbGVtZW50IDombHQ7YnIgLyZndDsmbHQ7L2gyJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2ZyL2FwcC9pZDQ1MDgwOTI5Nj9tdD04JnF1b3Q7Jmd0Ow0KR2xvd2Zpc2ggKEZ1bGwpJmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyA6IFVuIGpldSBkJ2FyY2FkZSBiZWF1IGV0IG5vdMOpIDUgw6l0b2lsZXMgLSA1MA0Kbml2ZWF1eCAtIDUgw6l0b2lsZXMgc3VyIGwnQXBwIFN0b3JlIEZSJmx0O2JyIC8mZ3Q7DQombHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzLzI0LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTJfcy5qcGcmcXVvdDsgYWx0PSZxdW90OzI0LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTIuanBnJnF1b3Q7IHN0eWxlPSZxdW90O2Rpc3BsYXk6YmxvY2s7IG1hcmdpbjowIGF1dG87JnF1b3Q7IHRpdGxlPSZxdW90OzI0LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTIuanBnLCBvY3QuIDIwMTAmcXVvdDsgLyZndDsmbHQ7YnIgLyZndDsmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsgICAgJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2ZyL2FwcC9pZDU2MzI3MDE0Mz9tdD04JnF1b3Q7Jmd0Ow0KV2ltcDogV2hvIFN0b2xlIE15IFBhbnRzPyZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsgOiBVbiBwdXp6bGUgZ2FtZSBwaHlzaXF1ZSA1DQrDqXRvaWxlcyAhIEEgbmUgc3VydG91dCBwYXMgbWFucXVlciAtIDUgw6l0b2lsZXMgc3VyIGwnQXBwIFN0b3JlIEZSLCBwb3VyDQppUGhvbmUgZXQgJmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LnZpcGFkLmZyJnF1b3Q7Jmd0O2lQYWQmbHQ7L2EmZ3Q7Jmx0O2JyIC8mZ3Q7DQombHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzLzI0LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTNfcy5qcGcmcXVvdDsgYWx0PSZxdW90OzI0LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTMuanBnJnF1b3Q7IHN0eWxlPSZxdW90O2Rpc3BsYXk6YmxvY2s7IG1hcmdpbjowIGF1dG87JnF1b3Q7IHRpdGxlPSZxdW90OzI0LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTMuanBnLCBvY3QuIDIwMTAmcXVvdDsgLyZndDsmbHQ7YnIgLyZndDsmbHQ7L2xpJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2ZyL2FwcC9pZDQzMDQzNzUwNz9tdD04JnF1b3Q7Jmd0Ow0KVFJVcHV6emxFJmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyA6IFVuIGJvbiBwZXRpdCBwdXp6bGUgZ2FtZSBwb3VyIHBhdGllbnRlciBhdmFudCBsZQ0KcsOpdmVpbGxvbiAtIDQgw6l0b2lsZXMgc3VyIGwnQXBwIFN0b3JlIFVTLCBwb3VyIGlQaG9uZSBldCAmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cudmlwYWQuZnImcXVvdDsmZ3Q7aVBhZCZsdDsvYSZndDsmbHQ7YnIgLyZndDsNCiZsdDtpbWcgc3JjPSZxdW90O2Fzc2V0cy9mZWVkc19pbWFnZXMvMjQtMTItMjAxMi1hcHBsaXMtZ3JhdHVpdGVzLWlwaG9uZS1pcG9kLXRvdWNoLWlwYWQtNF9zLmpwZyZxdW90OyBhbHQ9JnF1b3Q7MjQtMTItMjAxMi1hcHBsaXMtZ3JhdHVpdGVzLWlwaG9uZS1pcG9kLXRvdWNoLWlwYWQtNC5qcGcmcXVvdDsgc3R5bGU9JnF1b3Q7ZGlzcGxheTpibG9jazsgbWFyZ2luOjAgYXV0bzsmcXVvdDsgdGl0bGU9JnF1b3Q7MjQtMTItMjAxMi1hcHBsaXMtZ3JhdHVpdGVzLWlwaG9uZS1pcG9kLXRvdWNoLWlwYWQtNC5qcGcsIG9jdC4gMjAxMCZxdW90OyAvJmd0OyZsdDticiAvJmd0OyZsdDsvbGkmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O3N0cm9uZyZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthbXA7YT02OTgxNjgmYW1wO2FtcDtnPTAmYW1wO2FtcDt0ZF9wYXJ0bmVySWQ9MjAwMyZhbXA7YW1wO3VybD1odHRwczovL2l0dW5lcy5hcHBsZS5jb20vYXBwL2lkNDkwOTUyMTUyP210PTgmcXVvdDsmZ3Q7DQpTY29yZSEgQ2xhc3NpYyBHb2FscyZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsgOiBVbiBkZSBub3MgamV1IHByw6lmw6lzIGRlIGwnYW5uw6llLCBzaQ0Kdm91cyBuZSBsJ2F2ZXogcGFzIGVuY29yZSBuZSBsYSBtYW5xdWV6IHBhcyAtIDUgw6l0b2lsZXMgc3VyIGwnQXBwIFN0b3JlIEZSLA0KcG91ciBpUGhvbmUgZXQgJmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LnZpcGFkLmZyJnF1b3Q7Jmd0O2lQYWQmbHQ7L2EmZ3Q7Jmx0O2JyIC8mZ3Q7DQombHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzLzI0LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTVfcy5qcGcmcXVvdDsgYWx0PSZxdW90OzI0LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTUuanBnJnF1b3Q7IHN0eWxlPSZxdW90O2Rpc3BsYXk6YmxvY2s7IG1hcmdpbjowIGF1dG87JnF1b3Q7IHRpdGxlPSZxdW90OzI0LTEyLTIwMTItYXBwbGlzLWdyYXR1aXRlcy1pcGhvbmUtaXBvZC10b3VjaC1pcGFkLTUuanBnLCBvY3QuIDIwMTAmcXVvdDsgLyZndDsmbHQ7YnIgLyZndDsmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDtwJmd0OyZsdDticiAvJmd0Ow0KTWFpcyBhdXNzaSA6Jmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2ZyL2FwcC9pZDU3NjY2Njk1Nj9tdD04JnF1b3Q7Jmd0Ow0KTGlnaHQgTGVnZW5kJmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyZsdDticiAvJmd0OyZsdDsvbGkmZ3Q7DQombHQ7L3VsJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2ZyL2FwcC9pZDUwNDYzNDM5NT9tdD04JnF1b3Q7Jmd0Ow0KQ2FtcHVzIExpZmUmbHQ7L2EmZ3Q7Jmx0Oy9zdHJvbmcmZ3Q7Jmx0O2JyIC8mZ3Q7Jmx0Oy9saSZndDsNCiZsdDsvdWwmZ3Q7DQombHQ7dWwmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O3N0cm9uZyZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthbXA7YT02OTgxNjgmYW1wO2FtcDtnPTAmYW1wO2FtcDt0ZF9wYXJ0bmVySWQ9MjAwMyZhbXA7YW1wO3VybD1odHRwczovL2l0dW5lcy5hcHBsZS5jb20vZnIvYXBwL2lkNDMyODc4OTA3P210PTgmcXVvdDsmZ3Q7DQpDb250cm9sIENyYWZ0Jmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyZsdDticiAvJmd0OyZsdDsvbGkmZ3Q7DQombHQ7L3VsJmd0Ow0KJmx0O3VsJmd0Ow0KJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vY2xrLnRyYWRlZG91Ymxlci5jb20vY2xpY2s:cD0yMzc1MyZhbXA7YW1wO2E9Njk4MTY4JmFtcDthbXA7Zz0wJmFtcDthbXA7dGRfcGFydG5lcklkPTIwMDMmYW1wO2FtcDt1cmw9aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL3VzL2FwcC9pZDU4MzcyNDAzMD9tdD04JnF1b3Q7Jmd0Ow0KVHVwc3UmbHQ7L2EmZ3Q7Jmx0Oy9zdHJvbmcmZ3Q7Jmx0O2JyIC8mZ3Q7Jmx0Oy9saSZndDsNCiZsdDsvdWwmZ3Q7DQombHQ7dWwmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O3N0cm9uZyZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly9jbGsudHJhZGVkb3VibGVyLmNvbS9jbGljaz9wPTIzNzUzJmFtcDthbXA7YT02OTgxNjgmYW1wO2FtcDtnPTAmYW1wO2FtcDt0ZF9wYXJ0bmVySWQ9MjAwMyZhbXA7YW1wO3VybD1odHRwczovL2l0dW5lcy5hcHBsZS5jb20vZnIvYXBwL2lkNDc0NjQ2MDc4P210PTgmcXVvdDsmZ3Q7DQpGYXN0IEZ1biZsdDsvYSZndDsmbHQ7L3N0cm9uZyZndDsmbHQ7YnIgLyZndDsmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDt1bCZndDsNCiZsdDtsaSZndDsmbHQ7c3Ryb25nJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL2Nsay50cmFkZWRvdWJsZXIuY29tL2NsaWNrP3A9MjM3NTMmYW1wO2FtcDthPTY5ODE2OCZhbXA7YW1wO2c9MCZhbXA7YW1wO3RkX3BhcnRuZXJJZD0yMDAzJmFtcDthbXA7dXJsPWh0dHBzOi8vaXR1bmVzLmFwcGxlLmNvbS9mci9hcHAvaWQ1MzE1NzAyMzM:bXQ9OCZxdW90OyZndDsNCkJ1c3RlciBTcGlyaXRzJmx0Oy9hJmd0OyZsdDsvc3Ryb25nJmd0OyZsdDticiAvJmd0OyZsdDsvbGkmZ3Q7DQombHQ7L3VsJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O2gyJmd0O0V0IHBvdXIgbCdpUGFkIDombHQ7YnIgLyZndDsmbHQ7L2gyJmd0Ow0KJmx0O3AmZ3Q7Q2Ugc2VyYSBwbHVzIHRhcmQgc3VyICZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3d3dy52aXBhZC5mciZxdW90OyZndDtWSVBhZC5mciZsdDsvYSZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDsmbHQ7YnIgLyZndDsNClZvdXMgYXZleiBtYW5xdcOpIHVuIGRlIG5vcyBiaWxsZXRzIHF1b3RpZGllbnMgPyBDZXJ0YWluZXMgYXBwbGlzIHNvbnQNCnBldXQtw6p0cmUgZW5jb3JlIHByb3Bvc8OpZXMgZ3JhdHVpdGVtZW50IDogJmx0O3N0cm9uZyZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvdGFnL0FwcCUyMEdyYXR1aXRlcyZxdW90OyZndDtSZXRyb3V2ZXogdG91cyBub3MgYmlsbGV0cyBkZXMNCmdyYXR1aXRzIGV0IHByb21vcyBkdSBzb2lyIGljaSBzdXIgaVBob24uZnImbHQ7L2EmZ3Q7Jmx0Oy9zdHJvbmcmZ3Q7Jmx0O2JyIC8mZ3Q7DQombHQ7YnIgLyZndDsNCiZsdDtlbSZndDtFZGl0ZXVycywgdm91cyBhdmV6IGVudmllIGRlIG1ldHRyZSBlbiBhdmFudCB2b3RyZSBhcHBsaWNhdGlvbiAoYmllbiBub3TDqWUpDQphdmVjIHVuZSBqb3VybsOpZSBkZSBncmF0dWl0w6kgcmVsYXnDqWUgcGFyIGlQaG9uLmZyID8gRW52b3lleiBub3VzIHVuIHBldGl0DQptYWlsIMOgIG5ld3MgKCBhICkgaVBob24uZnIgISZsdDsvZW0mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvaWRlZXMtY2FkZWF1eC1ub2VsLWlwaG9uZS1pcG9kLXRvdWNoLWlwYWQmcXVvdDsmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy9ub2VsLTYwMC5qcGcmcXVvdDsgYWx0PSZxdW90O25vZWwtNjAwLmpwZyZxdW90OyBzdHlsZT0mcXVvdDtkaXNwbGF5OmJsb2NrOyBtYXJnaW46MCBhdXRvOyZxdW90OyAvJmd0OyZsdDsvYSZndDsmbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQo8L2Rlc2NyaXB0aW9uPg0KICAgIA0KICAgIA0KICAgIA0KICAgICAgICAgIDxjb21tZW50cz5odHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvSnVzdGUtYXZhbnQtbGUtciVDMyVBOXZlaWxsb24tZGUtbm8lQzMlQUJsLSUzQS1sZXMtamV1eC1ldC1hcHBzLWlQaG9uZS1wb25jdHVlbGxlbWVudC1ncmF0dWl0ZXMtc29udC1saXZyJUMzJUE5cy11bi1wZXUtZW4tYXZhbmNlLSUyMSNjb21tZW50LWZvcm08L2NvbW1lbnRzPg0KICAgICAgPHdmdzpjb21tZW50Pmh0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9KdXN0ZS1hdmFudC1sZS1yJUMzJUE5dmVpbGxvbi1kZS1ubyVDMyVBQmwtJTNBLWxlcy1qZXV4LWV0LWFwcHMtaVBob25lLXBvbmN0dWVsbGVtZW50LWdyYXR1aXRlcy1zb250LWxpdnIlQzMlQTlzLXVuLXBldS1lbi1hdmFuY2UtJTIxI2NvbW1lbnQtZm9ybTwvd2Z3OmNvbW1lbnQ%DQogICAgICA8d2Z3OmNvbW1lbnRSc3M%aHR0cDovL3d3dy5pcGhvbi5mci9mZWVkL2F0b20vY29tbWVudHMvNzEyMTY4PC93Znc6Y29tbWVudFJzcz4NCiAgICAgIDwvaXRlbT4NCiAgICANCiAgPGl0ZW0%DQogICAgPHRpdGxlPkdyaWZmaW4gZmFjZXMgZG9ubmUgYm9ubmUgbWluZSDDoCB2b3RyZSBpUG9kIHRvdWNoIDU8L3RpdGxlPg0KICAgIDxsaW5rPmh0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9HcmlmZmluLWZhY2VzLWRvbm5lLWJvbm5lLW1pbmUtJUMzJUEwLXZvdHJlLWlQb2QtdG91Y2g8L2xpbms%DQogICAgPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj51cm46bWQ1OmZjZDQyMWUwZjBhNjAwMzZhNzViNTBiYTA2YTAwZmI1PC9ndWlkPg0KICAgIDxwdWJEYXRlPk1vbiwgMjQgRGVjIDIwMTIgMTU6MTU6MDAgKzAxMDA8L3B1YkRhdGU%DQogICAgPGRjOmNyZWF0b3I%Z3JvYnVidTwvZGM6Y3JlYXRvcj4NCiAgICAgICAgPGNhdGVnb3J5PkFjY2Vzc29pcmVzIGlQaG9uZSBldCBpUG9kIFRvdWNoPC9jYXRlZ29yeT4NCiAgICAgICAgPGNhdGVnb3J5Pmlwb2QtdG91Y2gtNTwvY2F0ZWdvcnk%ICAgIA0KICAgIDxkZXNjcmlwdGlvbj4mbHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzL2ZhY2UtMV9zLmpwZyZxdW90OyBhbHQ9JnF1b3Q7ZmFjZS0xLmpwZyZxdW90OyBzdHlsZT0mcXVvdDtmbG9hdDpsZWZ0OyBtYXJnaW46IDAgMWVtIDFlbSAwOyZxdW90OyAvJmd0OyBPbiBhIGJlYXVjb3VwIG1vaW5zIHNvdXZlbnQgbCdvY2Nhc2lvbiBkZQ0KcGFybGVyIGRlIHByb3RlY3Rpb24gcG91ciBpUG9kIHRvdWNoIHRvdXQgc2ltcGxlbWVudCwgY2FyIGVsbGVzIHNvbnQgYmVhdWNvdXANCm1vaW5zIG5vbWJyZXVzZXMgZXQgc291dmVudCBwYXMgdHLDqHMgb3JpZ2luYWxlcy4mbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtFbiBjZXR0ZSB2ZWlsbGUgZGUgTm:DqmwsIEdyaWZmaW4gdmllbnQgYWpvdXRlciB1biBwZXUgZGUgZnVuIGF1eCBwcm90ZWN0aW9ucw0KcG91ciBpUG9kIHRvdWNoIGV0IHByb3Bvc2UgZGUgJmx0O3N0cm9uZyZndDtkb25uZXIgdW4gcGV1IGRlIHBlcnNvbm5hbGl0w6kgw6AgY2VzDQpjb3F1ZXMgc2kgc291dmVudCB1biBwZXUgZmFkZXMmbHQ7L3N0cm9uZyZndDsgOiZsdDsvcCZndDsgICAgJmx0O3AmZ3Q7TGUgcHJpbmNpcGUgZXN0IGVuIGZhaXQgdW4gcGV1IGNlbHVpIGRlIE0uUGF0YXRlIG1haXMgw6AgbGEgbW9kZSBpUG9kIHRvdWNoLg0KQWluc2ksIHN1ciBsYSBwYXJ0aWUgYXJyacOocmUgZGUgbGEgY29xdWUsIEdyaWZmaW4gYSBldSBsJ2lkw6llIGQnZWZmZWN0dWVyIHRyb2lzDQpkw6ljb3VwZXMgZGFucyBsZXNxdWVsbGVzIHZpZW5uZW50IHMnaW5zw6lyZXIgZGVzIHlldXgsIGRlcyBib3VjaGVzIG91IGRlcw0KbW91c3RhY2hlcyBpbnRlcmNoYW5nZWFibGVzIGV0IHF1aSBkb25uZXJvbnQgdW4gbG9vayBhbXVzYW50IMOgIGwnaVBvZA0KdG91Y2guJmx0O2JyIC8mZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7YXNzZXRzL2ZlZWRzX2ltYWdlcy9mYWNlLTJfbS5qcGcmcXVvdDsgYWx0PSZxdW90O2ZhY2UtMi5qcGcmcXVvdDsgc3R5bGU9JnF1b3Q7ZGlzcGxheTpibG9jazsgbWFyZ2luOjAgYXV0bzsmcXVvdDsgLyZndDsmbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDtEaXNwb25pYmxlIGVuIHBsdXNpZXVycyBjb2xvcmlzLCBlbGxlIHBsYWlyYSBzYW5zIGF1Y3VuIGRvdXRlIGF1eCBlbmZhbnRzIGV0DQrDoCBjZWxsZXMgZXQgY2V1eCBxdWkgb250IHN1ciBjb25zZXJ2ZXIgdW5lIMOibWUgZCdlbmZhbnQuICZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL3N0b3JlLmdyaWZmaW50ZWNobm9sb2d5LmNvbS9mYWNlcy1mb3ItaXBvZC10b3VjaC01dGgtZ2VuJnF1b3Q7Jmd0O0NvbXB0ZXogMzMkDQpsaXZyYWlzb24gY29tcHJpc2UgcG91ciB2b3VzIGwnb2ZmcmlyIGVuIHZvdXMgcmVuZGFudCBpY2kmbHQ7L2EmZ3Q7Jmx0Oy9wJmd0Ow0KJmx0O2gyJmd0O8OAIGxpcmUgYXVzc2kgOiZsdDsvaDImZ3Q7DQombHQ7dWwmZ3Q7DQombHQ7bGkmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvY29xdWVzLXByb3RlY3Rpb25zLWlwb2QtdG91Y2gtNS1nLXBhcy1jaGVyJnF1b3Q7Jmd0O0Rlcw0KY29xdWVzIGV0IHByb3RlY3Rpb25zIGRpc3BvbmlibGVzIChldCBwYXMgY2jDqHJlcykgcG91ciBsJ2lQb2QgdG91Y2ggNWUNCkfDqW7DqXJhdGlvbiZsdDsvYSZndDsmbHQ7L2xpJmd0Ow0KJmx0Oy91bCZndDsNCiZsdDtwJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL2FwcGFkdmljZS5jb20vYXBwbm4vMjAxMi8xMi90aGUtZ3JpZmZpbi1mYWNlcy1jYXNlLWdpdmVzLXlvdXItbmV3LWlwb2QtdG91Y2gtc29tZS1wZXJzb25hbGl0eSZxdW90OyZndDsNCnNvdXJjZSZsdDsvYSZndDsmbHQ7L3AmZ3Q7DQombHQ7cCZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9pZGVlcy1jYWRlYXV4LW5vZWwtaXBob25lLWlwb2QtdG91Y2gtaXBhZCZxdW90OyZndDsmbHQ7aW1nIHNyYz0mcXVvdDthc3NldHMvZmVlZHNfaW1hZ2VzL25vZWwtNjAwLmpwZyZxdW90OyBhbHQ9JnF1b3Q7bm9lbC02MDAuanBnJnF1b3Q7IHN0eWxlPSZxdW90O2Rpc3BsYXk6YmxvY2s7IG1hcmdpbjowIGF1dG87JnF1b3Q7IC8mZ3Q7Jmx0Oy9hJmd0OyZsdDticiAvJmd0OyZsdDsvcCZndDsNCjwvZGVzY3JpcHRpb24%DQogICAgDQogICAgDQogICAgDQogICAgICAgICAgPGNvbW1lbnRzPmh0dHA6Ly93d3cuaXBob24uZnIvcG9zdC9HcmlmZmluLWZhY2VzLWRvbm5lLWJvbm5lLW1pbmUtJUMzJUEwLXZvdHJlLWlQb2QtdG91Y2gjY29tbWVudC1mb3JtPC9jb21tZW50cz4NCiAgICAgIDx3Znc6Y29tbWVudD5odHRwOi8vd3d3LmlwaG9uLmZyL3Bvc3QvR3JpZmZpbi1mYWNlcy1kb25uZS1ib25uZS1taW5lLSVDMyVBMC12b3RyZS1pUG9kLXRvdWNoI2NvbW1lbnQtZm9ybTwvd2Z3OmNvbW1lbnQ%DQogICAgICA8d2Z3OmNvbW1lbnRSc3M%aHR0cDovL3d3dy5pcGhvbi5mci9mZWVkL2F0b20vY29tbWVudHMvNzEyMTQ5PC93Znc6Y29tbWVudFJzcz4NCiAgICAgIDwvaXRlbT4NCiAgICANCjwvY2hhbm5lbD4NCjwvcnNzPg"}];if(typeof document!="undefined")js.Lib.document=document;if(typeof window!="undefined"){js.Lib.window=window;js.Lib.window.onerror=function(msg,url,line){var f=js.Lib.onerror;if(f==null)return false;return f(msg,[url+":"+line]);};}
js.XMLHttpRequest=window.XMLHttpRequest?XMLHttpRequest:window.ActiveXObject?function(){try{return new ActiveXObject("Msxml2.XMLHTTP");}catch(e){try{return new ActiveXObject("Microsoft.XMLHTTP");}catch(e1){throw"Unable to create XMLHttpRequest object.";}}}:(function($this){var $r;throw"Unable to create XMLHttpRequest object.";return $r;}(this));feffects.Tween._aTweens=new haxe.FastList();feffects.Tween._aPaused=new haxe.FastList();feffects.Tween.INTERVAL=10;haxe.Unserializer.DEFAULT_RESOLVER=Type;haxe.Unserializer.BASE64="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";org.intermedia.Settings.ONLINE_FEED_DELAY=10000;org.intermedia.Settings.DATALOADER_TIMEOUT_MESSAGE="dataloader timeout";org.intermedia.Application.main();